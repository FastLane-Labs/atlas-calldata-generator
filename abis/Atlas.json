{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_escrowDuration",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlteredControlHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlteredUserHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HashChainBroken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "IntentUnfulfilled",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidShortString",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSolverHash",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PostSolverFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PreSolverFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SolverBidUnpaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SolverEVMError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SolverFailedCallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SolverMsgValueUnpaid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SolverOperationReverted",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "StringTooLong",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EIP712DomainChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "callConfig",
          "type": "uint32"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "bidAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct BidData[]",
          "name": "winningBids",
          "type": "tuple[]"
        }
      ],
      "name": "MEVPaymentFailure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "solverTo",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "solverFrom",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "nonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "name": "SolverTxResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "valueReturned",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasRefunded",
          "type": "uint256"
        }
      ],
      "name": "UserTxResult",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "BUNDLER_BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BUNDLER_PREMIUM",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DAPP_TYPE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_TYPE_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "activeEnvironment",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signatory",
          "type": "address"
        }
      ],
      "name": "addSignatory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "asyncNonceFills",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "atlas",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            }
          ],
          "internalType": "struct DAppConfig",
          "name": "dConfig",
          "type": "tuple"
        }
      ],
      "name": "createExecutionEnvironment",
      "outputs": [
        {
          "internalType": "address",
          "name": "executionEnvironment",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "dapps",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "solverSigner",
          "type": "address"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "newBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dappControl",
          "type": "address"
        }
      ],
      "name": "disableDApp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "surplusRecipient",
          "type": "address"
        }
      ],
      "name": "donateToBundler",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eip712Domain",
      "outputs": [
        {
          "internalType": "bytes1",
          "name": "fields",
          "type": "bytes1"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "version",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "verifyingContract",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "salt",
          "type": "bytes32"
        },
        {
          "internalType": "uint256[]",
          "name": "extensions",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "environment",
      "outputs": [
        {
          "internalType": "address",
          "name": "_environment",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "escrowDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            }
          ],
          "internalType": "struct DAppConfig",
          "name": "dConfig",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "control",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserCall",
          "name": "uCall",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "userOpHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "controlCodeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bidsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SolverCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "bidAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BidData[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct SolverOperation[]",
          "name": "solverOps",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "executionEnvironment",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "callChainHash",
          "type": "bytes32"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "accruedGasRebate",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "execution",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEscrowAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "escrowAddress",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "getExecutionEnvironment",
      "outputs": [
        {
          "internalType": "address",
          "name": "executionEnvironment",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "userOpHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "controlCodeHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "bidsHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct SolverCall",
          "name": "sCall",
          "type": "tuple"
        }
      ],
      "name": "getSolverPayload",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payload",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "getUserOperationPayload",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payload",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "userOpHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "callChainHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "controlCodeHash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct DAppProof",
              "name": "proof",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Verification",
          "name": "verification",
          "type": "tuple"
        }
      ],
      "name": "getVerificationPayload",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "payload",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "governance",
      "outputs": [
        {
          "internalType": "address",
          "name": "governance",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "callConfig",
          "type": "uint32"
        },
        {
          "internalType": "uint64",
          "name": "lastUpdate",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "initializeGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dappControl",
          "type": "address"
        }
      ],
      "name": "integrateDApp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            }
          ],
          "internalType": "struct DAppConfig",
          "name": "dConfig",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "userOpHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "controlCodeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bidsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SolverCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "bidAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BidData[]",
              "name": "bids",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct SolverOperation[]",
          "name": "solverOps",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "userOpHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "callChainHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "controlCodeHash",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct DAppProof",
              "name": "proof",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct Verification",
          "name": "verification",
          "type": "tuple"
        }
      ],
      "name": "metacall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "governanceSignatory",
          "type": "address"
        }
      ],
      "name": "nextGovernanceNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nextNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "solverSigner",
          "type": "address"
        }
      ],
      "name": "nextSolverNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nextNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "nextUserNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nextNonce",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "signatory",
          "type": "address"
        }
      ],
      "name": "removeSignatory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "salt",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "signatories",
      "outputs": [
        {
          "internalType": "address",
          "name": "governance",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "enabled",
          "type": "bool"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "solverSigner",
          "type": "address"
        }
      ],
      "name": "solverEscrowBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "solverSigner",
          "type": "address"
        }
      ],
      "name": "solverLastActiveBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lastBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "solverSafetyCallback",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSafe",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxFeePerGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "control",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserCall",
          "name": "uCall",
          "type": "tuple"
        }
      ],
      "name": "testUserOperation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "internalType": "struct UserCall",
              "name": "call",
              "type": "tuple"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct UserOperation",
          "name": "userOp",
          "type": "tuple"
        }
      ],
      "name": "testUserOperation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "callConfig",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "lockState",
          "type": "uint16"
        }
      ],
      "name": "transferDAppERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destination",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "callConfig",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "lockState",
          "type": "uint16"
        }
      ],
      "name": "transferUserERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userNonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "497:8455:28:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;;;;490:43:35;;;-1:-1:-1;;;;;;490:43:35;;;;;;644:63:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;688:15;581::33;3178:431:22;;;;;;;;;;;;;-1:-1:-1;;;3178:431:22;;;;;;;;;;;;;;;;-1:-1:-1;;;3178:431:22;;;3251:45;3282:13;3251:4;:30;;;;:45;;;;:::i;:::-;3243:53;;3317:51;:7;3351:16;3317:33;:51::i;:::-;3306:62;;3392:22;;;;;;;;;;3378:36;;3441:25;;;;;;3424:42;;3494:13;3477:30;;3542:23;4077:11;;4090:14;;4054:81;;;1929:95;4054:81;;;3713:25:77;3754:18;;;3747:34;;;;3797:18;;;3790:34;4106:13:22;3840:18:77;;;3833:34;4129:4:22;3883:19:77;;;3876:61;4018:7:22;;3685:19:77;;4054:81:22;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3542:23;3517:48;;-1:-1:-1;;3597:4:22;3575:27;;;;564:21:35;;;;1653:42:31::1;::::0;;::::1;;::::0;655:51:33::1;::::0;::::1;::::0;672:13:::1;::::0;655:51:::1;;557:19:77::0;;;639:2;610:15;-1:-1:-1;;;;;;606:45:77;601:2;592:12;;585:67;-1:-1:-1;;;677:2:77;668:12;;661:33;719:2;710:12;;299:429;655:51:33::1;;::::0;;-1:-1:-1;;655:51:33;;::::1;::::0;;;;;;645:62;;655:51:::1;645:62:::0;;::::1;::::0;638:69:::1;::::0;793:51;;::::1;::::0;;;-1:-1:-1;793:51:33;;;;;::::1;::::0;742:103:::1;::::0;786:4:::1;::::0;742:35:::1;:103::i;:::-;-1:-1:-1::0;;;;;718:127:33::1;;::::0;-1:-1:-1;497:8455:28;;-1:-1:-1;497:8455:28;2895:341:18;2991:11;3040:2;3024:5;3018:19;:24;3014:216;;;3065:20;3079:5;3065:13;:20::i;:::-;3058:27;;;;3014:216;3142:5;3116:46;3157:5;3142;3116:46;:::i;:::-;-1:-1:-1;1371:66:18;;-1:-1:-1;3014:216:18;2895:341;;;;:::o;3911:294:33:-;4002:28;4042:33;4122:4;;4137:5;;4078:65;;;;;:::i;:::-;-1:-1:-1;;;;;4112:32:77;;;4094:51;;4082:2;4067:18;4078:65:33;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4042:101:33;3911:294;-1:-1:-1;;;;3911:294:33:o;1689:286:18:-;1754:11;1777:17;1803:3;1777:30;;1835:2;1821:4;:11;:16;1817:72;;;1874:3;1860:18;;-1:-1:-1;;;1860:18:18;;;;;;;;:::i;:::-;;;;;;;;1817:72;1955:11;;1938:13;1955:4;1938:13;:::i;:::-;1930:36;;1689:286;-1:-1:-1;;;1689:286:18:o;497:8455:28:-;;;;;;;;:::o;14:280:77:-;83:6;136:2;124:9;115:7;111:23;107:32;104:52;;;152:1;149;142:12;104:52;184:9;178:16;234:10;227:5;223:22;216:5;213:33;203:61;;260:1;257;250:12;203:61;283:5;14:280;-1:-1:-1;;;14:280:77:o;733:127::-;794:10;789:3;785:20;782:1;775:31;825:4;822:1;815:15;849:4;846:1;839:15;865:380;944:1;940:12;;;;987;;;1008:61;;1062:4;1054:6;1050:17;1040:27;;1008:61;1115:2;1107:6;1104:14;1084:18;1081:38;1078:161;;1161:10;1156:3;1152:20;1149:1;1142:31;1196:4;1193:1;1186:15;1224:4;1221:1;1214:15;1078:161;;865:380;;;:::o;1376:545::-;1478:2;1473:3;1470:11;1467:448;;;1514:1;1539:5;1535:2;1528:17;1584:4;1580:2;1570:19;1654:2;1642:10;1638:19;1635:1;1631:27;1625:4;1621:38;1690:4;1678:10;1675:20;1672:47;;;-1:-1:-1;1713:4:77;1672:47;1768:2;1763:3;1759:12;1756:1;1752:20;1746:4;1742:31;1732:41;;1823:82;1841:2;1834:5;1831:13;1823:82;;;1886:17;;;1867:1;1856:13;1823:82;;;1827:3;;;1467:448;1376:545;;;:::o;2097:1352::-;2217:10;;-1:-1:-1;;;;;2239:30:77;;2236:56;;;2272:18;;:::i;:::-;2301:97;2391:6;2351:38;2383:4;2377:11;2351:38;:::i;:::-;2345:4;2301:97;:::i;:::-;2453:4;;2517:2;2506:14;;2534:1;2529:663;;;;3236:1;3253:6;3250:89;;;-1:-1:-1;3305:19:77;;;3299:26;3250:89;-1:-1:-1;;2054:1:77;2050:11;;;2046:24;2042:29;2032:40;2078:1;2074:11;;;2029:57;3352:81;;2499:944;;2529:663;1323:1;1316:14;;;1360:4;1347:18;;-1:-1:-1;;2565:20:77;;;2683:236;2697:7;2694:1;2691:14;2683:236;;;2786:19;;;2780:26;2765:42;;2878:27;;;;2846:1;2834:14;;;;2713:19;;2683:236;;;2687:3;2947:6;2938:7;2935:19;2932:201;;;3008:19;;;3002:26;-1:-1:-1;;3091:1:77;3087:14;;;3103:3;3083:24;3079:37;3075:42;3060:58;3045:74;;2932:201;-1:-1:-1;;;;;3179:1:77;3163:14;;;3159:22;3146:36;;-1:-1:-1;2097:1352:77:o;4156:548::-;4268:4;4297:2;4326;4315:9;4308:21;4358:6;4352:13;4401:6;4396:2;4385:9;4381:18;4374:34;4426:1;4436:140;4450:6;4447:1;4444:13;4436:140;;;4545:14;;;4541:23;;4535:30;4511:17;;;4530:2;4507:26;4500:66;4465:10;;4436:140;;;4440:3;4625:1;4620:2;4611:6;4600:9;4596:22;4592:31;4585:42;4695:2;4688;4684:7;4679:2;4671:6;4667:15;4663:29;4652:9;4648:45;4644:54;4636:62;;;;4156:548;;;;:::o;4709:297::-;4827:12;;4874:4;4863:16;;;4857:23;;4827:12;4892:16;;4889:111;;;-1:-1:-1;;4966:4:77;4962:17;;;;4959:1;4955:25;4951:38;4940:50;;4709:297;-1:-1:-1;4709:297:77:o;:::-;497:8455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "497:8455:28:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;;;;;;18576:8:31;;;497:8455:28;;;;;;18576:8:31;;;2607:359:29;;;;;;;;;;-1:-1:-1;2607:359:29;;;;;:::i;:::-;;:::i;:::-;;598:258:35;;;;;;:::i;:::-;832:17;;;819:30;;;832:17;;819:30;;598:258;;;;1122:14:77;;1115:22;1097:41;;1085:2;1070:18;598:258:35;;;;;;;;713:219:28;;;;;;;;;;-1:-1:-1;713:219:28;;;;;:::i;:::-;;:::i;:::-;;;1870:42:77;1858:55;;;1840:74;;1828:2;1813:18;713:219:28;1694:226:77;1392:419:29;;;;;;;;;;-1:-1:-1;1392:419:29;;;;;:::i;:::-;;:::i;1518:50:30:-;;;;;;;;;;-1:-1:-1;1518:50:30;;;;;:::i;:::-;;;;;;;;;;;;;;;;1003:112:33;;;;;;;;;;-1:-1:-1;1103:5:33;1003:112;;399:30:35;;;;;;;;;;;;;;;7689:255:28;;;;;;;;;;-1:-1:-1;7689:255:28;;;;;:::i;:::-;;:::i;951:45:31:-;;;;;;;;;;;;993:3;951:45;;;;;2782:25:77;;;2770:2;2755:18;951:45:31;2636:177:77;2170:766:38;;;;;;;;;;-1:-1:-1;2170:766:38;;;;;:::i;:::-;;:::i;6704:182:30:-;;;;;;;;;;-1:-1:-1;6704:182:30;;;;;:::i;:::-;;:::i;1295:45::-;;;;;;;;;;-1:-1:-1;1295:45:30;;;;;:::i;:::-;;;;;;;;;;;;;;497:34:33;;;;;;;;;;;;;;;1049:42:31;;;;;;;;;;;;1088:3;1049:42;;795:591:29;;;;;;;;;;-1:-1:-1;795:591:29;;;;;:::i;:::-;;:::i;1098:38:31:-;;;;;;;;;;;;;;;;;;8172:10:77;8160:23;;;8142:42;;8130:2;8115:18;1098:38:31;7998:192:77;11531:171:30;;;;;;;;;;-1:-1:-1;11531:171:30;;;;;:::i;:::-;;:::i;4643:306:31:-;;;;;;;;;;;;;:::i;2942:605:38:-;;;;;;;;;;-1:-1:-1;2942:605:38;;;;;:::i;:::-;;:::i;15381:157:31:-;;;;;;;;;;-1:-1:-1;15381:157:31;;;;;:::i;:::-;;:::i;490:43:35:-;;;;;;;;;;-1:-1:-1;490:43:35;;;;;;;;1121:280:33;;;;;;;;;;-1:-1:-1;1121:280:33;;;;;:::i;:::-;;:::i;873:124::-;;;;;;;;;;-1:-1:-1;973:17:33;;;;873:124;;637:58:29;;;;;;;;;;-1:-1:-1;637:58:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11343:42:77;11331:55;;;11313:74;;11430:14;;11423:22;11418:2;11403:18;;11396:50;11494:18;11482:31;11462:18;;;11455:59;11301:2;11286:18;637:58:29;11119:401:77;2972:180:29;;;;;;;;;;-1:-1:-1;2972:180:29;;;;;:::i;:::-;;:::i;481:52::-;;;;;;;;;;-1:-1:-1;481:52:29;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11753:42:77;11741:55;;;11723:74;;11845:10;11833:23;;;11828:2;11813:18;;11806:51;11905:18;11893:31;11873:18;;;11866:59;11711:2;11696:18;481:52:29;11525:406:77;5021:633:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;3287:1350:31:-;;;;;;:::i;:::-;;:::i;2549:171::-;;;;;;;;;;-1:-1:-1;2549:171:31;;;;;:::i;:::-;2674:25;;2625:17;2674:25;;;:11;:25;;;;;:38;;;;;;;2549:171;2225:376:29;;;;;;;;;;-1:-1:-1;2225:376:29;;;;;:::i;:::-;;:::i;1080:208:30:-;;;;;;;;;;;;1121:167;1080:208;;875:198;;;;;;;;;;;;916:157;875:198;;702:40:29;;;;;;;;;;-1:-1:-1;702:40:29;;;;;:::i;:::-;;;;;;;;;;;;;;1819:584:0;;;;;;;;;;;;;:::i;462:29:33:-;;;;;;;;;;;;;;;938:3040:28;;;;;;:::i;:::-;;:::i;2217:162:31:-;;;;;;;;;;-1:-1:-1;2217:162:31;;;;;:::i;:::-;;:::i;7950:446:28:-;;;;;;;;;;-1:-1:-1;7950:446:28;;;;;:::i;:::-;;:::i;11708:128:30:-;;;;;;;;;;-1:-1:-1;11708:128:30;;;;;:::i;:::-;;:::i;3984:724:28:-;;;;;;:::i;:::-;;:::i;2385:158:31:-;;;;;;;;;;-1:-1:-1;2385:158:31;;;;;:::i;:::-;2504:25;;2459:15;2504:25;;;:11;:25;;;;;:31;;;;2385:158;1817:402:29;;;;;;;;;;-1:-1:-1;1817:402:29;;;;;:::i;:::-;;:::i;1874:337:31:-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;;-1:-1:-1;1572:26:0;;;;;;;;2607:359:29;2720:22;;;;2688:29;2720:22;;;:10;:22;;;;;;;;;2688:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2761:10;:32;2753:67;;;;;;;17083:2:77;2753:67:29;;;17065:21:77;17122:2;17102:18;;;17095:30;17161:24;17141:18;;;17134:52;17203:18;;2753:67:29;;;;;;;;;2891:18;;2911;;;;;2855:75;;2831:11;;2855:75;;2866:10;;2878:11;;2911:18;;2855:75;17471:42:77;17540:15;;;17522:34;;17592:15;;;17587:2;17572:18;;17565:43;17644:15;;17639:2;17624:18;;17617:43;17708:10;17696:23;;;;17691:2;17676:18;;17669:51;17448:3;17433:19;;17232:494;2855:75:29;;;;;;;;;;;;;;2845:86;;2855:75;2845:86;;;;2949:10;;;;:5;:10;;;;;2942:17;-1:-1:-1;;;;2607:359:29:o;713:219:28:-;796:28;859:66;884:7;893:10;905;;;;884:7;905:10;:::i;:::-;:19;;;859:24;:66::i;:::-;836:89;713:219;-1:-1:-1;;713:219:28:o;1392:419:29:-;1504:22;;;;1472:29;1504:22;;;:10;:22;;;;;;;;;1472:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1545:10;:32;1537:67;;;;;;;17083:2:77;1537:67:29;;;17065:21:77;17122:2;17102:18;;;17095:30;17161:24;17141:18;;;17134:52;17203:18;;1537:67:29;16881:346:77;1537:67:29;1623:47;:22;;;1668:1;1623:22;;;:11;:22;;;;;:33;;:47;1615:83;;;;;;;17933:2:77;1615:83:29;;;17915:21:77;17972:2;17952:18;;;17945:30;18011:25;17991:18;;;17984:53;18054:18;;1615:83:29;17731:347:77;1615:83:29;-1:-1:-1;1734:70:29;;;;;;;;;;;;;;1788:4;1734:70;;;;;;;-1:-1:-1;1734:70:29;;;;;;1709:22;;;;;:11;:22;;;;;;;:95;;;;;;;;1734:70;1709:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:419::o;7689:255:28:-;7764:4;;7798:13;;;;;;;;:::i;:::-;7780:31;;7821:17;7841:33;7866:7;7841:24;:33::i;:::-;7821:53;;7891:46;7910:5;7917:7;7926:10;7891:18;:46::i;:::-;7884:53;7689:255;-1:-1:-1;;;;7689:255:28:o;2170:766:38:-;2616:57;2644:4;2650:10;2662;2616:27;:57::i;:::-;2717:119;2759:9;1342:22;137:30:58;144:18;166:1;137:30;:::i;:::-;1310:55:38;;;;:::i;:::-;1304:1;:62;;;;;;1204:31;144:18:58;137:30;;166:1;137:30;:::i;:::-;1172:64:38;;;;:::i;:::-;1166:1;:71;;;;;;1125:28;1118:36;137:30:58;144:18;166:1;137:30;:::i;:::-;1093:61:38;;;;:::i;:::-;1087:68;;:1;:68;;1052:21;1045:29;;;;;;;;:::i;:::-;137:30:58;144:18;166:1;137:30;:::i;:::-;1020:54:38;;;;:::i;:::-;1014:61;;:1;:61;;:141;:223;:352;2717:16;:119::i;:::-;2873:56;:29;;;2903:4;2909:11;2922:6;2873:29;:56::i;:::-;2170:766;;;;;;;:::o;6704:182:30:-;6791:15;6828:51;6845:33;6859:12;:18;;;6845:13;:33::i;:::-;6828:16;:51::i;795:591:29:-;864:13;893:10;880:41;;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;864:59;-1:-1:-1;942:10:29;:19;;;;934:54;;;;;;;17083:2:77;934:54:29;;;17065:21:77;17122:2;17102:18;;;17095:30;17161:24;17141:18;;;17134:52;17203:18;;934:54:29;16881:346:77;934:54:29;1007:43;:18;;;1048:1;1007:18;;;:11;:18;;;;;:29;;:43;999:75;;;;;;;19092:2:77;999:75:29;;;19074:21:77;19131:2;19111:18;;;19104:30;19170:21;19150:18;;;19143:49;19209:18;;999:75:29;18890:343:77;999:75:29;1085:17;1105:36;1130:10;1105:24;:36::i;:::-;1189:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;1267:12;1189:93;;;;;;;;1152:22;;;-1:-1:-1;1152:22:29;;;:10;:22;;;;;:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1314:65;;;;;;;;;;1152:130;1314:65;;;;;;;;;;;;1293:18;;;:11;:18;;;;;;;:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;795:591:29:o;11531:171:30:-;11614:15;11651:44;11668:26;11682:6;:11;;;11668:13;:26::i;4643:306:31:-;4740:10;:17;4697:7;;4772:18;;;4768:57;;4813:1;4806:8;;;4643:306;:::o;4768:57::-;4835:16;4854:10;4865:15;4879:1;4865:13;:15;:::i;:::-;4854:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;;;;;;;-1:-1:-1;4909:32:31;4930:11;4854:38;4909:32;:::i;:::-;4902:39;;;;4643:306;:::o;2942:605:38:-;3221:57;3249:4;3255:10;3267;3221:27;:57::i;:::-;3322:119;3364:9;1770:22;137:30:58;144:18;166:1;137:30;:::i;:::-;1738:55:38;;;;:::i;:::-;1732:1;:62;;;;;;1694:25;144:18:58;137:30;;166:1;137:30;:::i;:::-;1662:58:38;;;;:::i;:::-;1656:1;:65;;;;;;1612:31;1605:39;;3322:119;3478:62;:29;;;3508:10;3520:11;3533:6;3478:29;:62::i;15381:157:31:-;15455:15;15492:39;15509:21;15524:5;15509:14;:21::i;1121:280:33:-;1252:28;1319:75;1344:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;1362:10;:19;;;1383:10;1319:24;:75::i;:::-;1296:98;1121:280;-1:-1:-1;;;1121:280:33:o;2972:180:29:-;3102:32;;;3053:17;3102:32;;;:11;:32;;;;;:38;3094:51;;3102:38;;;;;3144:1;3094:51;:::i;5021:633:22:-;5136:13;5163:18;;5136:13;;;5163:18;5427:41;:5;5136:13;5427:26;:41::i;:::-;5482:47;:8;5512:16;5482:29;:47::i;:::-;5621:16;;;5605:1;5621:16;;;;;;;;;5376:271;;;;-1:-1:-1;5376:271:22;;-1:-1:-1;5543:13:22;;-1:-1:-1;5578:4:22;;-1:-1:-1;5605:1:22;-1:-1:-1;5621:16:22;-1:-1:-1;5376:271:22;-1:-1:-1;5021:633:22:o;3287:1350:31:-;3490:10;:24;;;;:59;;-1:-1:-1;3532:17:31;;;;3518:10;:31;3490:59;3482:99;;;;;;;20455:2:77;3482:99:31;;;20437:21:77;20494:2;20474:18;;;20467:30;20533:29;20513:18;;;20506:57;20580:18;;3482:99:31;20253:351:77;3482:99:31;3595:9;3608:1;3595:14;3591:51;;3287:1350;:::o;3591:51::-;3652:16;3678:23;3690:11;3678:9;:23;:::i;:::-;3737:10;:17;3652:50;;-1:-1:-1;3713:21:31;3769:18;;;3765:229;;-1:-1:-1;3819:143:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3803:10;:160;;;;;;;-1:-1:-1;3803:160:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3287:1350::o;3765:229::-;4004:27;4034:10;4045:15;4059:1;4045:13;:15;:::i;:::-;4034:27;;;;;;;;:::i;:::-;;;;;;;;;;4004:57;;;;;;;;4034:27;;;;4004:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4191:38:31;;;;;4187:212;;4261:9;4245:8;:12;;:25;;;;;;;:::i;:::-;;;;;-1:-1:-1;4284:19:31;;;:32;;4307:9;;4284:19;:32;;4307:9;;4284:32;:::i;:::-;;;;;-1:-1:-1;4360:8:31;4330:10;4341:15;4355:1;4341:13;:15;:::i;:::-;4330:27;;;;;;;;:::i;:::-;;;;;;;;;;:38;;:27;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3287:1350:31:o;4187:212::-;4482:37;;;;;4529:24;;;:12;;;:24;4563:19;;;:32;;4544:9;;4563:19;:32;;4544:9;;4563:32;:::i;:::-;;;;;;;;4605:10;:25;;;;;;;-1:-1:-1;4605:25:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;3287:1350:31:o;2225:376:29:-;2340:22;;;;2308:29;2340:22;;;:10;:22;;;;;;;;;2308:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2381:10;:32;2373:67;;;;;;;17083:2:77;2373:67:29;;;17065:21:77;17122:2;17102:18;;;17095:30;17161:24;17141:18;;;17134:52;17203:18;;2373:67:29;16881:346:77;2373:67:29;2511:18;;2531;;;;;2475:75;;2451:11;;2475:75;;2486:10;;2498:11;;2531:18;;2475:75;17471:42:77;17540:15;;;17522:34;;17592:15;;;17587:2;17572:18;;17565:43;17644:15;;17639:2;17624:18;;17617:43;17708:10;17696:23;;;;17691:2;17676:18;;17669:51;17448:3;17433:19;;17232:494;2475:75:29;;;;;;;;;;;;;;2465:86;;2475:75;2465:86;;;;2562:10;;;;:5;:10;;;;;2575:19;;;;;2562:32;;;-1:-1:-1;;;2225:376:29:o;1819:584:0:-;1873:7;;1853:4;;1873:7;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;21428:74:77;;;2221:17:0;21518:18:77;;;21511:34;2196:43:0;;;;;;;;;21401:18:77;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;938:3040:28:-;1298:17;1318:9;1298:29;-1:-1:-1;1472:4:28;1670:10;1643:23;;;;:18;;;:23;:::i;:::-;:37;;;;:92;;;;-1:-1:-1;1685:50:28;1697:11;;;;:6;:11;:::i;:::-;:14;;;;;;;;;:::i;:::-;1713:7;1722:12;1685:11;:50::i;:::-;1684:51;1643:92;1639:136;;;-1:-1:-1;1759:5:28;1639:136;1817:10;1797:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;:30;;;;:63;;;;;1832:28;1844:7;1853:6;1832:11;:28::i;:::-;1831:29;1797:63;1793:109;;;-1:-1:-1;1885:5:28;1793:109;2048:28;2079:116;2110:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;2128:34;;;;2164:10;2128:18;2164:10;;:7;:10;:::i;:::-;2176:18;;;;;;;;:::i;:::-;2079:30;:116::i;:::-;2048:147;-1:-1:-1;2312:11:28;;;;:6;:11;:::i;:::-;:17;;;2300:9;:29;2296:53;;;2341:5;2333:13;;2296:53;2440:19;2458:1;2440:15;:19;:::i;:::-;2420:39;;;;2416:63;;2471:5;2463:13;;2416:63;2507:11;;;;:6;:11;:::i;:::-;:20;;;2492:12;:35;:81;;;-1:-1:-1;2546:27:28;;;;2531:12;:42;2492:81;2488:105;;;2585:5;2577:13;;2488:105;2620:11;;;;:6;:11;:::i;:::-;:24;;;2606:11;:38;2602:62;;;2656:5;2648:13;;2602:62;2677:29;;;;2673:67;;2732:5;2724:13;;2673:67;2754:38;:18;;;;;;;;:::i;:::-;:36;;;:38::i;:::-;2753:39;:83;;;-1:-1:-1;2796:40:28;:18;;;;;;;;:::i;:::-;:38;;;:40::i;:::-;2749:158;;;2876:1;2856:21;;;2852:45;;2889:5;2881:13;;2852:45;3083:5;3078:43;;3104:7;;;;;3078:43;3162;3184:20;3162:21;:43::i;:::-;3220:4;:12;3240:9;3251:7;3260:11;;;;:6;:11;:::i;:::-;3220:119;;;;;;;;;;;;;;3273:9;;;;3284:20;;3306:32;;;;;3220:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3220:119:28;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3216:634;;3735:39;:18;;;;;;;;:::i;:::-;:37;;;:39::i;:::-;3731:109;;;3794:31;;;;;30460:2:77;3794:31:28;;;30442:21:77;30499:2;30479:18;;;30472:30;30538:23;30518:18;;;30511:51;30579:18;;3794:31:28;30258:345:77;3731:109:28;3216:634;;;3402:48;;;;;;;;;;;;;;;;;;3433:16;3402:11;:48::i;:::-;3532:64;3550:9;3561:16;3579:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;3532:17;:64::i;:::-;3353:255;3216:634;3888:20;1486:17:35;:28;;;;481:1;1486:28;;;1437:84;3888:20:28;3919:52;;;;;;;;;;;;;;;;;;3961:9;3949:21;;:9;:21;:::i;:::-;3919:11;:52::i;:::-;1287:2691;;;938:3040;;;;;;:::o;2217:162:31:-;2336:25;;;2287:17;2336:25;;;:11;:25;;;;;:31;2328:44;;2336:31;;;;;2371:1;2328:44;:::i;7950:446:28:-;8031:4;8072;8051:9;;;;:6;:9;:::i;:::-;:26;;;8047:47;;-1:-1:-1;8087:5:28;;7950:446;-1:-1:-1;7950:446:28:o;8047:47::-;8103:15;8121:11;;;;:6;:11;:::i;:::-;:19;;;;;;;;;:::i;:::-;8103:37;;8150:17;8170:33;8195:7;8170:24;:33::i;:::-;8150:53;;8214:25;8242:43;;;;;;;;8253:6;:11;;;;;;;;:::i;:::-;:19;;;;;;;;;:::i;:::-;8242:43;;;;;;8274:10;8242:43;;;;;8214:71;;8303:30;8317:7;8326:6;8303:13;:30::i;:::-;:86;;;;-1:-1:-1;8337:52:28;8356:11;;;;:6;:11;:::i;:::-;8369:7;8378:10;8337:18;:52::i;:::-;8296:93;7950:446;-1:-1:-1;;;;;7950:446:28:o;11708:128:30:-;11809:16;;;11768:17;11809:16;;;:10;:16;;;;;;:20;;11828:1;11809:20;:::i;3984:724:28:-;4218:24;4357:10;4379:4;4357:27;4349:61;;;;;;;30810:2:77;4349:61:28;;;30792:21:77;30849:2;30829:18;;;30822:30;30888:23;30868:18;;;30861:51;30929:18;;4349:61:28;30608:345:77;4349:61:28;4490:60;4524:7;4533:5;4540:9;;4490:33;:60::i;:::-;4473:13;:77;4465:113;;;;;;;31160:2:77;4465:113:28;;;31142:21:77;31199:2;31179:18;;;31172:30;31238:25;31218:18;;;31211:53;31281:18;;4465:113:28;30958:347:77;4465:113:28;4644:57;4653:7;4662:5;4669:9;;4680:20;4644:8;:57::i;:::-;4625:76;3984:724;-1:-1:-1;;;;;;;3984:724:28:o;1817:402:29:-;1932:22;;;;1900:29;1932:22;;;:10;:22;;;;;;;;;1900:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1973:10;:32;;:59;;-1:-1:-1;2009:10:29;:23;;;;1973:59;1965:93;;;;;;;31512:2:77;1965:93:29;;;31494:21:77;31551:2;31531:18;;;31524:30;31590:23;31570:18;;;31563:51;31631:18;;1965:93:29;31310:345:77;1965:93:29;2114:18;;2077:55;:22;;;2114:18;2077:22;;;:11;:22;;;;;:33;;;:55;;;2069:94;;;;;;;31862:2:77;2069:94:29;;;31844:21:77;31901:2;31881:18;;;31874:30;31940:28;31920:18;;;31913:56;31986:18;;2069:94:29;31660:350:77;2069:94:29;-1:-1:-1;2174:22:29;;2207:5;2174:22;;;:11;:22;;;;;:38;;;;;;-1:-1:-1;1817:402:29:o;1874:337:31:-;1573:17:35;;1956:18:31;;1573:29:35;:17;481:1;1573:29;1565:70;;;;;;;32217:2:77;1565:70:35;;;32199:21:77;32256:2;32236:18;;;32229:30;32295;32275:18;;;32268:58;32343:18;;1565:70:35;32015:352:77;1565:70:35;2088:25:31::1;::::0;::::1;;::::0;;;:11:::1;:25;::::0;;;;:53;;2131:9:::1;::::0;2088:25;:53:::1;::::0;2131:9;;2088:53:::1;;;:::i;:::-;::::0;;::::1;::::0;;;::::1;;::::0;;::::1;;::::0;;::::1;::::0;;::::1;;;::::0;;;2172:25:::1;::::0;;;::::1;-1:-1:-1::0;2172:25:31;;;:11:::1;:25;::::0;;;;:31;;;::::1;::::0;;-1:-1:-1;;1874:337:31:o;2904:1001:33:-;3040:28;;3124:87;3146:10;;;;:7;:10;:::i;:::-;3158:18;;;;;;;;:::i;:::-;3178:9;3189:4;3195:15;3124:21;:87::i;:::-;3084:127;;3408:4;3401:12;;3451:4;3486;3547:12;3530:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;3520:41;;;;;;3355:232;;;;;;;;;;32809:66:77;32797:79;;;;32785:92;;32914:2;32910:15;;;;32927:66;32906:88;32902:1;32893:11;;32886:109;33020:2;33011:12;;33004:28;33057:2;33048:12;;33041:28;33094:2;33085:12;;32574:529;3355:232:33;;;;;;;;;;;;;;3320:289;;3355:232;3320:289;;;;;-1:-1:-1;3666:29:33;;;;3662:237;;3846:19;;3743:4;;;;3841:2;3823:21;;3725:15;3812:63;3788:87;;3770:119;3662:237;3074:831;2904:1001;;;;;:::o;229:226:55:-;297:17;326:28;370:10;357:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;326:71;;420:28;437:10;420:16;:28::i;8402:548:28:-;8514:4;8534:10;:15;;8548:1;8534:15;8530:58;;-1:-1:-1;8572:5:28;8565:12;;8530:58;8598:28;8629:94;8673:10;;;;:5;:10;:::i;:::-;8685:7;:16;;;8703:7;8712:10;8629:30;:94::i;:::-;8598:125;-1:-1:-1;8738:29:28;;;;:43;;:77;;-1:-1:-1;8785:16:28;;;;:30;8738:77;8734:120;;;8838:5;8831:12;;;;;8734:120;8871:72;;;;;:65;;;;;;:72;;8937:5;;8871:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3553:321:38:-;3732:81;3763:4;3769:10;:19;;;3790:10;3802;3732:30;:81::i;:::-;3718:95;;:10;:95;;;3697:170;;;;;;;35069:2:77;3697:170:38;;;35051:21:77;35108:2;35088:18;;;35081:30;35147;35127:18;;;35120:58;35195:18;;3697:170:38;34867:352:77;3697:170:38;3553:321;;;:::o;3880:260::-;3998:21;3986:9;:33;:38;;4023:1;3986:38;3978:76;;;;;;;35426:2:77;3978:76:38;;;35408:21:77;35465:2;35445:18;;;35438:30;35504:27;35484:18;;;35477:55;35549:18;;3978:76:38;35224:349:77;3978:76:38;973:17:33;;;;4072:10:38;:27;4064:69;;;;;;;35780:2:77;4064:69:38;;;35762:21:77;35819:2;35799:18;;;35792:30;35858:31;35838:18;;;35831:59;35907:18;;4064:69:38;35578:353:77;4064:69:38;3880:260;;:::o;1328:1616:27:-;1466:12;1636:4;1630:11;1778:66;1759:17;1752:93;1892:4;1888:1;1869:17;1865:25;1858:39;1976:2;1971;1952:17;1948:26;1941:38;2056:6;2051:2;2032:17;2028:26;2021:42;2860:2;2857:1;2852:3;2833:17;2830:1;2823:5;2816;2811:52;2379:16;2372:24;2366:2;2348:16;2345:24;2341:1;2337;2331:8;2328:15;2324:46;2321:76;2121:756;2110:767;;;2905:7;2897:40;;;;;;;36138:2:77;2897:40:27;;;36120:21:77;36177:2;36157:18;;;36150:30;36216:22;36196:18;;;36189:50;36256:18;;2897:40:27;35936:344:77;5973:432:30;6043:17;916:157;6167:5;:10;;;6195:5;:8;;;6221:5;:11;;;6250:5;:14;;;6282:5;:16;;;6316:5;:19;;;6353:5;:21;;;6107:281;;;;;;;;;;;;;;36628:25:77;;;36672:42;36750:15;;;36745:2;36730:18;;36723:43;36802:15;;;;36797:2;36782:18;;36775:43;36849:2;36834:18;;36827:34;;;;36892:3;36877:19;;36870:35;36936:3;36921:19;;36914:35;36980:3;36965:19;;36958:35;;;;37024:3;37009:19;;37002:35;36615:3;36600:19;;36285:758;6107:281:30;;;;;;;;;;;;;6084:314;;;;;;6072:326;;5973:432;;;:::o;4768:165:22:-;4845:7;4871:55;4893:20;:18;:20::i;:::-;4915:10;8536:4:21;8530:11;8566:10;8554:23;;8606:4;8597:14;;8590:39;;;;8658:4;8649:14;;8642:34;8712:4;8697:20;;;8336:397;10798:483:30;10867:17;1121:167;10991:5;:10;;;11019:5;:8;;;11045:5;:14;;;11077:5;:9;;;11104:5;:11;;;11133:5;:18;;;11169:5;:11;;;11198:5;:13;;;11239:5;:10;;;11229:21;;;;;;10931:333;;;;;;;;;;;;;;;;37447:25:77;;;37491:42;37569:15;;;37564:2;37549:18;;37542:43;37621:15;;;37616:2;37601:18;;37594:43;37668:2;37653:18;;37646:34;;;;37711:3;37696:19;;37689:35;;;;37755:3;37740:19;;37733:35;;;;37799:3;37784:19;;37777:35;37843:3;37828:19;;37821:35;37893:15;;;37887:3;37872:19;;37865:44;37940:3;37925:19;;37918:35;37434:3;37419:19;;37048:911;14847:528:31;14921:18;1445:186:65;15043:10:31;;;;:5;:10;:::i;:::-;15071:8;;;;;;;;:::i;:::-;15097:11;;;;15126:9;;;;15153:11;;;;15182:18;;;;15218:16;;;;15252:21;;;;15291:14;;;;15333:10;;;;15097:5;15333:10;:::i;:::-;15323:21;;;;;;;:::i;:::-;;;;;;;;;;14981:377;;;39253:25:77;;;;39297:42;39375:15;;;39355:18;;;39348:43;39427:15;;;;39407:18;;;39400:43;39459:18;;;39452:34;;;;39502:19;;;39495:35;;;;39546:19;;;39539:35;;;;39590:19;;;39583:35;39634:19;;;39627:35;39678:19;;;39671:35;39722:19;;;39715:35;39766:19;;;39759:36;;;;39225:19;;14981:377:31;38825:976:77;1407:386:33;1547:28;1591:25;1632:10;1619:38;;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1591:68;;1701:85;1732:4;1738:15;1755:7;:10;;;1767:7;:18;;;1701:30;:85::i;3367:268:18:-;3461:13;1371:66;3490:47;;3486:143;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3486:143;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:268;;;;:::o;2145:3822:30:-;2283:4;2430:34;2451:12;2430:20;:34::i;:::-;2422:72;;;;;;;41099:2:77;2422:72:30;;;41081:21:77;41138:2;41118:18;;;41111:30;41177:27;41157:18;;;41150:55;41222:18;;2422:72:30;40897:349:77;2422:72:30;3087:36;3126:11;3087:36;3138:23;;;;:18;;;:23;:::i;:::-;3126:36;;;;;;;;;;;;;;;;;;-1:-1:-1;3126:36:30;3087:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3202:10:30;;;;;;:::i;:::-;3177:35;;:21;;;;;;;;:::i;:::-;:35;;;3173:80;;3236:5;3228:14;;;;;3173:80;3412:9;:17;;;3407:63;;3453:5;3445:14;;;;;3407:63;3573:11;3608:10;;;;:7;:10;:::i;:::-;3630:20;;3620:8;;3652:18;;;;;;;;:::i;:::-;3597:74;;;17471:42:77;17540:15;;;3597:74:30;;;17522:34:77;17592:15;;;17572:18;;;17565:43;17644:15;;17624:18;;;17617:43;17708:10;17696:23;;;17676:18;;;17669:51;17433:19;;3597:74:30;;;;;;;;;;;;;3587:85;;3597:74;3587:85;;;;;-1:-1:-1;4041:1:30;;4010:10;;;;:7;:10;:::i;:::-;:19;;;:33;:70;;;-1:-1:-1;4061:10:30;;;;:7;:10;:::i;:::-;4047;;;;:5;:10;;;;;;4061:19;;;;;;4047:33;;4010:70;4006:115;;;4104:5;4096:14;;;;;;4006:115;4367:34;;;;4344:10;4367:18;4344:10;;:7;:10;:::i;:::-;:19;;;:57;4340:102;;4425:5;4417:14;;;;;;4340:102;4483:20;4502:1;4483:16;:20;:::i;:::-;4456:47;;:24;;;;:47;4452:92;;;4527:5;4519:14;;;;;;4452:92;4964:41;:18;;;;;;;;:::i;:::-;:39;;;:41::i;:::-;4960:977;;;5053:15;;;;:19;;5071:1;5053:19;:::i;:::-;5025:47;;:12;:18;;:24;;;:47;5021:100;;5100:5;5092:14;;;;;;5021:100;5148:11;:36;5160:23;;;;:18;;;:23;:::i;:::-;5148:36;;;;;;;;;;;;;-1:-1:-1;5148:36:30;5146:44;;;;;;;;;;;;;;;;;;;;;;;4960:977;;;5625:21;5670:23;;;;:18;;;:23;:::i;:::-;5695:18;;;;;;;;:::i;:::-;5715:28;:24;;;;5742:1;5715:28;:::i;:::-;5659:85;;;41854:42:77;41842:55;;;5659:85:30;;;41824:74:77;41946:10;41934:23;;;41914:18;;;41907:51;;;;41974:18;;;41967:34;41797:18;;5659:85:30;;;;;;;;;;;;;5649:96;;5659:85;5649:96;;;;5818:1;5776:30;;;:15;:30;;;;;;5649:96;;-1:-1:-1;5776:44:30;:30;:44;5772:97;;5848:5;5840:14;;;;;;;5772:97;5916:10;;;;:7;:10;:::i;:::-;5883:30;;;;:15;:30;;;;;;:43;;;;;;;;;;;;;;4960:977;-1:-1:-1;5955:4:30;;2145:3822;-1:-1:-1;;;;;2145:3822:30:o;6974:1954::-;7089:4;7249:28;7270:6;7249:20;:28::i;:::-;7241:66;;;;;;;42214:2:77;7241:66:30;;;42196:21:77;42253:2;42233:18;;;42226:30;42292:27;42272:18;;;42265:55;42337:18;;7241:66:30;42012:349:77;7241:66:30;7345:10;;;;:7;:10;:::i;:::-;7322:33;;:11;;;;:6;:11;:::i;:::-;:19;;;;;;;;;:::i;:::-;:33;;;7318:78;;-1:-1:-1;7379:5:30;7371:14;;7318:78;7430:20;7449:1;7430:16;:20;:::i;:::-;7410:40;;:11;;;;:6;:11;:::i;:::-;:17;;;:40;7406:85;;;-1:-1:-1;7474:5:30;7466:14;;7406:85;7501:17;7521:10;7501:17;7532:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;7521:28;;;;;;;;;;;;;;;;7501:48;;7978:41;:7;:18;;;;;;;;;;:::i;:41::-;7974:924;;;8060:13;:9;8072:1;8060:13;:::i;:::-;8039:11;;;;:6;:11;:::i;:::-;:17;;;:34;8035:87;;8101:5;8093:14;;;;;8035:87;8149:10;:28;8160:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;8149:28;;;;;;;;;;;;;-1:-1:-1;8149:28:30;8147:30;;;;;;7974:924;;;8600:21;8645:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;8663:18;;;;;;;;:::i;:::-;8683:11;;;;:6;:11;:::i;:::-;:21;;:17;;;8703:1;8683:21;:::i;:::-;8634:71;;;41854:42:77;41842:55;;;8634:71:30;;;41824:74:77;41946:10;41934:23;;;41914:18;;;41907:51;;;;41974:18;;;41967:34;41797:18;;8634:71:30;;;;;;;;;;;;;8624:82;;8634:71;8624:82;;;;8779:1;8737:30;;;:15;:30;;;;;;8624:82;;-1:-1:-1;8737:44:30;:30;:44;8733:97;;8809:5;8801:14;;;;;;8733:97;8877:10;;;;:7;:10;:::i;:::-;8844:30;;;;:15;:30;;;;;;:43;;;;;;;;;;;;;;7974:924;-1:-1:-1;8916:4:30;;6974:1954;-1:-1:-1;;;6974:1954:30:o;1959:939:33:-;2141:28;2364:12;2414:4;2449;2580:157;2643:10;2655;2667:9;2678:4;2684:15;2580:21;:157::i;:::-;2526:245;;;;;;;;:::i;:::-;;;;;;;;;;;;;2483:318;;;;;;2318:509;;;;;;;;;;32809:66:77;32797:79;;;;32785:92;;32914:2;32910:15;;;;32927:66;32906:88;32902:1;32893:11;;32886:109;33020:2;33011:12;;33004:28;33057:2;33048:12;;33041:28;33094:2;33085:12;;32574:529;2318:509:33;;;;;;;;;;;;;;2283:566;;2318:509;2283:566;;;;;1959:939;-1:-1:-1;;;;;1959:939:33:o;5143:178:55:-;5212:16;5280:27;5273:35;5268:40;;:1;:40;;5255:10;:53;;;5312:1;5255:58;;5240:74;;5143:178;;;:::o;4768:177::-;4839:15;4905:26;4898:34;;862:145:35;1573:17;;:29;:17;481:1;1573:29;1565:70;;;;;;;32217:2:77;1565:70:35;;;32199:21:77;32256:2;32236:18;;;32229:30;32295;32275:18;;;32268:58;32343:18;;1565:70:35;32015:352:77;1565:70:35;960:17:::1;:40:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;862:145::o;5327:179:55:-;5397:16;5465:27;5458:35;;6548:139:12;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;6612:15;:68::i;9984:2518:31:-;10203:30;10236:10;10203:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10272:10;;10265:17;;;;:::i;:::-;10293:20;1088:3;993;10352:11;10339:9;10318:18;:9;10330:6;10318:18;:::i;:::-;:30;;;;:::i;:::-;10317:46;;;;:::i;:::-;:64;;;;:::i;:::-;10316:81;;;;:::i;:::-;10293:104;-1:-1:-1;10407:21:31;10431:30;10450:11;10431:16;:30;:::i;:::-;10407:54;;10471:20;10650:12;10634:13;:28;10630:1331;;;10678:57;10710:10;10722:12;10678:31;:57::i;:::-;10749:67;10781:4;10787:28;10803:12;10787:13;:28;:::i;:::-;10749:31;:67::i;:::-;-1:-1:-1;10858:3:31;10630:1331;;;10958:9;:16;10978:1;10958:21;10954:1007;;10995:58;11027:10;11039:13;10995:31;:58::i;10954:1007::-;11181:9;11208:1;11191:9;:16;:18;;;;:::i;:::-;11181:29;;;;;;;;:::i;:::-;;;;;;;:40;;;:45;;11225:1;11181:45;11177:784;;11242:58;11274:10;11286:13;11242:31;:58::i;11177:784::-;11437:28;11452:13;11437:12;:28;:::i;:::-;11394:9;11421:1;11404:9;:16;:18;;;;:::i;:::-;11394:29;;;;;;;;:::i;:::-;;;;;;;:40;;;:71;;;11390:571;;;11481:57;11513:10;11525:12;11481:31;:57::i;:::-;11553:22;11578:9;11605:1;11588:9;:16;:18;;;;:::i;:::-;11578:29;;;;;;;;:::i;:::-;;;;;;;:40;;;11553:65;;;;11632:23;11691:13;11676:12;:28;;;;:::i;:::-;11658:47;;:14;:47;:::i;:::-;11632:73;-1:-1:-1;11762:18:31;:14;11779:1;11762:18;:::i;:::-;11736:21;11742:15;11736:3;:21;:::i;:::-;11735:46;;;;:::i;:::-;11720:61;;11467:385;;11390:571;;;11872:58;11904:10;11916:13;11872:31;:58::i;11390:571::-;12043:16;;12039:457;;12075:9;12098:15;12127:17;12159:327;12167:9;:16;12165:1;:18;12159:327;;;12267:3;12251:12;12232:9;12242:1;12232:12;;;;;;;;:::i;:::-;;;;;;;:16;;;:31;;;;;;:::i;:::-;12231:39;;;;:::i;:::-;12221:49;;12334:1;12300:36;;:9;12310:1;12300:12;;;;;;;;:::i;:::-;;;;;;;:22;;;:36;;;:68;;12346:9;12356:1;12346:12;;;;;;;;:::i;:::-;;;;;;;:22;;;12300:68;;;12339:4;12300:68;12288:80;;12387:51;12419:9;12430:7;12387:31;:51::i;:::-;12467:3;;;;;12159:327;;;12061:435;;;10079:2423;;;;9984:2518;;;:::o;8934:1858:30:-;9062:4;9219:28;9240:6;9219:20;:28::i;:::-;9214:74;;-1:-1:-1;9271:5:30;9263:14;;9214:74;9325:10;;9302:33;;:11;;;;:6;:11;:::i;:::-;:19;;;;;;;;;:::i;:::-;:33;;;9298:78;;-1:-1:-1;9359:5:30;9351:14;;9298:78;9410:20;9429:1;9410:16;:20;:::i;:::-;9390:40;;:11;;;;:6;:11;:::i;:::-;:17;;;:40;9386:85;;;-1:-1:-1;9454:5:30;9446:14;;9386:85;9481:17;9501:10;9481:17;9512:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;9501:28;;;;;;;;;;;;;;;;9481:48;;9958:41;:7;:18;;;:39;;;:41::i;:::-;9954:809;;;10040:13;:9;10052:1;10040:13;:::i;:::-;10019:11;;;;:6;:11;:::i;:::-;:17;;;:34;10015:87;;10081:5;10073:14;;;;;10015:87;9954:809;;;10523:21;10568:11;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;:::-;10586:18;;;;;;10606:11;;;;:6;:11;:::i;:::-;:21;;:17;;;10626:1;10606:21;:::i;:::-;10557:71;;;41854:42:77;41842:55;;;10557:71:30;;;41824:74:77;41946:10;41934:23;;;41914:18;;;41907:51;;;;41974:18;;;41967:34;41797:18;;10557:71:30;;;;;;;;;;;;;10547:82;;10557:71;10547:82;;;;10702:1;10660:30;;;:15;:30;;;;;;10547:82;;-1:-1:-1;10660:44:30;:30;:44;10656:97;;10732:5;10724:14;;;;;;10656:97;-1:-1:-1;10780:4:30;;8934:1858;-1:-1:-1;;;;8934:1858:30:o;499:1429:56:-;670:24;;759:42;738:18;;;;;;;;:::i;:::-;:63;;;:68;734:524;;964:16;1025:10;;;;:7;:10;:::i;:::-;1057:133;;1105:32;;1057:133;;1163:5;;1057:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:3;;;;:::i;:::-;;;926:307;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;899:348;;;;;;880:367;;734:524;1370:16;1449:5;1438:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;1473:3;;;;;:::i;:::-;;;1336:154;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1313:187;;1336:154;1313:187;;;;;-1:-1:-1;1556:9:56;1540:13;1601:321;1610:5;1608:1;:7;1601:321;;;1716:16;1792:9;;1802:1;1792:12;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:17;;;;;;;:::i;:::-;1781:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;1847:3;;;;;:::i;:::-;;;1678:190;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;1651:231;;1678:190;1651:231;;;;;-1:-1:-1;1907:3:56;;1601:321;;;696:1232;;;499:1429;;;;;;:::o;4714:2353:28:-;4910:24;5088:18;5109:28;:5;:26;:28::i;:::-;5088:49;-1:-1:-1;5148:17:28;5168:39;5193:13;;;;;;;;:::i;:::-;5168:24;:39::i;:::-;5148:59;-1:-1:-1;5250:20:28;5273:72;5290:7;5299:20;5327:9;5273:16;:72::i;:::-;5250:95;-1:-1:-1;5356:29:28;5399:36;:18;;;;;;;;:::i;:::-;:34;;;:36::i;:::-;5395:195;;;5457:30;5476:10;;;;:7;:10;:::i;:::-;5457:3;;:18;:30::i;:::-;5451:36;;5520:59;5539:5;5546:20;5568:10;:3;:8;:10::i;:::-;5520:18;:59::i;:::-;5501:78;;5395:195;5606:26;5623:8;;;;;;;;:::i;:::-;5606:3;;:16;:26::i;:::-;5600:32;;5642:27;5672:62;5694:5;5701:20;5723:10;:3;:8;:10::i;:::-;5672:21;:62::i;:::-;5642:92;;5745:23;5782:42;5813:10;5782:30;:42::i;:::-;5778:102;;;-1:-1:-1;5853:16:28;5778:102;5893:40;5922:10;5893:28;:40::i;:::-;5889:124;;;5975:10;5987:14;5962:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5949:53;;5889:124;6023:15;6049:493;6086:1;6072:3;:11;;;:15;;;;:::i;:::-;6056:31;;:3;:13;;;:31;;;6049:493;;;6176:10;6175:11;:71;;;;;6204:9;;6228:1;6214:3;:13;;;:15;;;;:::i;:::-;6204:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:31;;;;;;;:::i;:::-;:42;;;6190:10;:56;6175:71;6171:289;;;6286:159;6337:7;6346:9;;6370:1;6356:3;:13;;;:15;;;;:::i;:::-;6346:26;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;6374:10;6386;6398:20;6420:3;6286:25;:159::i;:::-;6266:179;-1:-1:-1;6266:179:28;-1:-1:-1;6171:289:28;6504:13;;;6502:15;;;;;;;;6049:493;;;6626:10;6621:199;;6656:40;:7;:18;;;;;;;;;;:::i;:40::-;6652:113;;;6716:34;;;;;45680:2:77;6716:34:28;;;45662:21:77;45719:2;45699:18;;;45692:30;45758:26;45738:18;;;45731:54;45802:18;;6716:34:28;45478:348:77;6652:113:28;6784:25;:3;:23;:25::i;:::-;6778:31;;6621:199;6834:37;:7;:18;;;;;;;;;;:::i;:::-;:35;;;:37::i;:::-;6830:192;;;6893:39;:3;6926:4;6893:24;:39::i;:::-;6887:45;;6946:65;6966:10;6978:20;7000:10;:3;:8;:10::i;:::-;6946:19;:65::i;:::-;-1:-1:-1;;;;7046:13:28;;;7038:22;;;;-1:-1:-1;;;;;;;;4714:2353:28:o;4211:1034:33:-;4411:25;4544:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4529:39;;4658:26;4643:12;4639:2;4635:21;4631:54;4626:2;4612:12;4608:21;4601:85;4749:26;4742:4;4738:2;4734:13;4730:46;4724:3;4710:12;4706:22;4699:78;5099:16;5035:10;5031:2;5027:19;4991:4;4987:2;4983:13;4950:122;4921:216;4887:10;4883:2;4879:19;4854:301;4832:3;4818:12;4814:22;4790:379;5213:15;5207:3;5193:12;5189:22;5182:47;4211:1034;;;;;;;:::o;461:1920:55:-;580:20;;540:24;;576:113;;;220:1;616:62;576:113;702:10;:24;;;698:121;;;763:45;742:66;698:121;832:10;:32;;;828:137;;;901:53;880:74;828:137;978:10;:30;;;974:133;;;1045:51;1024:72;974:133;1120:10;:23;;;1116:119;;;1180:44;1159:65;1116:119;1248:10;:20;;;1244:113;;;1305:41;1284:62;1244:113;1370:10;:20;;;1366:113;;;1427:41;1406:62;1366:113;1492:10;:21;;;1488:115;;;1550:42;1529:63;1488:115;1616:10;:25;;;1612:127;;;1678:50;1657:71;1612:127;1752:10;:22;;;1748:117;;;1811:43;1790:64;1748:117;1878:10;:22;;;1874:117;;;1937:43;1916:64;1874:117;2004:10;:22;;;2000:117;;;2063:43;2042:64;2000:117;2130:10;:22;;;2126:117;;;2189:43;2168:64;2126:117;2256:10;:25;;;2252:123;;;2318:46;2297:67;;461:1920;-1:-1:-1;461:1920:55:o;3695:262:22:-;3748:7;3779:4;3771:28;3788:11;3771:28;;:63;;;;;3820:14;3803:13;:31;3771:63;3767:184;;;-1:-1:-1;3857:22:22;;3695:262::o;3767:184::-;3917:23;4054:81;;;1929:95;4054:81;;;51752:25:77;4077:11:22;51793:18:77;;;51786:34;;;;4090:14:22;51836:18:77;;;51829:34;4106:13:22;51879:18:77;;;51872:34;4129:4:22;51922:19:77;;;51915:84;4018:7:22;;51724:19:77;;4054:81:22;;;;;;;;;;;;4044:92;;;;;;4037:99;;3963:180;;3917:23;3910:30;;3695:262;:::o;2059:405:18:-;2118:13;2143:11;2157:16;2168:4;2157:10;:16::i;:::-;2281:14;;;2292:2;2281:14;;;;;;;;;2143:30;;-1:-1:-1;2261:17:18;;2281:14;;;;;;;;;-1:-1:-1;;;2371:16:18;;;-1:-1:-1;2416:4:18;2407:14;;2400:28;;;;-1:-1:-1;2371:16:18;2059:405::o;6411:287:30:-;6500:4;;6533:83;6593:22;;;;:12;:22;:::i;:::-;6533:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6533:51:30;;-1:-1:-1;6550:33:30;;-1:-1:-1;6550:33:30;;-1:-1:-1;6550:33:30;;;;;;6564:18;;;6550:33;:::i;:::-;:13;:33::i;6533:51::-;:59;;:83::i;:::-;6516:100;-1:-1:-1;6644:23:30;;;;:18;;;:23;:::i;:::-;6634:33;;;;;;;;6411:287;-1:-1:-1;;6411:287:30:o;3458:175:55:-;3530:14;;3587:33;;11287:238:30;11371:4;;11404:70;11457:16;;;;:6;:16;:::i;:::-;11404:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11404:44:30;;-1:-1:-1;11421:26:30;;-1:-1:-1;11435:11:30;;-1:-1:-1;11435:11:30;;;:6;:11;:::i;:::-;11421:26;;;:::i;:::-;:13;:26::i;11404:70::-;11387:87;-1:-1:-1;11502:11:30;;;;:6;:11;:::i;:::-;:16;;;;;;;:::i;181:376:12:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;799:339:27:-;871:12;1070:1;1067;1064;1061;1053:6;1049:2;1042:5;1037:35;1026:46;;1100:7;1092:39;;;;;;;46474:2:77;1092:39:27;;;46456:21:77;46513:2;46493:18;;;46486:30;46552:21;46532:18;;;46525:49;46591:18;;1092:39:27;46272:343:77;189:156:56;267:18;331:5;320:17;;;;;;;;:::i;1013:418:35:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:17:35;;:41;;;;:17;;:41;1206:78;;;;;;;46822:2:77;1206:78:35;;;46804:21:77;46861:2;46841:18;;;46834:30;46900:26;46880:18;;;46873:54;46944:18;;1206:78:35;46620:348:77;1206:78:35;1302:122;1341:36;:18;;;;;;;;:::i;:36::-;1302:4;;1379:13;1394:20;1302:25;:122::i;3639:178:55:-;3706:16;3774:29;3767:37;;5693:290:58;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:61:58;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;1500:48;;;;:::i;:::-;1494:55;;:1;:55;;1456:21;1449:29;;;;;;;;:::i;:::-;137:30;144:18;166:1;137:30;:::i;:::-;1424:54;;;;:::i;:::-;1387:28;1418:1;:61;;;;;;;1387:162;;;;;5811:42;:14;;;:42;5863:32;;;;;;;-1:-1:-1;5931:14:58;;;5929:16;;;;;;;;;5811:14;5693:290::o;3551:463::-;3735:19;;3772;;;;;3809:21;;;;;3848:14;;;;3880:12;;;;3910:14;;;;3942;;;;3701:296;;3635:17;;3701:296;;3735:19;;3772;3942:14;3635:17;;3701:296;;:::i;:::-;;;;;;;;;;;;;3680:327;;;:::i;5123:561:31:-;5282:23;5322:12;5380:44;;;5426:5;5357:75;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5455:39;5357:75;;-1:-1:-1;5455:39:31;;5357:75;;5484:9;;5455:39;;:::i;:::-;;;;;;;;;;;;;5442:52;;5528:11;:16;;5552:9;5563:10;5528:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5504:70:31;-1:-1:-1;5504:70:31;-1:-1:-1;5504:70:31;5584:39;;;;;;;49140:2:77;5584:39:31;;;49122:21:77;49179:2;49159:18;;;49152:30;49218:21;49198:18;;;49191:49;49257:18;;5584:39:31;48938:343:77;5584:39:31;5657:10;5646:31;;;;;;;;;;;;:::i;5394:293:58:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:61:58;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;1996:48;;;;:::i;:::-;1990:1;:55;;;;;;1945:28;1938:36;;5690:565:31;5851:21;5888:12;5944:42;;;5988:5;5921:73;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6015:37;5921:73;;-1:-1:-1;6015:37:31;;5921:73;;6042:9;;6015:37;;:::i;:::-;;;;;;;;;;;;;6004:48;;6125:11;:16;;6142:8;6125:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6103:48:31;-1:-1:-1;6103:48:31;-1:-1:-1;6103:48:31;6161:37;;;;;;;50140:2:77;6161:37:31;;;50122:21:77;50179:2;50159:18;;;50152:30;50218:19;50198:18;;;50191:47;50255:18;;6161:37:31;49938:341:77;3823:200:55;3896:20;3972:37;3965:45;;4029:196;4100:20;4176:35;4169:43;;7073:610:28;-1:-1:-1;;;;;;;;7338:4:28;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7392:72:28;7416:8;7426:10;7438:20;7460:3;7392:23;:72::i;:::-;7372:92;;-1:-1:-1;7372:92:28;-1:-1:-1;7474:169:28;;;;7504:84;7519:7;7528:13;;;;:8;:13;:::i;:::-;7543:10;7555:20;7577:10;:3;:8;:10::i;:::-;7504:14;:84::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4750:19:58;;;:27;;4787:21;;;:28;7474:169:28;-1:-1:-1;7660:10:28;;7672:3;;-1:-1:-1;7073:610:28;-1:-1:-1;;;;7073:610:28:o;4363:279:58:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:61:58;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;2991:48;;;;:::i;:::-;2985:1;:55;;;;;;2950:22;144:18;137:30;;166:1;137:30;:::i;:::-;2918:55;;;;:::i;:::-;2912:1;:62;;;;;;;2872:168;;;;:28;:168;4494:35;:14;;;:35;4569:1;4539:32;;4598:12;;;;:16;;2912:1;4598:16;:::i;:::-;4581:33;;:14;;;:33;-1:-1:-1;4581:4:58;4363:279::o;4951:186:55:-;5019:17;5089:34;5082:42;;4020:337:58;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;207:61:58;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;3489:48;;;;:::i;:::-;3483:1;:55;;;;;;3444:22;3437:30;;9514:464:31;9657:12;9679:24;9729:45;;;9776:10;9706:81;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9811:40;9706:81;;-1:-1:-1;9811:40:31;;9706:81;;9841:9;;9811:40;;:::i;:::-;;;;;;;;;;;;;9797:54;;9874:11;:16;;9898:9;9909:11;9874:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9861:60;;;;;9939:7;9931:40;;;;;;;51346:2:77;9931:40:31;;;51328:21:77;51385:2;51365:18;;;51358:30;51424:22;51404:18;;;51397:50;51464:18;;9931:40:31;51144:344:77;2536:245:18;2597:7;2669:4;2633:40;;2696:2;2687:11;;2683:69;;;2721:20;;;;;;;;;;;;;;3661:227:21;3739:7;3759:17;3778:18;3800:27;3811:4;3817:9;3800:10;:27::i;:::-;3758:69;;;;3837:18;3849:5;3837:11;:18::i;5989:430:58:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6180:32:58;;;;;6237:17;:13;6253:1;6237:17;:::i;:::-;6222:32;;:12;;;:32;6281:11;:19;;6299:1;6281:19;;;6295:1;6281:19;6264:36;;:14;;;:36;6327:11;:64;;1777:18;207:61;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;1748:48;;;;:::i;:::-;1742:1;:55;;;;;;1697:28;144:18;137:30;;166:1;137:30;:::i;:::-;1665:61;;;;:::i;:::-;1659:1;:68;;;;;;1628:169;:28;:169;6327:64;;;1034:18;207:61;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;1005:48;;;;:::i;:::-;999:55;;:1;:55;;961:21;954:29;;;;;;;;:::i;:::-;137:30;144:18;166:1;137:30;:::i;:::-;929:54;;;;:::i;:::-;923:1;:61;;;;;;892:162;:28;:162;6327:64;6310:81;;:14;;;:81;-1:-1:-1;6310:14:58;;5989:430;-1:-1:-1;;;5989:430:58:o;6261:2347:31:-;-1:-1:-1;;;;;;;;6453:4:31;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6520:20:31;6543:9;6520:32;;6599:14;6615:16;6633:32;6681:38;6689:8;6699:12;6713:5;6681:7;:38::i;:::-;6598:121;;;;;;6730:21;6761;6792:15;6876:19;:6;2673:1:57;2663:11;2662:18;;2579:109;6876:19:31;6872:1695;;;6953:36;6972:13;;;;:8;:13;:::i;:::-;:16;;;;;;;;;:::i;:::-;6953:3;;:18;:36::i;:::-;6947:42;;7081:73;7098:8;7108:11;7121:8;7131:10;7143;:3;:8;:10::i;:::-;7081:16;:73::i;:::-;7197:44;;;;;;;;7054:100;;-1:-1:-1;7197:44:31;-1:-1:-1;7054:100:31;7285:16;;;;;;;;:::i;:::-;7280:1;:21;;7270:31;;;;7320:26;:6;1165:385:57;2926:29;2925:36;;;2836:132;7320:26:31;7316:463;;;7376:46;7366:56;;;;;7316:463;;;1616:35:57;2786:31;;2785:38;7443:336:31;;-1:-1:-1;7655:46:31;7645:56;;;;;7578:4;7725:39;:3;7752:11;7725:26;:39::i;:::-;7719:45;;7443:336;7875:21;:6;:19;:21::i;:::-;7871:143;;;7940:58;7948:13;;;;:8;:13;:::i;:::-;7963:12;7977;7991:6;7940:7;:58::i;:::-;7916:3;:13;;:83;;;;;;;:::i;:::-;;;;;-1:-1:-1;7871:143:31;8125:13;;;;:8;:13;:::i;:::-;:18;;;;;;;:::i;:::-;8059:230;;8091:13;;;;:8;:13;:::i;:::-;:16;;;;;;;;;:::i;:::-;8059:230;;;8161:4;8194:21;8183:7;:32;;;;;;;;:::i;:::-;8233:18;;;;;8059:230;;;52406:14:77;;52399:22;52381:41;;8183:32:31;;;;52438:18:77;;;52431:50;52529:10;52517:23;52497:18;;;52490:51;52572:2;52557:18;;52550:34;;;52368:3;52353:19;8059:230:31;;;;;;;6872:1695;;;8418:13;;;;:8;:13;:::i;:::-;:18;;;;;;;:::i;:::-;8352:204;;8384:13;;;;:8;:13;:::i;:::-;:16;;;;;;;;;:::i;:::-;8352:204;;;8454:5;8477;8500:12;:18;;;8536:6;8352:204;;;;;;;;52406:14:77;;52399:22;52381:41;;52465:14;;52458:22;52453:2;52438:18;;52431:50;52529:10;52517:23;52512:2;52497:18;;52490:51;52572:2;52557:18;;52550:34;52368:3;52353:19;;52163:427;8352:204:31;;;;;;;;6872:1695;8585:10;-1:-1:-1;8597:3:31;;-1:-1:-1;;;;;;;6261:2347:31;;;;;;;;:::o;8907:601::-;9155:12;9177:17;9220:44;;;9266:11;;9279:10;9197:93;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9307:33;9197:93;;-1:-1:-1;9307:33:31;;9197:93;;9330:9;;9307:33;;:::i;:::-;;;;;;;;;;;;;9300:40;;9364:11;:16;;9381:4;9364:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:36;;;;;9401:7;9396:106;;9447:10;;;;:7;:10;:::i;:::-;9429:62;;;9459:18;;;;;;;;:::i;:::-;9479:11;;9429:62;;;;;;;;:::i;:::-;;;;;;;;9112:396;;8907:601;;;;;;:::o;2145:730:21:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:21;;-1:-1:-1;2822:35:21;2259:610;2145:730;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;;;;53770:2:77;788:34:21;;;53752:21:77;53809:2;53789:18;;;53782:30;53848:26;53828:18;;;53821:54;53892:18;;788:34:21;53568:348:77;730:345:21;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;;;;54123:2:77;903:41:21;;;54105:21:77;54162:2;54142:18;;;54135:30;54201:33;54181:18;;;54174:61;54252:18;;903:41:21;53921:355:77;839:236:21;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;;;;54483:2:77;1020:44:21;;;54465:21:77;54522:2;54502:18;;;54495:30;54561:34;54541:18;;;54534:62;54632:4;54612:18;;;54605:32;54654:19;;1020:44:21;54281:398:77;961:114:21;570:511;:::o;14042:799:31:-;-1:-1:-1;;;;;;;;14192:14:31;-1:-1:-1;;;;;;;;;;;;;;;14192:14:31;;14315:51;14332:13;;;;:8;:13;:::i;:::-;14347:18;;;;:8;:18;:::i;:::-;14315:16;:51::i;:::-;14311:378;;;14504:32;14527:8;14504:22;:32::i;:::-;14469:67;;-1:-1:-1;14469:67:31;-1:-1:-1;14469:67:31;-1:-1:-1;14311:378:31;;;14589:44;;-1:-1:-1;14635:1:31;;-1:-1:-1;14311:378:31;14708:126;14739:6;14747:12;14761:11;14774:13;;;;:8;:13;:::i;:::-;:26;;;14802:22;14708:17;:126::i;:::-;14699:135;;14042:799;;;;;;;:::o;5154:234:58:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:22:58;207:61;243:24;214:18;207:61;:::i;:::-;:65;;271:1;207:65;:::i;:::-;497:52;;;;:::i;:::-;491:1;:59;;;;;;443:31;436:39;137:30;144:18;166:1;137:30;:::i;:::-;411:64;;;;:::i;:::-;405:1;:71;;;;;374:176;;;;:28;:176;5272:46;:14;;;:46;-1:-1:-1;5328:32:58;;;;5272:14;5154:234::o;349:1937:36:-;557:13;572:7;703:22;728:21;703:46;;759:12;782:17;838:62;;;902:8;912:14;928:8;938:10;802:147;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;975:33;802:147;;-1:-1:-1;975:33:36;;802:147;;998:9;;975:33;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1037:16:36;;;1061:13;975:33;1061:13;;:8;:13;:::i;:::-;:19;;;1082:4;1037:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1019:68:36;;-1:-1:-1;1019:68:36;-1:-1:-1;1097:108:36;;;;1132:21;1155:38;1179:14;1155:21;:38;:::i;:::-;1124:70;;;;;;;;;1097:108;1214:18;1235:12;1242:4;1235:12;:::i;:::-;1214:33;-1:-1:-1;1262:39:36;;;;;1258:1022;;1325:24;1351:1;1317:36;;;;;;;;;;1258:1022;1374:44;;;;;1370:910;;1442:30;1474:1;1434:42;;;;;;;;;;1370:910;1497:41;;;;;1493:787;;1562:31;1595:1;1554:43;;;;;;;;;;1493:787;1618:47;;;;;1614:666;;1689:26;1717:1;1681:38;;;;;;;;;;1614:666;1740:44;;;;;1736:544;;1808:28;1838:1;1800:40;;;;;;;;;;1736:544;1861:42;;;;;1857:423;;1927:32;1961:1;1919:44;;;;;;;;;;1857:423;1984:39;;;;;1980:300;;2047:29;2078:1;2039:41;;;;;;;;;;1980:300;2101:40;;;;;2097:183;;2165:31;2198:1;2157:43;;;;;;;;;;2097:183;2239:26;2267:1;2231:38;;;;;;;;349:1937;;;;;;;;;:::o;4849:299:58:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5029:4:58;5007:19;;;:26;;243:24;214:18;207:61;;;;:::i;:::-;:65;;271:1;207:65;:::i;:::-;2748:48;;;;:::i;:::-;2742:1;:55;;;;;;2694:31;2687:39;;2974:161:57;3035:4;943:150;3061:25;;:30;;;3060:67;;-1:-1:-1;1713:303:57;3097:24;;:29;;3060:67;3058:70;;2974:161;-1:-1:-1;;2974:161:57:o;12508:1528:31:-;12680:17;12733:15;12766:9;12751:24;;;-1:-1:-1;2343:223:57;12794:32:31;;:37;12790:450;;105:2:65;12874:10:31;;;;:5;:10;:::i;:::-;:17;;:43;12863:7;:55;12851:67;;12790:450;;;2084:195:57;12943:36:31;;:41;12939:301;;105:2:65;13017:10:31;;;;:5;:10;:::i;:::-;:17;;:43;13004:57;;12939:301;;;1713:303:57;13086:35:31;;13125:1;13086:40;13082:158;;13191:34;;;;;55903:2:77;13191:34:31;;;55885:21:77;55942:2;55922:18;;;55915:30;55981:26;55961:18;;;55954:54;56025:18;;13191:34:31;55701:348:77;13082:158:31;13258:14;;13254:766;;13409:18;;13355:11;13342:24;;;;;13397:30;;;;:63;;13451:9;13397:63;;;13430:18;;13397:63;;;13479:40;;;;;;;;;;-1:-1:-1;13644:11:31;13479:40;13644:11;13631:24;;;;:::i;:::-;;;-1:-1:-1;13758:12:31;13732:11;:23;13744:10;;;;:5;:10;:::i;:::-;13732:23;;;;;;;;;;;;;;;;-1:-1:-1;13732:23:31;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13254:766;;;943:150:57;13894:36:31;;13934:1;13894:41;13890:130;;13987:18;;;;;;13955:11;;:23;;13967:10;;;;:5;:10;:::i;:::-;13955:23;;;;;;;;;;;;;-1:-1:-1;13955:23:31;:50;;;;;;;;;;;;;;;;;;;13890:130;12709:1321;12508:1528;;;;;;:::o;5009:1456:21:-;5097:7;;6021:66;6008:79;;6004:161;;;-1:-1:-1;6119:1:21;;-1:-1:-1;6123:30:21;6103:51;;6004:161;6276:24;;;6259:14;6276:24;;;;;;;;;56281:25:77;;;56354:4;56342:17;;56322:18;;;56315:45;;;;56376:18;;;56369:34;;;56419:18;;;56412:34;;;6276:24:21;;56253:19:77;;6276:24:21;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6276:24:21;;;;;;-1:-1:-1;;6314:20:21;;;6310:101;;6366:1;6370:29;6350:50;;;;;;;6310:101;6429:6;6437:20;;-1:-1:-1;5009:1456:21;-1:-1:-1;;;;;5009:1456:21:o;15544:237:31:-;15646:4;15662:14;15679:58;15727:9;;15679:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15679:39:31;;-1:-1:-1;15696:21:31;;-1:-1:-1;15711:5:31;;-1:-1:-1;15696:14:31;:21::i;15679:58::-;15662:75;-1:-1:-1;15764:10:31;;;;:5;:10;:::i;:::-;15754:20;;;;;;;;15544:237;-1:-1:-1;;;;15544:237:31:o;16059:2438::-;-1:-1:-1;;;;;;;;16173:14:31;-1:-1:-1;;;;;;;;;;;;;;;16173:14:31;;16270:11;:31;16282:13;;;;:8;:13;:::i;:::-;:18;;;;;;;:::i;:::-;16270:31;;;;;;;;;;;;;;;;-1:-1:-1;16270:31:31;16255:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16255:46:31;16341:13;;;;;;:::i;:::-;:19;;;:50;16337:583;;16421:45;16411:55;;;;;16337:583;;;16521:12;:18;;;16513:27;;16543:1;16513:31;16491:8;:13;;;;;;;;:::i;:::-;:19;;;:53;16487:433;;;16574:44;16564:54;;;;;16826:13;;;;;;:::i;:::-;:19;;;16798:48;;:18;;;:48;16487:433;;;16887:18;;;16885:20;;;;;;;;16487:433;16974:12;16938:49;;:12;:25;;;:49;;;16934:226;;17017:41;17007:51;;;;;16934:226;;;17097:48;17132:12;17097:48;:25;;;:48;16934:226;17179:50;17191:13;;;;:8;:13;:::i;:::-;:22;;;17215:13;;;;:8;:13;:::i;:::-;17179:11;:50::i;:::-;17174:143;;17259:43;17249:53;;;;;17174:143;352:7:57;17555:34:31;166:9:57;17388:13:31;;;;:8;:13;:::i;:::-;:17;;;:47;:145;;166:9:57;17388:145:31;;;17462:13;;;;:8;:13;:::i;:::-;:17;;;17388:145;17343:3;17342:209;:248;;;;;:::i;:::-;;:281;;-1:-1:-1;17638:15:31;17738:11;105:2:65;17684:13:31;;;;:8;:13;:::i;:::-;:18;;;;;;;:::i;:::-;:25;;:51;:65;17671:8;17657:11;:22;17656:94;17638:112;;17860:15;:35;17876:8;:13;;;;;;;;:::i;:::-;:18;;;;;;;:::i;:::-;17860:35;;;;;;;;;;;;;-1:-1:-1;17860:35:31;:44;17839:18;;17860:44;;;;17839:65;;17829:75;;;17825:275;;;18039:46;18029:56;;;;;17825:275;18241:11;18230:22;;18205:21;:48;18183:13;;;;:8;:13;:::i;:::-;:19;;;:70;18179:163;;;18283:44;18273:54;;;;;18179:163;-1:-1:-1;16059:2438:31;;18438:42;;;;;-1:-1:-1;16059:2438:31:o;18688:713::-;18893:7;18916:22;18912:102;;;18964:39;18954:49;;;;;18912:102;19043:61;166:9:57;228:7;19043:61:31;:::i;:::-;19028:12;:76;19024:228;;;19201:40;19191:50;;;;;19024:228;19279:12;19266:10;:25;19262:109;;;19317:43;19307:53;;;;;19262:109;-1:-1:-1;19388:6:31;;18688:713;-1:-1:-1;;;;18688:713:31:o;15787:266::-;15874:13;16038:8;16028:4;;16017:16;;;;;;;;;:::i;:::-;;;;;;;;;;;;;16007:27;;;;;;:39;15996:50;;15787:266;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;14:154:77:-;100:42;93:5;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:134;241:20;;270:31;241:20;270:31;:::i;312:388::-;380:6;388;441:2;429:9;420:7;416:23;412:32;409:52;;;457:1;454;447:12;409:52;496:9;483:23;515:31;540:5;515:31;:::i;:::-;565:5;-1:-1:-1;622:2:77;607:18;;594:32;635:33;594:32;635:33;:::i;:::-;687:7;677:17;;;312:388;;;;;:::o;705:247::-;764:6;817:2;805:9;796:7;792:23;788:32;785:52;;;833:1;830;823:12;785:52;872:9;859:23;891:31;916:5;891:31;:::i;1149:158::-;1212:5;1257:2;1248:6;1243:3;1239:16;1235:25;1232:45;;;1273:1;1270;1263:12;1232:45;-1:-1:-1;1295:6:77;1149:158;-1:-1:-1;1149:158:77:o;1312:245::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;1494:57;1543:7;1532:9;1494:57;:::i;1925:180::-;1984:6;2037:2;2025:9;2016:7;2012:23;2008:32;2005:52;;;2053:1;2050;2043:12;2005:52;-1:-1:-1;2076:23:77;;1925:180;-1:-1:-1;1925:180:77:o;2110:157::-;2171:5;2216:3;2207:6;2202:3;2198:16;2194:26;2191:46;;;2233:1;2230;2223:12;2272:359;2360:6;2413:2;2401:9;2392:7;2388:23;2384:32;2381:52;;;2429:1;2426;2419:12;2381:52;2469:9;2456:23;2502:18;2494:6;2491:30;2488:50;;;2534:1;2531;2524:12;2488:50;2557:68;2617:7;2608:6;2597:9;2593:22;2557:68;:::i;2818:121::-;2903:10;2896:5;2892:22;2885:5;2882:33;2872:61;;2929:1;2926;2919:12;2944:1049;3055:6;3063;3071;3079;3087;3095;3103;3156:3;3144:9;3135:7;3131:23;3127:33;3124:53;;;3173:1;3170;3163:12;3124:53;3212:9;3199:23;3231:31;3256:5;3231:31;:::i;:::-;3281:5;-1:-1:-1;3338:2:77;3323:18;;3310:32;3351:33;3310:32;3351:33;:::i;:::-;3403:7;-1:-1:-1;3457:2:77;3442:18;;3429:32;;-1:-1:-1;3513:2:77;3498:18;;3485:32;3526:33;3485:32;3526:33;:::i;:::-;3578:7;-1:-1:-1;3637:3:77;3622:19;;3609:33;3651;3609;3651;:::i;:::-;3703:7;-1:-1:-1;3762:3:77;3747:19;;3734:33;3776:32;3734:33;3776:32;:::i;:::-;3827:7;-1:-1:-1;3886:3:77;3871:19;;3858:33;3935:6;3922:20;;3910:33;;3900:61;;3957:1;3954;3947:12;3900:61;3980:7;3970:17;;;2944:1049;;;;;;;;;;:::o;3998:184::-;4050:77;4047:1;4040:88;4147:4;4144:1;4137:15;4171:4;4168:1;4161:15;4187:253;4259:2;4253:9;4301:4;4289:17;;4336:18;4321:34;;4357:22;;;4318:62;4315:88;;;4383:18;;:::i;:::-;4419:2;4412:22;4187:253;:::o;4445:255::-;4517:2;4511:9;4559:6;4547:19;;4596:18;4581:34;;4617:22;;;4578:62;4575:88;;;4643:18;;:::i;4705:252::-;4777:2;4771:9;4819:3;4807:16;;4853:18;4838:34;;4874:22;;;4835:62;4832:88;;;4900:18;;:::i;4962:334::-;5033:2;5027:9;5089:2;5079:13;;5094:66;5075:86;5063:99;;5192:18;5177:34;;5213:22;;;5174:62;5171:88;;;5239:18;;:::i;:::-;5275:2;5268:22;4962:334;;-1:-1:-1;4962:334:77:o;5301:956::-;5357:5;5405:4;5393:9;5388:3;5384:19;5380:30;5377:50;;;5423:1;5420;5413:12;5377:50;5456:2;5450:9;5498:4;5490:6;5486:17;5569:6;5557:10;5554:22;5533:18;5521:10;5518:34;5515:62;5512:88;;;5580:18;;:::i;:::-;5616:2;5609:22;5649:6;-1:-1:-1;5649:6:77;5679:23;;5711:33;5679:23;5711:33;:::i;:::-;5753:23;;5828:2;5813:18;;5800:32;5841:33;5800:32;5841:33;:::i;:::-;5907:7;5902:2;5894:6;5890:15;5883:32;;5976:2;5965:9;5961:18;5948:32;5943:2;5935:6;5931:15;5924:57;6042:2;6031:9;6027:18;6014:32;6009:2;6001:6;5997:15;5990:57;6109:3;6098:9;6094:19;6081:33;6075:3;6067:6;6063:16;6056:59;6177:3;6166:9;6162:19;6149:33;6143:3;6135:6;6131:16;6124:59;6245:3;6234:9;6230:19;6217:33;6211:3;6203:6;6199:16;6192:59;;5301:956;;;;:::o;6262:245::-;6310:4;6343:18;6335:6;6332:30;6329:56;;;6365:18;;:::i;:::-;-1:-1:-1;6422:2:77;6410:15;6427:66;6406:88;6496:4;6402:99;;6262:245::o;6512:462::-;6554:5;6607:3;6600:4;6592:6;6588:17;6584:27;6574:55;;6625:1;6622;6615:12;6574:55;6661:6;6648:20;6692:48;6708:31;6736:2;6708:31;:::i;:::-;6692:48;:::i;:::-;6765:2;6756:7;6749:19;6811:3;6804:4;6799:2;6791:6;6787:15;6783:26;6780:35;6777:55;;;6828:1;6825;6818:12;6777:55;6893:2;6886:4;6878:6;6874:17;6867:4;6858:7;6854:18;6841:55;6941:1;6916:16;;;6934:4;6912:27;6905:38;;;;6920:7;6512:462;-1:-1:-1;;;6512:462:77:o;6979:832::-;7069:6;7122:2;7110:9;7101:7;7097:23;7093:32;7090:52;;;7138:1;7135;7128:12;7090:52;7178:9;7165:23;7207:18;7248:2;7240:6;7237:14;7234:34;;;7264:1;7261;7254:12;7234:34;7287:22;;;;7343:6;7325:16;;;7321:29;7318:49;;;7363:1;7360;7353:12;7318:49;7389:22;;:::i;:::-;7448:2;7435:16;7460:33;7485:7;7460:33;:::i;:::-;7502:22;;7556:49;7597:7;7592:2;7584:11;;7556:49;:::i;:::-;7551:2;7544:5;7540:14;7533:73;7652:3;7648:2;7644:12;7631:26;7682:2;7672:8;7669:16;7666:36;;;7698:1;7695;7688:12;7666:36;7736:44;7772:7;7761:8;7757:2;7753:17;7736:44;:::i;:::-;7729:4;7718:16;;7711:70;-1:-1:-1;7722:5:77;6979:832;-1:-1:-1;;;;;6979:832:77:o;8195:915::-;8250:5;8298:6;8286:9;8281:3;8277:19;8273:32;8270:52;;;8318:1;8315;8308:12;8270:52;8340:22;;:::i;:::-;8331:31;;8385:29;8404:9;8385:29;:::i;:::-;8378:5;8371:44;8447:38;8481:2;8470:9;8466:18;8447:38;:::i;:::-;8442:2;8435:5;8431:14;8424:62;8546:2;8535:9;8531:18;8518:32;8513:2;8506:5;8502:14;8495:56;8611:2;8600:9;8596:18;8583:32;8578:2;8571:5;8567:14;8560:56;8677:3;8666:9;8662:19;8649:33;8643:3;8636:5;8632:15;8625:58;8744:3;8733:9;8729:19;8716:33;8710:3;8703:5;8699:15;8692:58;8811:3;8800:9;8796:19;8783:33;8777:3;8770:5;8766:15;8759:58;8850:39;8884:3;8873:9;8869:19;8850:39;:::i;:::-;8844:3;8837:5;8833:15;8826:64;8909:3;8963:2;8952:9;8948:18;8935:32;8990:18;8982:6;8979:30;8976:50;;;9022:1;9019;9012:12;8976:50;9058:45;9099:3;9090:6;9079:9;9075:22;9058:45;:::i;:::-;9053:2;9046:5;9042:14;9035:69;;;8195:915;;;;:::o;9115:928::-;9206:6;9259:2;9247:9;9238:7;9234:23;9230:32;9227:52;;;9275:1;9272;9265:12;9227:52;9315:9;9302:23;9344:18;9385:2;9377:6;9374:14;9371:34;;;9401:1;9398;9391:12;9371:34;9424:22;;;;9480:4;9462:16;;;9458:27;9455:47;;;9498:1;9495;9488:12;9455:47;9524:22;;:::i;:::-;9583:2;9570:16;9595:33;9620:7;9595:33;:::i;:::-;9637:22;;9705:2;9697:11;;9684:25;9721:16;;;9718:36;;;9750:1;9747;9740:12;9718:36;9786:54;9832:7;9821:8;9817:2;9813:17;9786:54;:::i;:::-;9781:2;9774:5;9770:14;9763:78;;9887:2;9883;9879:11;9866:25;9916:2;9906:8;9903:16;9900:36;;;9932:1;9929;9922:12;10048:391;10138:6;10191:2;10179:9;10170:7;10166:23;10162:32;10159:52;;;10207:1;10204;10197:12;10159:52;10247:9;10234:23;10280:18;10272:6;10269:30;10266:50;;;10312:1;10309;10302:12;10266:50;10335:22;;10391:3;10373:16;;;10369:26;10366:46;;;10408:1;10405;10398:12;10444:161;10510:5;10555:2;10546:6;10541:3;10537:16;10533:25;10530:45;;;10571:1;10568;10561:12;10610:504;10712:6;10720;10773:2;10761:9;10752:7;10748:23;10744:32;10741:52;;;10789:1;10786;10779:12;10741:52;10829:9;10816:23;10862:18;10854:6;10851:30;10848:50;;;10894:1;10891;10884:12;10848:50;10917:73;10982:7;10973:6;10962:9;10958:22;10917:73;:::i;:::-;10907:83;;;11040:2;11029:9;11025:18;11012:32;11053:31;11078:5;11053:31;:::i;11936:250::-;12021:1;12031:113;12045:6;12042:1;12039:13;12031:113;;;12121:11;;;12115:18;12102:11;;;12095:39;12067:2;12060:10;12031:113;;;-1:-1:-1;;12178:1:77;12160:16;;12153:27;11936:250::o;12191:330::-;12233:3;12271:5;12265:12;12298:6;12293:3;12286:19;12314:76;12383:6;12376:4;12371:3;12367:14;12360:4;12353:5;12349:16;12314:76;:::i;:::-;12435:2;12423:15;12440:66;12419:88;12410:98;;;;12510:4;12406:109;;12191:330;-1:-1:-1;;12191:330:77:o;12526:1335::-;12923:66;12915:6;12911:79;12900:9;12893:98;12874:4;13010:2;13048:3;13043:2;13032:9;13028:18;13021:31;13075:46;13116:3;13105:9;13101:19;13093:6;13075:46;:::i;:::-;13169:9;13161:6;13157:22;13152:2;13141:9;13137:18;13130:50;13203:33;13229:6;13221;13203:33;:::i;:::-;13267:2;13252:18;;13245:34;;;13328:42;13316:55;;13310:3;13295:19;;13288:84;13403:3;13388:19;;13381:35;;;13453:22;;;13447:3;13432:19;;13425:51;13525:13;;13547:22;;;13623:15;;;;-1:-1:-1;13585:15:77;;;;-1:-1:-1;13666:169:77;13680:6;13677:1;13674:13;13666:169;;;13741:13;;13729:26;;13810:15;;;;13775:12;;;;13702:1;13695:9;13666:169;;;-1:-1:-1;13852:3:77;;12526:1335;-1:-1:-1;;;;;;;;;;;;12526:1335:77:o;13866:391::-;13953:8;13963:6;14017:3;14010:4;14002:6;13998:17;13994:27;13984:55;;14035:1;14032;14025:12;13984:55;-1:-1:-1;14058:20:77;;14101:18;14090:30;;14087:50;;;14133:1;14130;14123:12;14087:50;14170:4;14162:6;14158:17;14146:29;;14230:3;14223:4;14213:6;14210:1;14206:14;14198:6;14194:27;14190:38;14187:47;14184:67;;;14247:1;14244;14237:12;14262:1141;14509:6;14517;14525;14533;14541;14594:3;14582:9;14573:7;14569:23;14565:33;14562:53;;;14611:1;14608;14601:12;14562:53;14634:57;14683:7;14672:9;14634:57;:::i;:::-;14624:67;;14742:2;14731:9;14727:18;14714:32;14765:18;14806:2;14798:6;14795:14;14792:34;;;14822:1;14819;14812:12;14792:34;14845:73;14910:7;14901:6;14890:9;14886:22;14845:73;:::i;:::-;14835:83;;14971:2;14960:9;14956:18;14943:32;14927:48;;15000:2;14990:8;14987:16;14984:36;;;15016:1;15013;15006:12;14984:36;15055:96;15143:7;15132:8;15121:9;15117:24;15055:96;:::i;:::-;15170:8;;-1:-1:-1;15029:122:77;-1:-1:-1;15258:3:77;15243:19;;15230:33;;-1:-1:-1;15275:16:77;;;15272:36;;;15304:1;15301;15294:12;15272:36;;15327:70;15389:7;15378:8;15367:9;15363:24;15327:70;:::i;:::-;15317:80;;;14262:1141;;;;;;;;:::o;15408:369::-;15501:6;15554:2;15542:9;15533:7;15529:23;15525:32;15522:52;;;15570:1;15567;15560:12;15522:52;15610:9;15597:23;15643:18;15635:6;15632:30;15629:50;;;15675:1;15672;15665:12;15629:50;15698:73;15763:7;15754:6;15743:9;15739:22;15698:73;:::i;15782:1094::-;16000:6;16008;16016;16024;16032;16040;16093:3;16081:9;16072:7;16068:23;16064:33;16061:53;;;16110:1;16107;16100:12;16061:53;16133:57;16182:7;16171:9;16133:57;:::i;:::-;16123:67;;16241:2;16230:9;16226:18;16213:32;16264:18;16305:2;16297:6;16294:14;16291:34;;;16321:1;16318;16311:12;16291:34;16344:68;16404:7;16395:6;16384:9;16380:22;16344:68;:::i;:::-;16334:78;;16465:2;16454:9;16450:18;16437:32;16421:48;;16494:2;16484:8;16481:16;16478:36;;;16510:1;16507;16500:12;16478:36;;16549:96;16637:7;16626:8;16615:9;16611:24;16549:96;:::i;:::-;16664:8;;-1:-1:-1;16523:122:77;-1:-1:-1;;16749:3:77;16734:19;;16721:33;16763:31;16721:33;16763:31;:::i;:::-;16813:5;16803:15;;;16865:3;16854:9;16850:19;16837:33;16827:43;;15782:1094;;;;;;;;:::o;18083:184::-;18135:77;18132:1;18125:88;18232:4;18229:1;18222:15;18256:4;18253:1;18246:15;18272:184;18324:77;18321:1;18314:88;18421:4;18418:1;18411:15;18445:4;18442:1;18435:15;18461:168;18528:6;18554:10;;;18566;;;18550:27;;18589:11;;;18586:37;;;18603:18;;:::i;:::-;18586:37;18461:168;;;;:::o;18634:251::-;18704:6;18757:2;18745:9;18736:7;18732:23;18728:32;18725:52;;;18773:1;18770;18763:12;18725:52;18805:9;18799:16;18824:31;18849:5;18824:31;:::i;19238:128::-;19305:9;;;19326:11;;;19323:37;;;19340:18;;:::i;19371:184::-;19423:77;19420:1;19413:88;19520:4;19517:1;19510:15;19544:4;19541:1;19534:15;19560:168;19633:9;;;19664;;19681:15;;;19675:22;;19661:37;19651:71;;19702:18;;:::i;19733:385::-;19828:4;19886:11;19873:25;19976:66;19965:8;19949:14;19945:29;19941:102;19921:18;19917:127;19907:155;;20058:1;20055;20048:12;19907:155;20079:33;;;;;19733:385;-1:-1:-1;;19733:385:77:o;20123:125::-;20188:9;;;20209:10;;;20206:36;;;20222:18;;:::i;20609:184::-;20661:77;20658:1;20651:88;20758:4;20755:1;20748:15;20782:4;20779:1;20772:15;20798:274;20838:1;20864;20854:189;;20899:77;20896:1;20889:88;21000:4;20997:1;20990:15;21028:4;21025:1;21018:15;20854:189;-1:-1:-1;21057:9:77;;20798:274::o;21077:172::-;21144:10;21174;;;21186;;;21170:27;;21209:11;;;21206:37;;;21223:18;;:::i;21556:430::-;21753:66;21745:6;21741:79;21736:3;21729:92;21711:3;21850:6;21844:13;21866:74;21933:6;21929:1;21924:3;21920:11;21913:4;21905:6;21901:17;21866:74;:::i;:::-;21960:16;;;;21978:1;21956:24;;21556:430;-1:-1:-1;;;21556:430:77:o;21991:287::-;22120:3;22158:6;22152:13;22174:66;22233:6;22228:3;22221:4;22213:6;22209:17;22174:66;:::i;22283:164::-;22359:13;;22408;;22401:21;22391:32;;22381:60;;22437:1;22434;22427:12;22452:202;22519:6;22572:2;22560:9;22551:7;22547:23;22543:32;22540:52;;;22588:1;22585;22578:12;22540:52;22611:37;22638:9;22611:37;:::i;22659:245::-;22717:6;22770:2;22758:9;22749:7;22745:23;22741:32;22738:52;;;22786:1;22783;22776:12;22738:52;22825:9;22812:23;22844:30;22868:5;22844:30;:::i;22909:151::-;22999:4;22992:12;;;22978;;;22974:31;;23017:14;;23014:40;;;23034:18;;:::i;23065:559::-;23123:5;23130:6;23190:3;23177:17;23272:66;23261:8;23245:14;23241:29;23237:102;23217:18;23213:127;23203:155;;23354:1;23351;23344:12;23203:155;23382:33;;23486:4;23473:18;;;-1:-1:-1;23434:21:77;;-1:-1:-1;23514:18:77;23503:30;;23500:50;;;23546:1;23543;23536:12;23500:50;23593:6;23577:14;23573:27;23566:5;23562:39;23559:59;;;23614:1;23611;23604:12;23629:325;23717:6;23712:3;23705:19;23769:6;23762:5;23755:4;23750:3;23746:14;23733:43;;23821:1;23814:4;23805:6;23800:3;23796:16;23792:27;23785:38;23687:3;23943:4;23873:66;23868:2;23860:6;23856:15;23852:88;23847:3;23843:98;23839:109;23832:116;;23629:325;;;;:::o;23959:1030::-;24019:3;24047:6;24090:5;24077:19;24105:33;24130:7;24105:33;:::i;:::-;1639:42;1628:54;1616:67;;24208:36;24238:4;24227:16;;24208:36;:::i;:::-;1639:42;1628:54;;24295:4;24286:14;;1616:67;24253:48;24357:4;24350:5;24346:16;24333:30;24326:4;24321:3;24317:14;24310:54;24420:4;24413:5;24409:16;24396:30;24389:4;24384:3;24380:14;24373:54;24483:4;24476:5;24472:16;24459:30;24452:4;24447:3;24443:14;24436:54;24546:4;24539:5;24535:16;24522:30;24515:4;24510:3;24506:14;24499:54;24609:4;24602:5;24598:16;24585:30;24578:4;24573:3;24569:14;24562:54;24647:36;24677:4;24670:5;24666:16;24647:36;:::i;:::-;1639:42;1628:54;24736:4;24727:14;;1616:67;24761:6;24812:53;24850:14;;;24854:5;24812:53;:::i;:::-;24895:2;24890;24885:3;24881:12;24874:24;24914:69;24979:2;24974:3;24970:12;24956;24940:14;24914:69;:::i;24994:986::-;25056:3;25084:6;25099:50;25145:3;25118:25;25137:5;25118:25;:::i;:::-;1639:42;1628:54;1616:67;;1562:127;25099:50;25178:36;25208:4;25201:5;25197:16;25178:36;:::i;:::-;1639:42;1628:54;;25265:4;25256:14;;1616:67;25223:48;25327:4;25320:5;25316:16;25303:30;25296:4;25291:3;25287:14;25280:54;25390:4;25383:5;25379:16;25366:30;25359:4;25354:3;25350:14;25343:54;25453:4;25446:5;25442:16;25429:30;25422:4;25417:3;25413:14;25406:54;25516:4;25509:5;25505:16;25492:30;25485:4;25480:3;25476:14;25469:54;25579:4;25572:5;25568:16;25555:30;25548:4;25543:3;25539:14;25532:54;25642:4;25635:5;25631:16;25618:30;25611:4;25606:3;25602:14;25595:54;25668:6;25728:2;25721:5;25717:14;25704:28;25699:2;25694:3;25690:12;25683:50;;25752:6;25803:53;25852:2;25845:5;25841:14;25834:5;25803:53;:::i;25985:652::-;26101:6;26096:3;26089:19;26071:3;26127:4;26156:2;26151:3;26147:12;26140:19;;26182:5;26205:1;26215:397;26229:6;26226:1;26223:13;26215:397;;;26306:6;26293:20;26326:33;26351:7;26326:33;:::i;:::-;26397:42;26384:56;26372:69;;26488:15;;;26475:29;26461:12;;;26454:51;26528:4;26552:12;;;;26587:15;;;;26251:1;26244:9;26215:397;;;-1:-1:-1;26628:3:77;;25985:652;-1:-1:-1;;;;;25985:652:77:o;26642:1490::-;26709:3;26755:5;26742:19;26770:33;26795:7;26770:33;:::i;:::-;26837:42;26824:56;26812:69;;26940:4;26929:16;;26916:30;26969:14;26965:26;;;27042:66;27034:75;;27010:100;;27000:128;;27124:1;27121;27114:12;27000:128;27160:4;27153;27148:3;27144:14;27137:28;27186:85;27265:4;27260:3;27256:14;27248:5;27228:18;27224:30;27186:85;:::i;:::-;27174:97;;27314:55;27363:4;27356:5;27352:16;27345:5;27314:55;:::i;:::-;27411:3;27405:4;27401:14;27394:4;27389:3;27385:14;27378:38;27439:59;27493:4;27479:12;27465;27439:59;:::i;:::-;27425:73;;;;27559:4;27552:5;27548:16;27535:30;27618:66;27614:2;27610:75;27588:20;27584:102;27574:130;;27700:1;27697;27690:12;27574:130;27728:32;;27841:4;27828:18;;;-1:-1:-1;27783:21:77;27869:18;27858:30;;27855:50;;;27901:1;27898;27891:12;27855:50;27957:6;27954:1;27950:14;27934;27930:35;27921:7;27917:49;27914:69;;;27979:1;27976;27969:12;27914:69;28027:3;28019:6;28015:16;28008:4;28003:3;27999:14;27992:40;28048:78;28119:6;28111;28102:7;28048:78;:::i;:::-;28041:85;26642:1490;-1:-1:-1;;;;;;26642:1490:77:o;28137:1927::-;28587:4;28632:6;28619:20;28648:31;28673:5;28648:31;:::i;:::-;28717:42;28706:54;28688:73;;28780:4;28821:15;;;28808:29;28846:32;28808:29;28846:32;:::i;:::-;28927:10;28918:7;28914:24;28909:2;28898:9;28894:18;28887:52;;28975:3;28970:2;28959:9;28955:18;28948:31;29002:64;29061:3;29050:9;29046:19;29038:6;29002:64;:::i;:::-;29102:22;;;29097:2;29082:18;;29075:50;29160:22;;;29198:15;;;29256:1;29252:14;;;29240:27;;29236:36;;29295:6;29319:1;;29350:585;29366:6;29361:3;29358:15;29350:585;;;29456:66;29447:6;29439;29435:19;29431:92;29426:3;29419:105;29576:6;29563:20;29663:66;29654:6;29638:14;29634:27;29630:100;29610:18;29606:125;29596:153;;29745:1;29742;29735:12;29596:153;29772:83;29848:6;29839;29819:18;29815:31;29772:83;:::i;:::-;29913:12;;;;29762:93;-1:-1:-1;;29878:15:77;;;;29392:1;29383:11;29350:585;;;-1:-1:-1;;;1639:42:77;1628:54;;30009:3;29994:19;;1616:67;29952:6;-1:-1:-1;29967:47:77;;-1:-1:-1;;;1562:127:77;29967:47;30051:6;30045:3;30034:9;30030:19;30023:35;28137:1927;;;;;;;;;:::o;30069:184::-;30139:6;30192:2;30180:9;30171:7;30167:23;30163:32;30160:52;;;30208:1;30205;30198:12;30160:52;-1:-1:-1;30231:16:77;;30069:184;-1:-1:-1;30069:184:77:o;32372:197::-;32440:34;32494:10;;;32506;;;32490:27;;32529:11;;;32526:37;;;32543:18;;:::i;33108:1475::-;33207:6;33260:3;33248:9;33239:7;33235:23;33231:33;33228:53;;;33277:1;33274;33267:12;33228:53;33303:22;;:::i;:::-;33348:37;33375:9;33348:37;:::i;:::-;33341:5;33334:52;33418:46;33460:2;33449:9;33445:18;33418:46;:::i;:::-;33413:2;33406:5;33402:14;33395:70;33497:46;33539:2;33528:9;33524:18;33497:46;:::i;:::-;33492:2;33485:5;33481:14;33474:70;33576:46;33618:2;33607:9;33603:18;33576:46;:::i;:::-;33571:2;33564:5;33560:14;33553:70;33656:47;33698:3;33687:9;33683:19;33656:47;:::i;:::-;33650:3;33643:5;33639:15;33632:72;33737:47;33779:3;33768:9;33764:19;33737:47;:::i;:::-;33731:3;33724:5;33720:15;33713:72;33818:47;33860:3;33849:9;33845:19;33818:47;:::i;:::-;33812:3;33805:5;33801:15;33794:72;33899:47;33941:3;33930:9;33926:19;33899:47;:::i;:::-;33893:3;33886:5;33882:15;33875:72;33966:3;34001:46;34043:2;34032:9;34028:18;34001:46;:::i;:::-;33985:14;;;33978:70;34067:3;34102:46;34129:18;;;34102:46;:::i;:::-;34086:14;;;34079:70;34168:3;34203:46;34230:18;;;34203:46;:::i;:::-;34187:14;;;34180:70;34269:3;34304:46;34331:18;;;34304:46;:::i;:::-;34288:14;;;34281:70;34370:3;34405:46;34432:18;;;34405:46;:::i;:::-;34389:14;;;34382:70;34471:3;34506:46;34533:18;;;34506:46;:::i;:::-;34490:14;;;34483:70;34494:5;33108:1475;-1:-1:-1;;;33108:1475:77:o;34588:274::-;34773:2;34762:9;34755:21;34736:4;34793:63;34852:2;34841:9;34837:18;34829:6;34793:63;:::i;37964:580::-;38041:4;38047:6;38107:11;38094:25;38197:66;38186:8;38170:14;38166:29;38162:102;38142:18;38138:127;38128:155;;38279:1;38276;38269:12;38128:155;38306:33;;38358:20;;;-1:-1:-1;38401:18:77;38390:30;;38387:50;;;38433:1;38430;38423:12;38387:50;38466:4;38454:17;;-1:-1:-1;38497:14:77;38493:27;;;38483:38;;38480:58;;;38534:1;38531;38524:12;38549:271;38732:6;38724;38719:3;38706:33;38688:3;38758:16;;38783:13;;;38758:16;38549:271;-1:-1:-1;38549:271:77:o;39806:644::-;39905:6;39958:2;39946:9;39937:7;39933:23;39929:32;39926:52;;;39974:1;39971;39964:12;39926:52;40007:2;40001:9;40049:2;40041:6;40037:15;40118:6;40106:10;40103:22;40082:18;40070:10;40067:34;40064:62;40061:88;;;40129:18;;:::i;:::-;40165:2;40158:22;40202:16;;40227:31;40202:16;40227:31;:::i;:::-;40267:21;;40333:2;40318:18;;40312:25;40346:32;40312:25;40346:32;:::i;:::-;40406:2;40394:15;;40387:32;40398:6;39806:644;-1:-1:-1;;;39806:644:77:o;40455:437::-;40534:1;40530:12;;;;40577;;;40598:61;;40652:4;40644:6;40640:17;40630:27;;40598:61;40705:2;40697:6;40694:14;40674:18;40671:38;40668:218;;40742:77;40739:1;40732:88;40843:4;40840:1;40833:15;40871:4;40868:1;40861:15;41251:183;41319:18;41370:10;;;41358;;;41354:27;;41393:12;;;41390:38;;;41408:18;;:::i;41439:180::-;41506:18;41544:10;;;41556;;;41540:27;;41579:11;;;41576:37;;;41593:18;;:::i;42366:291::-;42543:2;42532:9;42525:21;42506:4;42563:45;42604:2;42593:9;42589:18;42581:6;42563:45;:::i;:::-;42555:53;;42644:6;42639:2;42628:9;42624:18;42617:34;42366:291;;;;;:::o;42662:195::-;42701:3;42732:66;42725:5;42722:77;42719:103;;42802:18;;:::i;:::-;-1:-1:-1;42849:1:77;42838:13;;42662:195::o;42862:591::-;43105:6;43100:3;43093:19;43163:66;43154:6;43150:2;43146:15;43142:88;43137:2;43132:3;43128:12;43121:110;43075:3;43260:6;43254:13;43276:73;43342:6;43337:2;43332:3;43328:12;43323:2;43315:6;43311:15;43276:73;:::i;:::-;43408:2;43368:16;;43400:11;;;43393:27;;;;43444:2;43436:11;;42862:591;-1:-1:-1;;;;42862:591:77:o;43458:444::-;43673:6;43668:3;43661:19;43643:3;43709:6;43703:13;43725:73;43791:6;43786:2;43781:3;43777:12;43772:2;43764:6;43760:15;43725:73;:::i;:::-;43857:2;43817:16;;43849:11;;;43842:27;;;;43893:2;43885:11;;43458:444;-1:-1:-1;;;43458:444:77:o;43907:392::-;44009:4;44067:11;44054:25;44157:66;44146:8;44130:14;44126:29;44122:102;44102:18;44098:127;44088:155;;44239:1;44236;44229:12;44304:387;44401:4;44459:11;44446:25;44549:66;44538:8;44522:14;44518:29;44514:102;44494:18;44490:127;44480:155;;44631:1;44628;44621:12;44696:280;44885:2;44874:9;44867:21;44848:4;44905:65;44966:2;44955:9;44951:18;44943:6;44905:65;:::i;44981:492::-;45156:3;45194:6;45188:13;45210:66;45269:6;45264:3;45257:4;45249:6;45245:17;45210:66;:::i;:::-;45339:13;;45298:16;;;;45361:70;45339:13;45298:16;45408:4;45396:17;;45361:70;:::i;:::-;45447:20;;44981:492;-1:-1:-1;;;;44981:492:77:o;45831:233::-;45918:6;45971:3;45959:9;45950:7;45946:23;45942:33;45939:53;;;45988:1;45985;45978:12;45939:53;46011:47;46050:7;46039:9;46011:47;:::i;46069:198::-;46175:9;46212:49;46246:14;46239:5;46212:49;:::i;47138:1045::-;47470:66;47461:6;47457:2;47453:15;47449:88;47444:3;47437:101;47591:6;47584:14;47577:22;47572:3;47568:32;47563:2;47558:3;47554:12;47547:54;47654:6;47647:14;47640:22;47635:3;47631:32;47626:2;47621:3;47617:12;47610:54;47419:3;47683:66;47801:2;47792:6;47787:3;47783:16;47779:25;47774:2;47769:3;47765:12;47758:47;47857:2;47848:6;47843:3;47839:16;47835:25;47830:2;47825:3;47821:12;47814:47;;47913:66;47904:6;47899:3;47895:16;47891:89;47886:2;47881:3;47877:12;47870:111;48033:66;48024:6;48019:3;48015:16;48011:89;48006:2;48001:3;47997:12;47990:111;48110:39;48145:2;48140:3;48136:12;48128:6;47046:3;47042:15;47059:66;47038:88;47026:101;;46973:160;48110:39;-1:-1:-1;48174:2:77;48165:12;;47138:1045;-1:-1:-1;;;;;;;;47138:1045:77:o;48188:357::-;48306:12;;48353:4;48342:16;;;48336:23;;48306:12;48371:16;;48368:171;;;48461:66;48445:4;48441:17;;;;48438:1;48434:25;48430:98;48419:110;;48188:357;-1:-1:-1;48188:357:77:o;48550:383::-;48707:3;48745:6;48739:13;48761:66;48820:6;48815:3;48808:4;48800:6;48796:17;48761:66;:::i;:::-;48849:16;;;;48874:21;;;-1:-1:-1;48922:4:77;48911:16;;48550:383;-1:-1:-1;48550:383:77:o;49286:647::-;49365:6;49418:2;49406:9;49397:7;49393:23;49389:32;49386:52;;;49434:1;49431;49424:12;49386:52;49467:9;49461:16;49500:18;49492:6;49489:30;49486:50;;;49532:1;49529;49522:12;49486:50;49555:22;;49608:4;49600:13;;49596:27;-1:-1:-1;49586:55:77;;49637:1;49634;49627:12;49586:55;49666:2;49660:9;49691:48;49707:31;49735:2;49707:31;:::i;49691:48::-;49762:2;49755:5;49748:17;49802:7;49797:2;49792;49788;49784:11;49780:20;49777:33;49774:53;;;49823:1;49820;49813:12;49774:53;49836:67;49900:2;49895;49888:5;49884:14;49879:2;49875;49871:11;49836:67;:::i;50284:632::-;50405:4;50411:6;50471:11;50458:25;50561:66;50550:8;50534:14;50530:29;50526:102;50506:18;50502:127;50492:155;;50643:1;50640;50633:12;50492:155;50670:33;;50722:20;;;-1:-1:-1;50765:18:77;50754:30;;50751:50;;;50797:1;50794;50787:12;50751:50;50830:4;50818:17;;-1:-1:-1;50881:1:77;50877:14;;;50861;50857:35;50847:46;;50844:66;;;50906:1;50903;50896:12;50921:218;51068:2;51057:9;51050:21;51031:4;51088:45;51129:2;51118:9;51114:18;51106:6;51088:45;:::i;52010:148::-;52098:4;52077:12;;;52091;;;52073:31;;52116:13;;52113:39;;;52132:18;;:::i;52595:519::-;52884:2;52873:9;52866:21;52847:4;52910:89;52995:2;52984:9;52980:18;52972:6;52964;52910:89;:::i;:::-;53047:9;53039:6;53035:22;53030:2;53019:9;53015:18;53008:50;53075:33;53101:6;53093;53075:33;:::i;53119:444::-;53400:10;53392:6;53388:23;53377:9;53370:42;53448:2;53443;53432:9;53428:18;53421:30;53351:4;53468:89;53553:2;53542:9;53538:18;53530:6;53522;53468:89;:::i;54684:600::-;54985:6;54974:9;54967:25;55028:6;55023:2;55012:9;55008:18;55001:34;55071:3;55066:2;55055:9;55051:18;55044:31;54948:4;55098:71;55164:3;55153:9;55149:19;55141:6;55098:71;:::i;:::-;55217:9;55209:6;55205:22;55200:2;55189:9;55185:18;55178:50;55245:33;55271:6;55263;55245:33;:::i;55289:407::-;55372:5;55412;55406:12;55454:4;55447:5;55443:16;55437:23;55479:66;55571:2;55567;55563:11;55554:20;;55597:1;55589:6;55586:13;55583:107;;;55677:2;55671;55661:6;55658:1;55654:14;55651:1;55647:22;55643:31;55639:2;55635:40;55631:49;55622:58;;55583:107;;;;55289:407;;;:::o;56457:358::-;56700:2;56689:9;56682:21;56663:4;56720:89;56805:2;56794:9;56790:18;56782:6;56774;56720:89;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "26651": [
        {
          "start": 18667,
          "length": 32
        }
      ],
      "26653": [
        {
          "start": 18625,
          "length": 32
        }
      ],
      "26655": [
        {
          "start": 18583,
          "length": 32
        }
      ],
      "26657": [
        {
          "start": 18748,
          "length": 32
        }
      ],
      "26659": [
        {
          "start": 18788,
          "length": 32
        }
      ],
      "26662": [
        {
          "start": 5474,
          "length": 32
        }
      ],
      "26665": [
        {
          "start": 5516,
          "length": 32
        }
      ],
      "30359": [
        {
          "start": 1430,
          "length": 32
        }
      ],
      "33209": [
        {
          "start": 2529,
          "length": 32
        },
        {
          "start": 10182,
          "length": 32
        },
        {
          "start": 10454,
          "length": 32
        },
        {
          "start": 14787,
          "length": 32
        }
      ],
      "33211": [
        {
          "start": 1325,
          "length": 32
        },
        {
          "start": 10134,
          "length": 32
        },
        {
          "start": 14825,
          "length": 32
        }
      ],
      "33584": [
        {
          "start": 1043,
          "length": 32
        },
        {
          "start": 1097,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "BUNDLER_BASE()": "5152f50f",
    "BUNDLER_PREMIUM()": "191338b4",
    "DAPP_TYPE_HASH()": "ac85596b",
    "IS_TEST()": "fa7626d4",
    "USER_TYPE_HASH()": "99a903a6",
    "activeEnvironment()": "6ea43423",
    "addSignatory(address,address)": "1170a503",
    "asyncNonceFills(bytes32)": "11a31507",
    "atlas()": "127f1b7d",
    "createExecutionEnvironment((address,uint32))": "0e1bc033",
    "cumulativeDonations()": "5e437f58",
    "dapps(bytes32)": "b6453318",
    "deposit(address)": "f340fa01",
    "disableDApp(address,address)": "0041bddf",
    "donateToBundler(address)": "8b2b6f6e",
    "eip712Domain()": "84b0196e",
    "environment()": "74e2b63c",
    "escrowDuration()": "57c2c2ba",
    "execute((address,uint32),(address,address,uint256,uint256,uint256,uint256,uint256,address,bytes),(address,(address,address,uint256,uint256,uint256,uint256,bytes32,bytes32,bytes32,bytes),bytes,(address,uint256)[])[],address,bytes32)": "dd8ec6f0",
    "execution()": "4918f569",
    "failed()": "ba414fa6",
    "getEscrowAddress()": "122fd48a",
    "getExecutionEnvironment((address,(address,address,uint256,uint256,uint256,uint256,uint256,address,bytes),bytes),address)": "71ed2766",
    "getSolverPayload((address,address,uint256,uint256,uint256,uint256,bytes32,bytes32,bytes32,bytes))": "69a466fb",
    "getUserOperationPayload((address,(address,address,uint256,uint256,uint256,uint256,uint256,address,bytes),bytes))": "58e65507",
    "getVerificationPayload((address,(address,address,uint256,uint256,bytes32,bytes32,bytes32),bytes))": "2cd89465",
    "governance(address)": "8426e6c1",
    "initializeGovernance(address)": "55d202a6",
    "integrateDApp(address,address)": "9033d096",
    "metacall((address,uint32),(address,(address,address,uint256,uint256,uint256,uint256,uint256,address,bytes),bytes),(address,(address,address,uint256,uint256,uint256,uint256,bytes32,bytes32,bytes32,bytes),bytes,(address,uint256)[])[],(address,(address,address,uint256,uint256,bytes32,bytes32,bytes32),bytes))": "c42242b2",
    "nextGovernanceNonce(address)": "79a4fcd9",
    "nextSolverNonce(address)": "cebf5a5c",
    "nextUserNonce(address)": "db593a04",
    "removeSignatory(address,address)": "e2e439ea",
    "salt()": "bfa0b133",
    "signatories(address)": "7932f372",
    "solverEscrowBalance(address)": "e055cf3d",
    "solverLastActiveBlock(address)": "8deeab9d",
    "solverSafetyCallback(address)": "0340c6c5",
    "testUserOperation((address,(address,address,uint256,uint256,uint256,uint256,uint256,address,bytes),bytes))": "d2a8c540",
    "testUserOperation((address,address,uint256,uint256,uint256,uint256,uint256,address,bytes))": "16c2bac3",
    "transferDAppERC20(address,address,uint256,address,address,uint32,uint16)": "6625f68b",
    "transferUserERC20(address,address,uint256,address,address,uint32,uint16)": "2c63112c",
    "userNonces(address)": "2f7801f4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_escrowDuration\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlteredControlHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlteredUserHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HashChainBroken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IntentUnfulfilled\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSolverHash\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PostSolverFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PreSolverFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SolverBidUnpaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SolverEVMError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SolverFailedCallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SolverMsgValueUnpaid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SolverOperationReverted\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct BidData[]\",\"name\":\"winningBids\",\"type\":\"tuple[]\"}],\"name\":\"MEVPaymentFailure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solverTo\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"solverFrom\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"SolverTxResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"valueReturned\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasRefunded\",\"type\":\"uint256\"}],\"name\":\"UserTxResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"BUNDLER_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BUNDLER_PREMIUM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DAPP_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeEnvironment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"}],\"name\":\"addSignatory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"asyncNonceFills\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"atlas\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"}],\"internalType\":\"struct DAppConfig\",\"name\":\"dConfig\",\"type\":\"tuple\"}],\"name\":\"createExecutionEnvironment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"executionEnvironment\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"dapps\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"solverSigner\",\"type\":\"address\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dappControl\",\"type\":\"address\"}],\"name\":\"disableDApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"surplusRecipient\",\"type\":\"address\"}],\"name\":\"donateToBundler\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"environment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_environment\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"escrowDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"}],\"internalType\":\"struct DAppConfig\",\"name\":\"dConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"uCall\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"controlCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bidsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct SolverCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct BidData[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SolverOperation[]\",\"name\":\"solverOps\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"executionEnvironment\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"callChainHash\",\"type\":\"bytes32\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"accruedGasRebate\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"execution\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEscrowAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"escrowAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"getExecutionEnvironment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"executionEnvironment\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"controlCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bidsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct SolverCall\",\"name\":\"sCall\",\"type\":\"tuple\"}],\"name\":\"getSolverPayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payload\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOperationPayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payload\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"callChainHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"controlCodeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct DAppProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Verification\",\"name\":\"verification\",\"type\":\"tuple\"}],\"name\":\"getVerificationPayload\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"payload\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governance\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"},{\"internalType\":\"uint64\",\"name\":\"lastUpdate\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"initializeGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dappControl\",\"type\":\"address\"}],\"name\":\"integrateDApp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"}],\"internalType\":\"struct DAppConfig\",\"name\":\"dConfig\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"controlCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"bidsHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct SolverCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct BidData[]\",\"name\":\"bids\",\"type\":\"tuple[]\"}],\"internalType\":\"struct SolverOperation[]\",\"name\":\"solverOps\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"callChainHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"controlCodeHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct DAppProof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct Verification\",\"name\":\"verification\",\"type\":\"tuple\"}],\"name\":\"metacall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"governanceSignatory\",\"type\":\"address\"}],\"name\":\"nextGovernanceNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nextNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"solverSigner\",\"type\":\"address\"}],\"name\":\"nextSolverNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nextNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"nextUserNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nextNonce\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"signatory\",\"type\":\"address\"}],\"name\":\"removeSignatory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"signatories\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"governance\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"solverSigner\",\"type\":\"address\"}],\"name\":\"solverEscrowBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"solverSigner\",\"type\":\"address\"}],\"name\":\"solverLastActiveBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lastBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"solverSafetyCallback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSafe\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"uCall\",\"type\":\"tuple\"}],\"name\":\"testUserOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"control\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct UserCall\",\"name\":\"call\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"testUserOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"lockState\",\"type\":\"uint16\"}],\"name\":\"transferDAppERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"callConfig\",\"type\":\"uint32\"},{\"internalType\":\"uint16\",\"name\":\"lockState\",\"type\":\"uint16\"}],\"name\":\"transferUserERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {EIP-5267}. _Available since v4.9._\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address)\":{\"notice\":\"EXTERNAL FUNCTIONS FOR SOLVER INTERACTION ///\"},\"donateToBundler(address)\":{\"notice\":\"EXTERNAL FUNCTIONS FOR BUNDLER INTERACTION  ///\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/atlas/Atlas.sol\":\"Atlas\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd\",\"dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec\",\"dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0\",\"dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc\",\"dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f\",\"dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3\",\"dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc\",\"dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51\",\"dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc\",\"dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516\",\"dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a\",\"dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/contracts/atlas/Atlas.sol\":{\"keccak256\":\"0x70a9464ce6ad537532053b28429404496392895eaed77abcba2238ceed9564bd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://04cc81a5404b354f75d9d9c770b5d47d6a93aab7938dbe19a4a858fdae36b400\",\"dweb:/ipfs/QmXYbTTrEJwerG8psmKAaEAmZ4Lw8bdEhtz22iGRJzBnTF\"]},\"src/contracts/atlas/DAppIntegration.sol\":{\"keccak256\":\"0xdba8dcd90ae9a88767644e440a79e93dc167be408cbba09831d35efad0541d79\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://db5392a141d159a5aa7ffbc25ee1c2c2ea7e092f2f236cfe38d9c10e8243e537\",\"dweb:/ipfs/QmcWZK25WKdGjbGkdLunAU5JX8gQU8c6i446RKcWawUZ26\"]},\"src/contracts/atlas/DAppVerification.sol\":{\"keccak256\":\"0xa7e1b4225541f29336187d5f2e6783c99f1991528bef36cd797219576deb1aaa\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://68dc42a9fecd12e60b7927a3d005ea550c5b1f095d3b0b1ed2fe27854e62efb8\",\"dweb:/ipfs/QmSkxoWD43L6567mJhbJSPp4Y4Bb3V6c314pfvWdEEUqvA\"]},\"src/contracts/atlas/Escrow.sol\":{\"keccak256\":\"0x6af365167cbecda953b4ebc5563e7ed4ec9fd5609e08e21c3b44a088e0208b37\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1123cfc3ac61f2cd16b5633032853bc9215cf8abbafa50bf475a8fcb891c0e9e\",\"dweb:/ipfs/QmU8wqAxCDsPeopjpK5qJpmgWnibqH3XxL8puZxwKhaTvL\"]},\"src/contracts/atlas/ExecutionEnvironment.sol\":{\"keccak256\":\"0x879c08c3d3b6b92292ca8a94f0a2cfa41d1dbcabe89a6c661c1199f34084bdcf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9d4ca955c47c6eb230ad9ea6e13fb350a04a9662218888f4808336ecbcc7e3bd\",\"dweb:/ipfs/QmNw8Ri1a1Vak51mctL9GhpamJ9BDvzB6ZX2gp6iAKpxfa\"]},\"src/contracts/atlas/Factory.sol\":{\"keccak256\":\"0xc7f307e1bdb731f51a1fe984f2908127afedcfb8a3dd025b61c0a713d6855660\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://949c089f3bb34bf235ecd38c314eca50399a2bfd5a9423e7113add0bd58d628a\",\"dweb:/ipfs/QmZHx6bhxCyE548ngzFwVKFg2iqjVMGgtArHRkXsVzqhod\"]},\"src/contracts/atlas/Mimic.sol\":{\"keccak256\":\"0xf0351ffd1516d67a10b862d9aa0a016ebbab895e474b923578a97b1b909b15a6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2d9f01266a2ed86da23365d6c49a5193b2cdbbf03ca9b012eef5ada55856e02b\",\"dweb:/ipfs/QmVCecgceWdNb2qBwf53JSddvkqAPE7zYfwTnanc12nMJD\"]},\"src/contracts/atlas/SafetyLocks.sol\":{\"keccak256\":\"0xef51151709ee1abcbc1eae7b47d567cb9d7fee54f632169778a4d74a01904523\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://15ea27f9267e6beb553280a54ca2e7a239ec449b67b44718b47d01167f99e206\",\"dweb:/ipfs/QmWQ6jc6b2kDtXyzbpWqgUdeHkTDhRMU7P8vhnysBtgMNj\"]},\"src/contracts/atlas/SolverWrapper.sol\":{\"keccak256\":\"0x6ba542971bd3d68fed5d7177f5cee55950d7b4bb739dcb27e551169acb65d78c\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://21c5f78f1920704e60a9d674ef22c5e12d4e29fd37b1d1e46e1e29bf7458976b\",\"dweb:/ipfs/QmZXetgVPLX7NQgpyukevfFBrPyNRVupPJGWUkhrz4nVk9\"]},\"src/contracts/common/ExecutionBase.sol\":{\"keccak256\":\"0x76614e7751a005d05e14f10ff648ae5e938bd75c21de95cff7889dc69849fa68\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://56ad21ebf4ad0da3f6d43a7057b9c976b7ed6bae0505b36ce3175c1189162e98\",\"dweb:/ipfs/QmNuwecxA48abvhUSsi78oVDSHhHP5AyRRoZsHZ33jMgJJ\"]},\"src/contracts/common/Permit69.sol\":{\"keccak256\":\"0xc95b87f42c98b569be2a90f938ac60eae4691c4edaa0577f228df807f8f4d237\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d3b0491c510a6e2dee9e41d684f499d1e89549b2d9eb31e765914490894b3207\",\"dweb:/ipfs/QmVgJL1Bx55s49iuspnjm4b9y4ytEdkJuuSzAEjthwcad3\"]},\"src/contracts/interfaces/IDAppControl.sol\":{\"keccak256\":\"0xe39285e6fc34390b21e38867b6e1c0be57f1d6a42f842369b3c189e5c5a4c947\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://7bf05bfecc7f9475049e6713e31a688be23fa9cb37a67b1fcc9840c03e2bec4b\",\"dweb:/ipfs/QmUu5hzEGfXzQrHFTGbruwPHdq7RHGBBGReUiiVMPyhJVx\"]},\"src/contracts/interfaces/IExecutionEnvironment.sol\":{\"keccak256\":\"0xd4c050979ffaee4489158684a438cb9baa85b8fcd5eb156a9e0a2a9503f26323\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://f9524d81c63df07156af949ebde2fd2c0820ba54d59f0a30874ac67c45b0212d\",\"dweb:/ipfs/QmcvRU3hXJLA7rhQdjcyrJJFoFCLMJLBMLuqAPQEpUfVbA\"]},\"src/contracts/interfaces/IPermit69.sol\":{\"keccak256\":\"0xeb3e7f49c9402cb7281f4458f549c6a2d7555e4408b1338457badcf8e506a532\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://8e303be78695308fe1a436bf46ff9cd1bd45eca5591c34aa9a0481910e1d4fff\",\"dweb:/ipfs/QmTFLTUMd4PDSMHXoyniyRi8YTAUoWhSb39s6PFSKbX5Vv\"]},\"src/contracts/interfaces/ISafetyLocks.sol\":{\"keccak256\":\"0x01fa3ab767ce8ffad776e31a41aaa9c3b9d1d717779e68052de49e5883a5ef2a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://fe718f99cd339edae2f76258e8f8aa59a9915a2d79873b1bcbe56050eee47d68\",\"dweb:/ipfs/QmVNGm1sES5uQyox3J8XHM4R7GPDaJ9KahfyYtUep5vGKv\"]},\"src/contracts/interfaces/ISolverContract.sol\":{\"keccak256\":\"0xc22c37b8fa304a92b0a6865871d578c95f980b432ed0599a27f93eafdaa9e762\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e20ab27a2b3d65bde08f9b18ad955fb31700a810650e9940721111756683c2c1\",\"dweb:/ipfs/QmS7aCyFiGLu82xqq3q7JHatDcGRRCajDUsiARxhaytATE\"]},\"src/contracts/libraries/CallBits.sol\":{\"keccak256\":\"0x323985eb39892b0684be61a80593ff875a4331cefd215051addb96fd9bcd5936\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://82c7fc58e709bf07c6678142157b98828fc8a2de7384087d1b220538af3cc684\",\"dweb:/ipfs/QmXjMMCS9CxtZSFTfDjBw5sw7XH8vf4rW321RX3aRswx7X\"]},\"src/contracts/libraries/CallVerification.sol\":{\"keccak256\":\"0x331ed4573edb77483b0e9a773d0b7ab998269bc9fc279f933e15eb3a6079fdb7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://80043990bf037ec70b6d7ce05f21985f3fce4f4a344222f55028cb652625ee75\",\"dweb:/ipfs/QmbeeZqHjXqCqwAFRBaNWQHjYG5rtgXsoG3QiqobcgMdhG\"]},\"src/contracts/libraries/EscrowBits.sol\":{\"keccak256\":\"0x90646cc90506359aa869167ca27f4bc2c339829d799d42ff6028d018d62c166a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://71e95158cd5c63272952b961ec3fb9b1adbec147f93b1a3002b8daa63fa55da6\",\"dweb:/ipfs/QmWGtUErmBKumCx7EeQuUUa6HNAVA3FmzfrQ7BXkNWnxma\"]},\"src/contracts/libraries/SafetyBits.sol\":{\"keccak256\":\"0xce5643de33bb83099890ade385b813cbd6fa29ccd74e0ccacea86d59bdaabbea\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e59be2bf05512e7158de67e632712bd639978024ceda36a8d8eb449f4d7e861a\",\"dweb:/ipfs/QmQuJavgk3tE8pgyLDqhYf3AT9fTSHCGYpZr8ERsPqKoQC\"]},\"src/contracts/types/CallTypes.sol\":{\"keccak256\":\"0xdaf8947ab38114893337d8d34de922a1fc609d00de868a4614a1357bf4911b4d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e1523c79ec340f744683b82e59b5987c7919dae93f6f15f600d687ca63c95c53\",\"dweb:/ipfs/QmVrCiCu8S6dsjVfWoDeQmh8FLKbofMf2qrpros16HYExz\"]},\"src/contracts/types/Emissions.sol\":{\"keccak256\":\"0x2a05c3c0ae5549d2868bbf000aa31839a0da40105121759cae0651d5536733ab\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://207cd8c5239065498c2384b8e85c659a8ee245b113b6aff5d3f4e912d5a88498\",\"dweb:/ipfs/QmeeEKLwa2b3cq9t51vunJtcvgT1bqZ5RZntZNpLyjdaV5\"]},\"src/contracts/types/EscrowTypes.sol\":{\"keccak256\":\"0x53932fa97ad2e0a13947b2fddf4f8a6039f0510b30c0e2df599d9708b8532552\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://43fd99aaa8c2f6900ad0a511655a7318180bb383be457ad10b0879a9522358c9\",\"dweb:/ipfs/QmYxeQXqnm1UH9AcHPo9aL8BqgnEzjRUt9nJ14Eb27yV3b\"]},\"src/contracts/types/GovernanceTypes.sol\":{\"keccak256\":\"0xd4b9f1da10aa569c756cb48344ce499826a4c060c03e08cd4a8c3c0ef1dcb40a\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://77b26d2f1f77b96ef2cafa6d5d7427996055c07b591dea5e4da9c70c990f2c3a\",\"dweb:/ipfs/QmYBQxvtdFrZCdL6Mq8LasASGgNuSRkMA8GkotDdp46V7e\"]},\"src/contracts/types/LockTypes.sol\":{\"keccak256\":\"0x25a202fca9aa92f628951c1432603774aed4e864f24b7cad57d66be2449e10cf\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://91afebb1c29476c7be9406640433a3078bc3540f33ae78860bcef12819e37ea9\",\"dweb:/ipfs/Qmc9B6fK8RYPRQ8nxLjTWBPPT2FBB4TFydbTrfEv2Jc16D\"]},\"src/contracts/types/VerificationTypes.sol\":{\"keccak256\":\"0x6636a21188fdff3bd4c4fb95df9f05023bd477ca4b3285078f001d52f761e1dd\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0be467ada6952ebce1ffd4596042c3349247e47eb449dfb0b713ecde7cbc869d\",\"dweb:/ipfs/Qmc6qgtu6FfbYjuUPofFhwdEMVUTmgpxKWNg7HSHtq67on\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_escrowDuration",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlteredControlHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlteredUserHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HashChainBroken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "IntentUnfulfilled"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidShortString"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSolverHash"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PostSolverFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PreSolverFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SolverBidUnpaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SolverEVMError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SolverFailedCallback"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SolverMsgValueUnpaid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SolverOperationReverted"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "str",
              "type": "string"
            }
          ],
          "type": "error",
          "name": "StringTooLong"
        },
        {
          "inputs": [],
          "type": "event",
          "name": "EIP712DomainChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32",
              "indexed": false
            },
            {
              "internalType": "struct BidData[]",
              "name": "winningBids",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "bidAmount",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MEVPaymentFailure",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "solverTo",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "solverFrom",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "executed",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "result",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SolverTxResult",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "valueReturned",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasRefunded",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UserTxResult",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUNDLER_BASE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "BUNDLER_PREMIUM",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DAPP_TYPE_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_TYPE_HASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "activeEnvironment",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signatory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addSignatory"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "asyncNonceFills",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "atlas",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DAppConfig",
              "name": "dConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "callConfig",
                  "type": "uint32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createExecutionEnvironment",
          "outputs": [
            {
              "internalType": "address",
              "name": "executionEnvironment",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cumulativeDonations",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dapps",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "solverSigner",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "newBalance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dappControl",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableDApp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "surplusRecipient",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "donateToBundler"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eip712Domain",
          "outputs": [
            {
              "internalType": "bytes1",
              "name": "fields",
              "type": "bytes1"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "version",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "chainId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "verifyingContract",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "uint256[]",
              "name": "extensions",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "environment",
          "outputs": [
            {
              "internalType": "address",
              "name": "_environment",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "escrowDuration",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DAppConfig",
              "name": "dConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "callConfig",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct UserCall",
              "name": "uCall",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct SolverOperation[]",
              "name": "solverOps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct SolverCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userOpHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "controlCodeHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "bidsHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BidData[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bidAmount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "address",
              "name": "executionEnvironment",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "callChainHash",
              "type": "bytes32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "accruedGasRebate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "execution",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEscrowAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "escrowAddress",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct UserCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "control",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getExecutionEnvironment",
          "outputs": [
            {
              "internalType": "address",
              "name": "executionEnvironment",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct SolverCall",
              "name": "sCall",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "userOpHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "controlCodeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "bidsHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSolverPayload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "payload",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct UserCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "control",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserOperationPayload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "payload",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Verification",
              "name": "verification",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct DAppProof",
                  "name": "proof",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userOpHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "callChainHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "controlCodeHash",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVerificationPayload",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "payload",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "governance",
          "outputs": [
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            },
            {
              "internalType": "uint64",
              "name": "lastUpdate",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initializeGovernance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "dappControl",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "integrateDApp"
        },
        {
          "inputs": [
            {
              "internalType": "struct DAppConfig",
              "name": "dConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "callConfig",
                  "type": "uint32"
                }
              ]
            },
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct UserCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "control",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct SolverOperation[]",
              "name": "solverOps",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct SolverCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userOpHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "controlCodeHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "bidsHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                },
                {
                  "internalType": "struct BidData[]",
                  "name": "bids",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "bidAmount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "struct Verification",
              "name": "verification",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct DAppProof",
                  "name": "proof",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "userOpHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "callChainHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "controlCodeHash",
                      "type": "bytes32"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "metacall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "governanceSignatory",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextGovernanceNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nextNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "solverSigner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextSolverNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nextNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nextUserNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "nextNonce",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "signatory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSignatory"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "salt",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "signatories",
          "outputs": [
            {
              "internalType": "address",
              "name": "governance",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "enabled",
              "type": "bool"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "solverSigner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "solverEscrowBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "solverSigner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "solverLastActiveBlock",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lastBlock",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "msgSender",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "solverSafetyCallback",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isSafe",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserCall",
              "name": "uCall",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxFeePerGas",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "control",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "testUserOperation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct UserOperation",
              "name": "userOp",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "struct UserCall",
                  "name": "call",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "gas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxFeePerGas",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "control",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "testUserOperation",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "lockState",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferDAppERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "destination",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "controller",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "callConfig",
              "type": "uint32"
            },
            {
              "internalType": "uint16",
              "name": "lockState",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferUserERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userNonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "eip712Domain()": {
            "details": "See {EIP-5267}. _Available since v4.9._"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(address)": {
            "notice": "EXTERNAL FUNCTIONS FOR SOLVER INTERACTION ///"
          },
          "donateToBundler(address)": {
            "notice": "EXTERNAL FUNCTIONS FOR BUNDLER INTERACTION  ///"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/contracts/atlas/Atlas.sol": "Atlas"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x7f6016716c0c6f49e8163af625290c7ef270a045d9b82be04e269035726d3213",
        "urls": [
          "bzz-raw://bd050537b58640f8545b319928ee66bef9649d1ebd68a3afa1d28a1ce8cea3dd",
          "dweb:/ipfs/QmbBVxERnZ2ciQuRuZ45czd2DRgouCLEhibLWtC2CrH2j4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x9d53fb0317c888ed0ef4a8476883d4304f5e7e6fa0161d84d18fa27a63875524",
        "urls": [
          "bzz-raw://9638e9a042f5b7695953ea394072f90b814ac98312e447f45c4f2f6cdb22c3ec",
          "dweb:/ipfs/QmPvKu8hyzB2og54Lecmb2DvEiAgM9o5UC2gGgRQJ42PQw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xd9f9791f56c2afcd841237417d5a55fa8b69de2c1b528ddbfc7d7823fe136606",
        "urls": [
          "bzz-raw://f66271850d38488984ec1e38aeb57df1cda53538b2ddd19e2164c767792905f0",
          "dweb:/ipfs/QmetNJMTfgJ7SCNMwfLrZEwnL3xdNaBY5vMiqrRrUWjjes"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x94d97a78c720a10212552c5f7f27c61ea58eb027bd51dd054efae6925e785269",
        "urls": [
          "bzz-raw://563fd7373c84d700606fc113d535b1a103e7bad4b0412e6cb515d927fb8f57bc",
          "dweb:/ipfs/QmQEjP2DXCXRC4bxXPonLfF8cq1UvMhdQu5X1JynPntvio"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x113bce4d6d0fe7c4e1e3bf2760ba21c075448660a8dae6003f27b9ff86890612",
        "urls": [
          "bzz-raw://8c8a169ea47398b475696e66d07e354d9997680b5f954418caeeaec5427a131f",
          "dweb:/ipfs/QmSTK6XmjgYZ2CCGZ87AVTowNL3UWfRvqhT6DTbZoKyJzz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb31c4ee03d05c6202f6e354245ac3ab883d954f9f36074902089e1b3e645273d",
        "urls": [
          "bzz-raw://33bd98bde50b840b8d7d5cebf818176b9f219345078ed5d3bd0071f035efb2e3",
          "dweb:/ipfs/QmPYC7FZvCWCPF2qWg6TXXTTPGEdnT4y5nebPn1AoZ1H4p"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0xc3222299fd637498c81ab5c8e15c9327289d3708fb8a7063dd10a55a8813c9cf",
        "urls": [
          "bzz-raw://b6f5f818e75e8ae5a67b58cff9b351dd790a72d0a5332fb6f425a3561801b6cc",
          "dweb:/ipfs/QmXJEPtMM1AzwCh6u1o1wL2xdi1qRyxsTLt1eVgeC8Y1QH"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xb7004fe1ceab4a20ae13baec8732a5414b28d5ddb06f9f4184b49c1fc1d61521",
        "urls": [
          "bzz-raw://5a60b5d84bd7d7e455f4a1ca1d260f6b50c419e4c4e7196ef32fd77d0f480d51",
          "dweb:/ipfs/QmYwRMAYYsQuvvM4mnagYs8Zhqm5VXicXmxoqEvkiUzQSd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
        "keccak256": "0xac6c2efc64baccbde4904ae18ed45139c9aa8cff96d6888344d1e4d2eb8b659f",
        "urls": [
          "bzz-raw://6e416a280c610b6b7a5f158e4a41aacfaec01ef14d5d1de13b46be9e090265fc",
          "dweb:/ipfs/QmYZP2KrdyccBbhLZT42auhvBTMkwiwUS3V6HWb42rbwbG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
        "keccak256": "0xc0e310c163edf15db45d4ff938113ab357f94fa86e61ea8e790853c4d2e13256",
        "urls": [
          "bzz-raw://04db5bc05dcb05ba1f6ca2dfbead17adc8a2e2f911aa80b05e7a36d9eaf96516",
          "dweb:/ipfs/QmVkfHZbXVBUPsTopueCn3qGJX8aEjahFF3Fn4NcygLNm5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x8432884527a7ad91e6eed1cfc5a0811ae2073e5bca107bd0ca442e9236b03dbd",
        "urls": [
          "bzz-raw://e3aa0eadab7aafcf91a95684765f778f64386f0368de88522ce873c21385278a",
          "dweb:/ipfs/QmPfaVAqWgH1QsT3dHVuL6jwMZbVKdoP8w1PvpiPT2FPWd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/contracts/atlas/Atlas.sol": {
        "keccak256": "0x70a9464ce6ad537532053b28429404496392895eaed77abcba2238ceed9564bd",
        "urls": [
          "bzz-raw://04cc81a5404b354f75d9d9c770b5d47d6a93aab7938dbe19a4a858fdae36b400",
          "dweb:/ipfs/QmXYbTTrEJwerG8psmKAaEAmZ4Lw8bdEhtz22iGRJzBnTF"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/DAppIntegration.sol": {
        "keccak256": "0xdba8dcd90ae9a88767644e440a79e93dc167be408cbba09831d35efad0541d79",
        "urls": [
          "bzz-raw://db5392a141d159a5aa7ffbc25ee1c2c2ea7e092f2f236cfe38d9c10e8243e537",
          "dweb:/ipfs/QmcWZK25WKdGjbGkdLunAU5JX8gQU8c6i446RKcWawUZ26"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/DAppVerification.sol": {
        "keccak256": "0xa7e1b4225541f29336187d5f2e6783c99f1991528bef36cd797219576deb1aaa",
        "urls": [
          "bzz-raw://68dc42a9fecd12e60b7927a3d005ea550c5b1f095d3b0b1ed2fe27854e62efb8",
          "dweb:/ipfs/QmSkxoWD43L6567mJhbJSPp4Y4Bb3V6c314pfvWdEEUqvA"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/Escrow.sol": {
        "keccak256": "0x6af365167cbecda953b4ebc5563e7ed4ec9fd5609e08e21c3b44a088e0208b37",
        "urls": [
          "bzz-raw://1123cfc3ac61f2cd16b5633032853bc9215cf8abbafa50bf475a8fcb891c0e9e",
          "dweb:/ipfs/QmU8wqAxCDsPeopjpK5qJpmgWnibqH3XxL8puZxwKhaTvL"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/ExecutionEnvironment.sol": {
        "keccak256": "0x879c08c3d3b6b92292ca8a94f0a2cfa41d1dbcabe89a6c661c1199f34084bdcf",
        "urls": [
          "bzz-raw://9d4ca955c47c6eb230ad9ea6e13fb350a04a9662218888f4808336ecbcc7e3bd",
          "dweb:/ipfs/QmNw8Ri1a1Vak51mctL9GhpamJ9BDvzB6ZX2gp6iAKpxfa"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/Factory.sol": {
        "keccak256": "0xc7f307e1bdb731f51a1fe984f2908127afedcfb8a3dd025b61c0a713d6855660",
        "urls": [
          "bzz-raw://949c089f3bb34bf235ecd38c314eca50399a2bfd5a9423e7113add0bd58d628a",
          "dweb:/ipfs/QmZHx6bhxCyE548ngzFwVKFg2iqjVMGgtArHRkXsVzqhod"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/Mimic.sol": {
        "keccak256": "0xf0351ffd1516d67a10b862d9aa0a016ebbab895e474b923578a97b1b909b15a6",
        "urls": [
          "bzz-raw://2d9f01266a2ed86da23365d6c49a5193b2cdbbf03ca9b012eef5ada55856e02b",
          "dweb:/ipfs/QmVCecgceWdNb2qBwf53JSddvkqAPE7zYfwTnanc12nMJD"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/SafetyLocks.sol": {
        "keccak256": "0xef51151709ee1abcbc1eae7b47d567cb9d7fee54f632169778a4d74a01904523",
        "urls": [
          "bzz-raw://15ea27f9267e6beb553280a54ca2e7a239ec449b67b44718b47d01167f99e206",
          "dweb:/ipfs/QmWQ6jc6b2kDtXyzbpWqgUdeHkTDhRMU7P8vhnysBtgMNj"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/atlas/SolverWrapper.sol": {
        "keccak256": "0x6ba542971bd3d68fed5d7177f5cee55950d7b4bb739dcb27e551169acb65d78c",
        "urls": [
          "bzz-raw://21c5f78f1920704e60a9d674ef22c5e12d4e29fd37b1d1e46e1e29bf7458976b",
          "dweb:/ipfs/QmZXetgVPLX7NQgpyukevfFBrPyNRVupPJGWUkhrz4nVk9"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/common/ExecutionBase.sol": {
        "keccak256": "0x76614e7751a005d05e14f10ff648ae5e938bd75c21de95cff7889dc69849fa68",
        "urls": [
          "bzz-raw://56ad21ebf4ad0da3f6d43a7057b9c976b7ed6bae0505b36ce3175c1189162e98",
          "dweb:/ipfs/QmNuwecxA48abvhUSsi78oVDSHhHP5AyRRoZsHZ33jMgJJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/common/Permit69.sol": {
        "keccak256": "0xc95b87f42c98b569be2a90f938ac60eae4691c4edaa0577f228df807f8f4d237",
        "urls": [
          "bzz-raw://d3b0491c510a6e2dee9e41d684f499d1e89549b2d9eb31e765914490894b3207",
          "dweb:/ipfs/QmVgJL1Bx55s49iuspnjm4b9y4ytEdkJuuSzAEjthwcad3"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDAppControl.sol": {
        "keccak256": "0xe39285e6fc34390b21e38867b6e1c0be57f1d6a42f842369b3c189e5c5a4c947",
        "urls": [
          "bzz-raw://7bf05bfecc7f9475049e6713e31a688be23fa9cb37a67b1fcc9840c03e2bec4b",
          "dweb:/ipfs/QmUu5hzEGfXzQrHFTGbruwPHdq7RHGBBGReUiiVMPyhJVx"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IExecutionEnvironment.sol": {
        "keccak256": "0xd4c050979ffaee4489158684a438cb9baa85b8fcd5eb156a9e0a2a9503f26323",
        "urls": [
          "bzz-raw://f9524d81c63df07156af949ebde2fd2c0820ba54d59f0a30874ac67c45b0212d",
          "dweb:/ipfs/QmcvRU3hXJLA7rhQdjcyrJJFoFCLMJLBMLuqAPQEpUfVbA"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPermit69.sol": {
        "keccak256": "0xeb3e7f49c9402cb7281f4458f549c6a2d7555e4408b1338457badcf8e506a532",
        "urls": [
          "bzz-raw://8e303be78695308fe1a436bf46ff9cd1bd45eca5591c34aa9a0481910e1d4fff",
          "dweb:/ipfs/QmTFLTUMd4PDSMHXoyniyRi8YTAUoWhSb39s6PFSKbX5Vv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISafetyLocks.sol": {
        "keccak256": "0x01fa3ab767ce8ffad776e31a41aaa9c3b9d1d717779e68052de49e5883a5ef2a",
        "urls": [
          "bzz-raw://fe718f99cd339edae2f76258e8f8aa59a9915a2d79873b1bcbe56050eee47d68",
          "dweb:/ipfs/QmVNGm1sES5uQyox3J8XHM4R7GPDaJ9KahfyYtUep5vGKv"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISolverContract.sol": {
        "keccak256": "0xc22c37b8fa304a92b0a6865871d578c95f980b432ed0599a27f93eafdaa9e762",
        "urls": [
          "bzz-raw://e20ab27a2b3d65bde08f9b18ad955fb31700a810650e9940721111756683c2c1",
          "dweb:/ipfs/QmS7aCyFiGLu82xqq3q7JHatDcGRRCajDUsiARxhaytATE"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/CallBits.sol": {
        "keccak256": "0x323985eb39892b0684be61a80593ff875a4331cefd215051addb96fd9bcd5936",
        "urls": [
          "bzz-raw://82c7fc58e709bf07c6678142157b98828fc8a2de7384087d1b220538af3cc684",
          "dweb:/ipfs/QmXjMMCS9CxtZSFTfDjBw5sw7XH8vf4rW321RX3aRswx7X"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/CallVerification.sol": {
        "keccak256": "0x331ed4573edb77483b0e9a773d0b7ab998269bc9fc279f933e15eb3a6079fdb7",
        "urls": [
          "bzz-raw://80043990bf037ec70b6d7ce05f21985f3fce4f4a344222f55028cb652625ee75",
          "dweb:/ipfs/QmbeeZqHjXqCqwAFRBaNWQHjYG5rtgXsoG3QiqobcgMdhG"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/EscrowBits.sol": {
        "keccak256": "0x90646cc90506359aa869167ca27f4bc2c339829d799d42ff6028d018d62c166a",
        "urls": [
          "bzz-raw://71e95158cd5c63272952b961ec3fb9b1adbec147f93b1a3002b8daa63fa55da6",
          "dweb:/ipfs/QmWGtUErmBKumCx7EeQuUUa6HNAVA3FmzfrQ7BXkNWnxma"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/SafetyBits.sol": {
        "keccak256": "0xce5643de33bb83099890ade385b813cbd6fa29ccd74e0ccacea86d59bdaabbea",
        "urls": [
          "bzz-raw://e59be2bf05512e7158de67e632712bd639978024ceda36a8d8eb449f4d7e861a",
          "dweb:/ipfs/QmQuJavgk3tE8pgyLDqhYf3AT9fTSHCGYpZr8ERsPqKoQC"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/CallTypes.sol": {
        "keccak256": "0xdaf8947ab38114893337d8d34de922a1fc609d00de868a4614a1357bf4911b4d",
        "urls": [
          "bzz-raw://e1523c79ec340f744683b82e59b5987c7919dae93f6f15f600d687ca63c95c53",
          "dweb:/ipfs/QmVrCiCu8S6dsjVfWoDeQmh8FLKbofMf2qrpros16HYExz"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/Emissions.sol": {
        "keccak256": "0x2a05c3c0ae5549d2868bbf000aa31839a0da40105121759cae0651d5536733ab",
        "urls": [
          "bzz-raw://207cd8c5239065498c2384b8e85c659a8ee245b113b6aff5d3f4e912d5a88498",
          "dweb:/ipfs/QmeeEKLwa2b3cq9t51vunJtcvgT1bqZ5RZntZNpLyjdaV5"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/EscrowTypes.sol": {
        "keccak256": "0x53932fa97ad2e0a13947b2fddf4f8a6039f0510b30c0e2df599d9708b8532552",
        "urls": [
          "bzz-raw://43fd99aaa8c2f6900ad0a511655a7318180bb383be457ad10b0879a9522358c9",
          "dweb:/ipfs/QmYxeQXqnm1UH9AcHPo9aL8BqgnEzjRUt9nJ14Eb27yV3b"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/GovernanceTypes.sol": {
        "keccak256": "0xd4b9f1da10aa569c756cb48344ce499826a4c060c03e08cd4a8c3c0ef1dcb40a",
        "urls": [
          "bzz-raw://77b26d2f1f77b96ef2cafa6d5d7427996055c07b591dea5e4da9c70c990f2c3a",
          "dweb:/ipfs/QmYBQxvtdFrZCdL6Mq8LasASGgNuSRkMA8GkotDdp46V7e"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/LockTypes.sol": {
        "keccak256": "0x25a202fca9aa92f628951c1432603774aed4e864f24b7cad57d66be2449e10cf",
        "urls": [
          "bzz-raw://91afebb1c29476c7be9406640433a3078bc3540f33ae78860bcef12819e37ea9",
          "dweb:/ipfs/Qmc9B6fK8RYPRQ8nxLjTWBPPT2FBB4TFydbTrfEv2Jc16D"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/types/VerificationTypes.sol": {
        "keccak256": "0x6636a21188fdff3bd4c4fb95df9f05023bd477ca4b3285078f001d52f761e1dd",
        "urls": [
          "bzz-raw://0be467ada6952ebce1ffd4596042c3349247e47eb449dfb0b713ecde7cbc869d",
          "dweb:/ipfs/Qmc6qgtu6FfbYjuUPofFhwdEMVUTmgpxKWNg7HSHtq67on"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/atlas/Atlas.sol",
    "id": 29368,
    "exportedSymbols": {
      "Atlas": [
        29367
      ],
      "BaseLock": [
        41281
      ],
      "BidData": [
        41059
      ],
      "CallBits": [
        38763
      ],
      "CallConfig": [
        41107
      ],
      "CallConfigIndex": [
        41122
      ],
      "CallVerification": [
        38907
      ],
      "DAppConfig": [
        41078
      ],
      "DAppProof": [
        41315
      ],
      "DSTest": [
        1786
      ],
      "EscrowKey": [
        41272
      ],
      "ExecutionPhase": [
        41290
      ],
      "Factory": [
        33504
      ],
      "IExecutionEnvironment": [
        38051
      ],
      "PayeeData": [
        41068
      ],
      "PaymentData": [
        41073
      ],
      "SafetyBits": [
        40088
      ],
      "SolverCall": [
        41054
      ],
      "SolverOperation": [
        41033
      ],
      "SolverSafety": [
        41276
      ],
      "StdAssertions": [
        2671
      ],
      "StdChains": [
        3207
      ],
      "StdCheats": [
        5144
      ],
      "StdStorage": [
        6051
      ],
      "StdUtils": [
        8116
      ],
      "Test": [
        8158
      ],
      "TestBase": [
        1843
      ],
      "UserCall": [
        41021
      ],
      "UserOperation": [
        41002
      ],
      "Verification": [
        41300
      ],
      "Vm": [
        9315
      ],
      "console": [
        17379
      ],
      "console2": [
        25475
      ],
      "stdError": [
        5210
      ],
      "stdJson": [
        5877
      ],
      "stdMath": [
        6019
      ],
      "stdStorage": [
        7485
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:8917:28",
    "nodes": [
      {
        "id": 28596,
        "nodeType": "PragmaDirective",
        "src": "36:24:28",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 28598,
        "nodeType": "ImportDirective",
        "src": "62:78:28",
        "nodes": [],
        "absolutePath": "src/contracts/interfaces/IExecutionEnvironment.sol",
        "file": "../interfaces/IExecutionEnvironment.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 38052,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28597,
              "name": "IExecutionEnvironment",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38051,
              "src": "70:21:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28600,
        "nodeType": "ImportDirective",
        "src": "142:38:28",
        "nodes": [],
        "absolutePath": "src/contracts/atlas/Factory.sol",
        "file": "./Factory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 33505,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28599,
              "name": "Factory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33504,
              "src": "150:7:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28601,
        "nodeType": "ImportDirective",
        "src": "182:32:28",
        "nodes": [],
        "absolutePath": "src/contracts/types/CallTypes.sol",
        "file": "../types/CallTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 41123,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28602,
        "nodeType": "ImportDirective",
        "src": "215:32:28",
        "nodes": [],
        "absolutePath": "src/contracts/types/LockTypes.sol",
        "file": "../types/LockTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 41291,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28603,
        "nodeType": "ImportDirective",
        "src": "248:40:28",
        "nodes": [],
        "absolutePath": "src/contracts/types/VerificationTypes.sol",
        "file": "../types/VerificationTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 41316,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28605,
        "nodeType": "ImportDirective",
        "src": "290:67:28",
        "nodes": [],
        "absolutePath": "src/contracts/libraries/CallVerification.sol",
        "file": "../libraries/CallVerification.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 38908,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28604,
              "name": "CallVerification",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38907,
              "src": "298:16:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28607,
        "nodeType": "ImportDirective",
        "src": "358:51:28",
        "nodes": [],
        "absolutePath": "src/contracts/libraries/CallBits.sol",
        "file": "../libraries/CallBits.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 38764,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28606,
              "name": "CallBits",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38763,
              "src": "366:8:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28609,
        "nodeType": "ImportDirective",
        "src": "410:55:28",
        "nodes": [],
        "absolutePath": "src/contracts/libraries/SafetyBits.sol",
        "file": "../libraries/SafetyBits.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 40089,
        "symbolAliases": [
          {
            "foreign": {
              "id": 28608,
              "name": "SafetyBits",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40088,
              "src": "418:10:28",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 28610,
        "nodeType": "ImportDirective",
        "src": "467:28:28",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 29368,
        "sourceUnit": 8159,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 29367,
        "nodeType": "ContractDefinition",
        "src": "497:8455:28",
        "nodes": [
          {
            "id": 28618,
            "nodeType": "UsingForDirective",
            "src": "535:36:28",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28615,
              "name": "CallVerification",
              "nameLocations": [
                "541:16:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38907,
              "src": "541:16:28"
            },
            "typeName": {
              "id": 28617,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28616,
                "name": "UserCall",
                "nameLocations": [
                  "562:8:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41021,
                "src": "562:8:28"
              },
              "referencedDeclaration": 41021,
              "src": "562:8:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UserCall_$41021_storage_ptr",
                "typeString": "struct UserCall"
              }
            }
          },
          {
            "id": 28621,
            "nodeType": "UsingForDirective",
            "src": "576:26:28",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28619,
              "name": "CallBits",
              "nameLocations": [
                "582:8:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 38763,
              "src": "582:8:28"
            },
            "typeName": {
              "id": 28620,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "595:6:28",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            }
          },
          {
            "id": 28625,
            "nodeType": "UsingForDirective",
            "src": "607:31:28",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 28622,
              "name": "SafetyBits",
              "nameLocations": [
                "613:10:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40088,
              "src": "613:10:28"
            },
            "typeName": {
              "id": 28624,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 28623,
                "name": "EscrowKey",
                "nameLocations": [
                  "628:9:28"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41272,
                "src": "628:9:28"
              },
              "referencedDeclaration": 41272,
              "src": "628:9:28",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_EscrowKey_$41272_storage_ptr",
                "typeString": "struct EscrowKey"
              }
            }
          },
          {
            "id": 28634,
            "nodeType": "FunctionDefinition",
            "src": "644:63:28",
            "nodes": [],
            "body": {
              "id": 28633,
              "nodeType": "Block",
              "src": "705:2:28",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 28630,
                    "name": "_escrowDuration",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 28627,
                    "src": "688:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  }
                ],
                "id": 28631,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 28629,
                  "name": "Factory",
                  "nameLocations": [
                    "680:7:28"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33504,
                  "src": "680:7:28"
                },
                "nodeType": "ModifierInvocation",
                "src": "680:24:28"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 28628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28627,
                  "mutability": "mutable",
                  "name": "_escrowDuration",
                  "nameLocation": "663:15:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28634,
                  "src": "656:22:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 28626,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "655:24:28"
            },
            "returnParameters": {
              "id": 28632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "705:0:28"
            },
            "scope": 29367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 28654,
            "nodeType": "FunctionDefinition",
            "src": "713:219:28",
            "nodes": [],
            "body": {
              "id": 28653,
              "nodeType": "Block",
              "src": "826:106:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 28651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28642,
                      "name": "executionEnvironment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28640,
                      "src": "836:20:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28644,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28637,
                          "src": "884:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 28645,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "893:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "897:6:28",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "893:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "expression": {
                              "id": 28647,
                              "name": "dConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28637,
                              "src": "905:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                "typeString": "struct DAppConfig calldata"
                              }
                            },
                            "id": 28648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "913:2:28",
                            "memberName": "to",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41075,
                            "src": "905:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 28649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "916:8:28",
                          "memberName": "codehash",
                          "nodeType": "MemberAccess",
                          "src": "905:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 28643,
                        "name": "_setExecutionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33450,
                        "src": "859:24:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_address_$",
                          "typeString": "function (struct DAppConfig calldata,address,bytes32) returns (address)"
                        }
                      },
                      "id": 28650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "859:66:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "836:89:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28652,
                  "nodeType": "ExpressionStatement",
                  "src": "836:89:28"
                }
              ]
            },
            "functionSelector": "0e1bc033",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createExecutionEnvironment",
            "nameLocation": "722:26:28",
            "parameters": {
              "id": 28638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28637,
                  "mutability": "mutable",
                  "name": "dConfig",
                  "nameLocation": "769:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28654,
                  "src": "749:27:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                    "typeString": "struct DAppConfig"
                  },
                  "typeName": {
                    "id": 28636,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28635,
                      "name": "DAppConfig",
                      "nameLocations": [
                        "749:10:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41078,
                      "src": "749:10:28"
                    },
                    "referencedDeclaration": 41078,
                    "src": "749:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                      "typeString": "struct DAppConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "748:29:28"
            },
            "returnParameters": {
              "id": 28641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28640,
                  "mutability": "mutable",
                  "name": "executionEnvironment",
                  "nameLocation": "804:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28654,
                  "src": "796:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "795:30:28"
            },
            "scope": 29367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28897,
            "nodeType": "FunctionDefinition",
            "src": "938:3040:28",
            "nodes": [],
            "body": {
              "id": 28896,
              "nodeType": "Block",
              "src": "1287:2691:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28671
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28671,
                      "mutability": "mutable",
                      "name": "gasMarker",
                      "nameLocation": "1306:9:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 28896,
                      "src": "1298:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 28670,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1298:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28674,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28672,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "1318:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 28673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1318:9:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1298:29:28"
                },
                {
                  "assignments": [
                    28676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28676,
                      "mutability": "mutable",
                      "name": "valid",
                      "nameLocation": "1464:5:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 28896,
                      "src": "1459:10:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 28675,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1459:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28678,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 28677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1472:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1459:17:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 28684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 28679,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28667,
                            "src": "1643:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          },
                          "id": 28680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1656:5:28",
                          "memberName": "proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41297,
                          "src": "1643:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppProof_$41315_calldata_ptr",
                            "typeString": "struct DAppProof calldata"
                          }
                        },
                        "id": 28681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1662:4:28",
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41302,
                        "src": "1643:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 28682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1670:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1674:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1670:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1643:37:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 28692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1684:51:28",
                      "subExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 28686,
                                "name": "userOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28660,
                                "src": "1697:6:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                                  "typeString": "struct UserOperation calldata"
                                }
                              },
                              "id": 28687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1704:4:28",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40999,
                              "src": "1697:11:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                "typeString": "struct UserCall calldata"
                              }
                            },
                            "id": 28688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1709:2:28",
                            "memberName": "to",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41006,
                            "src": "1697:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 28689,
                            "name": "dConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28657,
                            "src": "1713:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                              "typeString": "struct DAppConfig calldata"
                            }
                          },
                          {
                            "id": 28690,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28667,
                            "src": "1722:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                              "typeString": "struct DAppConfig calldata"
                            },
                            {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          ],
                          "id": 28685,
                          "name": "_verifyDApp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29899,
                          "src": "1685:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_struct$_Verification_$41300_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,struct DAppConfig calldata,struct Verification calldata) returns (bool)"
                          }
                        },
                        "id": 28691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1685:50:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1643:92:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28699,
                  "nodeType": "IfStatement",
                  "src": "1639:136:28",
                  "trueBody": {
                    "id": 28698,
                    "nodeType": "Block",
                    "src": "1737:38:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28694,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "1751:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28695,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1759:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1751:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28697,
                        "nodeType": "ExpressionStatement",
                        "src": "1751:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 28705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 28700,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28660,
                            "src": "1797:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 28701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1804:4:28",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40999,
                          "src": "1797:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 28702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1809:4:28",
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41004,
                        "src": "1797:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 28703,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1817:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1821:6:28",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1817:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "1797:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 28710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "1831:29:28",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 28707,
                            "name": "dConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28657,
                            "src": "1844:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                              "typeString": "struct DAppConfig calldata"
                            }
                          },
                          {
                            "id": 28708,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28660,
                            "src": "1853:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                              "typeString": "struct DAppConfig calldata"
                            },
                            {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          ],
                          "id": 28706,
                          "name": "_verifyUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30099,
                          "src": "1832:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_struct$_UserOperation_$41002_calldata_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct DAppConfig calldata,struct UserOperation calldata) returns (bool)"
                          }
                        },
                        "id": 28709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1832:28:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1797:63:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28717,
                  "nodeType": "IfStatement",
                  "src": "1793:109:28",
                  "trueBody": {
                    "id": 28716,
                    "nodeType": "Block",
                    "src": "1862:40:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28712,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "1877:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1885:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1877:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28715,
                        "nodeType": "ExpressionStatement",
                        "src": "1877:13:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    28719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28719,
                      "mutability": "mutable",
                      "name": "executionEnvironment",
                      "nameLocation": "2056:20:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 28896,
                      "src": "2048:28:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28718,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2048:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28732,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 28721,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28660,
                            "src": "2110:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 28722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2117:4:28",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40999,
                          "src": "2110:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 28723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2122:4:28",
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41004,
                        "src": "2110:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 28724,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28667,
                            "src": "2128:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          },
                          "id": 28725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2141:5:28",
                          "memberName": "proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41297,
                          "src": "2128:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppProof_$41315_calldata_ptr",
                            "typeString": "struct DAppProof calldata"
                          }
                        },
                        "id": 28726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2147:15:28",
                        "memberName": "controlCodeHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41314,
                        "src": "2128:34:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 28727,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28657,
                          "src": "2164:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        "id": 28728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2172:2:28",
                        "memberName": "to",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41075,
                        "src": "2164:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 28729,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28657,
                          "src": "2176:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        "id": 28730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2184:10:28",
                        "memberName": "callConfig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41077,
                        "src": "2176:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 28720,
                      "name": "_getExecutionEnvironmentCustom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33379
                      ],
                      "referencedDeclaration": 33379,
                      "src": "2079:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_address_$_t_uint32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32,address,uint32) view returns (address)"
                      }
                    },
                    "id": 28731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2079:116:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2048:147:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28733,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2300:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 28734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2304:5:28",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "2300:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 28735,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28660,
                          "src": "2312:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 28736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2319:4:28",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40999,
                        "src": "2312:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      "id": 28737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2324:5:28",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41016,
                      "src": "2312:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2300:29:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28744,
                  "nodeType": "IfStatement",
                  "src": "2296:53:28",
                  "trueBody": {
                    "id": 28743,
                    "nodeType": "Block",
                    "src": "2331:18:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28739,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "2333:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28740,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2341:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2333:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28742,
                        "nodeType": "ExpressionStatement",
                        "src": "2333:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28745,
                        "name": "solverOps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28664,
                        "src": "2420:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SolverOperation calldata[] calldata"
                        }
                      },
                      "id": 28746,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2430:6:28",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2420:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 28753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 28749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2445:5:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              },
                              "typeName": {
                                "id": 28748,
                                "name": "uint8",
                                "nodeType": "ElementaryTypeName",
                                "src": "2445:5:28",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint8_$",
                                "typeString": "type(uint8)"
                              }
                            ],
                            "id": 28747,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "2440:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 28750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2440:11:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint8",
                            "typeString": "type(uint8)"
                          }
                        },
                        "id": 28751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "2452:3:28",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "2440:15:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 28752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2458:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2440:19:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2420:39:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28760,
                  "nodeType": "IfStatement",
                  "src": "2416:63:28",
                  "trueBody": {
                    "id": 28759,
                    "nodeType": "Block",
                    "src": "2461:18:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28755,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "2463:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2471:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2463:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28758,
                        "nodeType": "ExpressionStatement",
                        "src": "2463:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 28766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 28761,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2492:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 28762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2498:6:28",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "2492:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 28763,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28660,
                            "src": "2507:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 28764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2514:4:28",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40999,
                          "src": "2507:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 28765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2519:8:28",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41008,
                        "src": "2507:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2492:35:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 28772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 28767,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "2531:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 28768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2537:6:28",
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "2531:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 28769,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28667,
                            "src": "2546:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          },
                          "id": 28770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2559:5:28",
                          "memberName": "proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41297,
                          "src": "2546:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppProof_$41315_calldata_ptr",
                            "typeString": "struct DAppProof calldata"
                          }
                        },
                        "id": 28771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2565:8:28",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41308,
                        "src": "2546:27:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2531:42:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2492:81:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28779,
                  "nodeType": "IfStatement",
                  "src": "2488:105:28",
                  "trueBody": {
                    "id": 28778,
                    "nodeType": "Block",
                    "src": "2575:18:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28774,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "2577:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2585:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2577:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28777,
                        "nodeType": "ExpressionStatement",
                        "src": "2577:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 28785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28780,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "2606:2:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 28781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2609:8:28",
                      "memberName": "gasprice",
                      "nodeType": "MemberAccess",
                      "src": "2606:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 28782,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28660,
                          "src": "2620:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 28783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2627:4:28",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40999,
                        "src": "2620:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      "id": 28784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2632:12:28",
                      "memberName": "maxFeePerGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41014,
                      "src": "2620:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2606:38:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28791,
                  "nodeType": "IfStatement",
                  "src": "2602:62:28",
                  "trueBody": {
                    "id": 28790,
                    "nodeType": "Block",
                    "src": "2646:18:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28786,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "2648:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2656:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2648:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28789,
                        "nodeType": "ExpressionStatement",
                        "src": "2648:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 28798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 28792,
                        "name": "executionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28719,
                        "src": "2677:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 28793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2698:8:28",
                      "memberName": "codehash",
                      "nodeType": "MemberAccess",
                      "src": "2677:29:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 28796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2718:1:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 28795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2710:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes32_$",
                          "typeString": "type(bytes32)"
                        },
                        "typeName": {
                          "id": 28794,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2710:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 28797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2710:10:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2677:43:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28804,
                  "nodeType": "IfStatement",
                  "src": "2673:67:28",
                  "trueBody": {
                    "id": 28803,
                    "nodeType": "Block",
                    "src": "2722:18:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 28801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28799,
                            "name": "valid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28676,
                            "src": "2724:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 28800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2732:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2724:13:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28802,
                        "nodeType": "ExpressionStatement",
                        "src": "2724:13:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 28814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "2753:39:28",
                      "subExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "expression": {
                              "id": 28805,
                              "name": "dConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28657,
                              "src": "2754:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                "typeString": "struct DAppConfig calldata"
                              }
                            },
                            "id": 28806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2762:10:28",
                            "memberName": "callConfig",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41077,
                            "src": "2754:18:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 28807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2773:17:28",
                          "memberName": "allowsZeroSolvers",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 38670,
                          "src": "2754:36:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                            "typeString": "function (uint32) pure returns (bool)"
                          }
                        },
                        "id": 28808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2754:38:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "expression": {
                            "id": 28810,
                            "name": "dConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28657,
                            "src": "2796:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                              "typeString": "struct DAppConfig calldata"
                            }
                          },
                          "id": 28811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2804:10:28",
                          "memberName": "callConfig",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41077,
                          "src": "2796:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 28812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2815:19:28",
                        "memberName": "needsSolverPostCall",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 38624,
                        "src": "2796:38:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                          "typeString": "function (uint32) pure returns (bool)"
                        }
                      },
                      "id": 28813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2796:40:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2753:83:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28826,
                  "nodeType": "IfStatement",
                  "src": "2749:158:28",
                  "trueBody": {
                    "id": 28825,
                    "nodeType": "Block",
                    "src": "2838:69:28",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 28818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 28815,
                              "name": "solverOps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28664,
                              "src": "2856:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct SolverOperation calldata[] calldata"
                              }
                            },
                            "id": 28816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2866:6:28",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2856:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 28817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2876:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2856:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 28824,
                        "nodeType": "IfStatement",
                        "src": "2852:45:28",
                        "trueBody": {
                          "id": 28823,
                          "nodeType": "Block",
                          "src": "2879:18:28",
                          "statements": [
                            {
                              "expression": {
                                "id": 28821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 28819,
                                  "name": "valid",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28676,
                                  "src": "2881:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 28820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2889:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2881:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 28822,
                              "nodeType": "ExpressionStatement",
                              "src": "2881:13:28"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 28828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3082:6:28",
                    "subExpression": {
                      "id": 28827,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28676,
                      "src": "3083:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 28831,
                  "nodeType": "IfStatement",
                  "src": "3078:43:28",
                  "trueBody": {
                    "id": 28830,
                    "nodeType": "Block",
                    "src": "3090:31:28",
                    "statements": [
                      {
                        "functionReturnParameters": 28669,
                        "id": 28829,
                        "nodeType": "Return",
                        "src": "3104:7:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 28833,
                        "name": "executionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28719,
                        "src": "3184:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 28832,
                      "name": "_initializeEscrowLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33630,
                      "src": "3162:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 28834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28835,
                  "nodeType": "ExpressionStatement",
                  "src": "3162:43:28"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 28868,
                        "nodeType": "Block",
                        "src": "3388:220:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "61636372756564476173526562617465",
                                  "id": 28856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3414:18:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_e4f85df3d285734e460d8ef00a669f9bba9206cde2b66e438257fbb1049ab5f4",
                                    "typeString": "literal_string \"accruedGasRebate\""
                                  },
                                  "value": "accruedGasRebate"
                                },
                                {
                                  "id": 28857,
                                  "name": "accruedGasRebate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28851,
                                  "src": "3433:16:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_e4f85df3d285734e460d8ef00a669f9bba9206cde2b66e438257fbb1049ab5f4",
                                    "typeString": "literal_string \"accruedGasRebate\""
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 28853,
                                  "name": "console",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17379,
                                  "src": "3402:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_console_$17379_$",
                                    "typeString": "type(library console)"
                                  }
                                },
                                "id": 28855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3410:3:28",
                                "memberName": "log",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10023,
                                "src": "3402:11:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                                  "typeString": "function (string memory,uint256) view"
                                }
                              },
                              "id": 28858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3402:48:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 28859,
                            "nodeType": "ExpressionStatement",
                            "src": "3402:48:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 28861,
                                  "name": "gasMarker",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28671,
                                  "src": "3550:9:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 28862,
                                  "name": "accruedGasRebate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28851,
                                  "src": "3561:16:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 28863,
                                      "name": "userOp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28660,
                                      "src": "3579:6:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                                        "typeString": "struct UserOperation calldata"
                                      }
                                    },
                                    "id": 28864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3586:4:28",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40999,
                                    "src": "3579:11:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                      "typeString": "struct UserCall calldata"
                                    }
                                  },
                                  "id": 28865,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3591:4:28",
                                  "memberName": "from",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41004,
                                  "src": "3579:16:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 28860,
                                "name": "_executeGasRefund",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31280,
                                "src": "3532:17:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                                  "typeString": "function (uint256,uint256,address)"
                                }
                              },
                              "id": 28866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3532:64:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 28867,
                            "nodeType": "ExpressionStatement",
                            "src": "3532:64:28"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 28869,
                      "nodeType": "TryCatchClause",
                      "parameters": {
                        "id": 28852,
                        "nodeType": "ParameterList",
                        "parameters": [
                          {
                            "constant": false,
                            "id": 28851,
                            "mutability": "mutable",
                            "name": "accruedGasRebate",
                            "nameLocation": "3370:16:28",
                            "nodeType": "VariableDeclaration",
                            "scope": 28869,
                            "src": "3362:24:28",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 28850,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3362:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "src": "3361:26:28"
                      },
                      "src": "3353:255:28"
                    },
                    {
                      "block": {
                        "id": 28880,
                        "nodeType": "Block",
                        "src": "3615:235:28",
                        "statements": [
                          {
                            "condition": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "expression": {
                                    "id": 28870,
                                    "name": "dConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28657,
                                    "src": "3735:7:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                      "typeString": "struct DAppConfig calldata"
                                    }
                                  },
                                  "id": 28871,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3743:10:28",
                                  "memberName": "callConfig",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 41077,
                                  "src": "3735:18:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "id": 28872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3754:18:28",
                                "memberName": "allowsReuseUserOps",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38693,
                                "src": "3735:37:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                                  "typeString": "function (uint32) pure returns (bool)"
                                }
                              },
                              "id": 28873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3735:39:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 28879,
                            "nodeType": "IfStatement",
                            "src": "3731:109:28",
                            "trueBody": {
                              "id": 28878,
                              "nodeType": "Block",
                              "src": "3776:64:28",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "4552522d46303720526576657274546f5265757365",
                                        "id": 28875,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3801:23:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_8e5c585e47fce97721de74262c368bfe646ba69d5575bdb3017e2e505c903dbe",
                                          "typeString": "literal_string \"ERR-F07 RevertToReuse\""
                                        },
                                        "value": "ERR-F07 RevertToReuse"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_8e5c585e47fce97721de74262c368bfe646ba69d5575bdb3017e2e505c903dbe",
                                          "typeString": "literal_string \"ERR-F07 RevertToReuse\""
                                        }
                                      ],
                                      "id": 28874,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "3794:6:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 28876,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3794:31:28",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 28877,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3794:31:28"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 28881,
                      "nodeType": "TryCatchClause",
                      "src": "3609:241:28"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 28841,
                        "name": "dConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28657,
                        "src": "3251:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                          "typeString": "struct DAppConfig calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 28842,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28660,
                          "src": "3260:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        },
                        "id": 28843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3267:4:28",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40999,
                        "src": "3260:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      {
                        "id": 28844,
                        "name": "solverOps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28664,
                        "src": "3273:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SolverOperation calldata[] calldata"
                        }
                      },
                      {
                        "id": 28845,
                        "name": "executionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28719,
                        "src": "3284:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 28846,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28667,
                            "src": "3306:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                              "typeString": "struct Verification calldata"
                            }
                          },
                          "id": 28847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3319:5:28",
                          "memberName": "proof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41297,
                          "src": "3306:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppProof_$41315_calldata_ptr",
                            "typeString": "struct DAppProof calldata"
                          }
                        },
                        "id": 28848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3325:13:28",
                        "memberName": "callChainHash",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41312,
                        "src": "3306:32:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                          "typeString": "struct DAppConfig calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct SolverOperation calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct SolverOperation calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "expression": {
                          "id": 28836,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "3220:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Atlas_$29367",
                            "typeString": "contract Atlas"
                          }
                        },
                        "id": 28837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3225:7:28",
                        "memberName": "execute",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28950,
                        "src": "3220:12:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_DAppConfig_$41078_memory_ptr_$_t_struct$_UserCall_$41021_memory_ptr_$_t_array$_t_struct$_SolverOperation_$41033_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$",
                          "typeString": "function (struct DAppConfig memory,struct UserCall memory,struct SolverOperation memory[] memory,address,bytes32) payable external returns (uint256)"
                        }
                      },
                      "id": 28840,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 28838,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3240:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 28839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3244:5:28",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3240:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "3220:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_DAppConfig_$41078_memory_ptr_$_t_struct$_UserCall_$41021_memory_ptr_$_t_array$_t_struct$_SolverOperation_$41033_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_bytes32_$returns$_t_uint256_$value",
                        "typeString": "function (struct DAppConfig memory,struct UserCall memory,struct SolverOperation memory[] memory,address,bytes32) payable external returns (uint256)"
                      }
                    },
                    "id": 28849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3220:119:28",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28882,
                  "nodeType": "TryStatement",
                  "src": "3216:634:28"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 28883,
                      "name": "_releaseEscrowLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33671,
                      "src": "3888:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 28884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:20:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28885,
                  "nodeType": "ExpressionStatement",
                  "src": "3888:20:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "746f74616c206761732075736564",
                        "id": 28889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3931:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a83be121b2e7d78ccd3dc4df64270d22ceaf5ab46e04126a33fb0c03f70a7641",
                          "typeString": "literal_string \"total gas used\""
                        },
                        "value": "total gas used"
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 28893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 28890,
                          "name": "gasMarker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28671,
                          "src": "3949:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 28891,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "3961:7:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 28892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3961:9:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3949:21:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_a83be121b2e7d78ccd3dc4df64270d22ceaf5ab46e04126a33fb0c03f70a7641",
                          "typeString": "literal_string \"total gas used\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 28886,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17379,
                        "src": "3919:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$17379_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 28888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3927:3:28",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10023,
                      "src": "3919:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256) view"
                      }
                    },
                    "id": 28894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3919:52:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 28895,
                  "nodeType": "ExpressionStatement",
                  "src": "3919:52:28"
                }
              ]
            },
            "functionSelector": "c42242b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "metacall",
            "nameLocation": "947:8:28",
            "parameters": {
              "id": 28668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28657,
                  "mutability": "mutable",
                  "name": "dConfig",
                  "nameLocation": "985:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28897,
                  "src": "965:27:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                    "typeString": "struct DAppConfig"
                  },
                  "typeName": {
                    "id": 28656,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28655,
                      "name": "DAppConfig",
                      "nameLocations": [
                        "965:10:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41078,
                      "src": "965:10:28"
                    },
                    "referencedDeclaration": 41078,
                    "src": "965:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                      "typeString": "struct DAppConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28660,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "1049:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28897,
                  "src": "1026:29:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 28659,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28658,
                      "name": "UserOperation",
                      "nameLocations": [
                        "1026:13:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41002,
                      "src": "1026:13:28"
                    },
                    "referencedDeclaration": 41002,
                    "src": "1026:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$41002_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28664,
                  "mutability": "mutable",
                  "name": "solverOps",
                  "nameLocation": "1107:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28897,
                  "src": "1080:36:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SolverOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28662,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28661,
                        "name": "SolverOperation",
                        "nameLocations": [
                          "1080:15:28"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 41033,
                        "src": "1080:15:28"
                      },
                      "referencedDeclaration": 41033,
                      "src": "1080:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SolverOperation_$41033_storage_ptr",
                        "typeString": "struct SolverOperation"
                      }
                    },
                    "id": 28663,
                    "nodeType": "ArrayTypeName",
                    "src": "1080:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_storage_$dyn_storage_ptr",
                      "typeString": "struct SolverOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28667,
                  "mutability": "mutable",
                  "name": "verification",
                  "nameLocation": "1197:12:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28897,
                  "src": "1175:34:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Verification_$41300_calldata_ptr",
                    "typeString": "struct Verification"
                  },
                  "typeName": {
                    "id": 28666,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28665,
                      "name": "Verification",
                      "nameLocations": [
                        "1175:12:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41300,
                      "src": "1175:12:28"
                    },
                    "referencedDeclaration": 41300,
                    "src": "1175:12:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Verification_$41300_storage_ptr",
                      "typeString": "struct Verification"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "955:314:28"
            },
            "returnParameters": {
              "id": 28669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1287:0:28"
            },
            "scope": 29367,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 28950,
            "nodeType": "FunctionDefinition",
            "src": "3984:724:28",
            "nodes": [],
            "body": {
              "id": 28949,
              "nodeType": "Block",
              "src": "4244:464:28",
              "nodes": [],
              "statements": [
                {
                  "id": 28939,
                  "nodeType": "Block",
                  "src": "4254:335:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 28923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 28917,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4357:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 28918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4361:6:28",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4357:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 28921,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4379:4:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Atlas_$29367",
                                    "typeString": "contract Atlas"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Atlas_$29367",
                                    "typeString": "contract Atlas"
                                  }
                                ],
                                "id": 28920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4371:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 28919,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4371:7:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 28922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4371:13:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4357:27:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4552522d46303620496e76616c6964416363657373",
                            "id": 28924,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4386:23:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_34dcf5945f034d205da17524eeed89b3b8f363ce195238cb697ec9fff18184c6",
                              "typeString": "literal_string \"ERR-F06 InvalidAccess\""
                            },
                            "value": "ERR-F06 InvalidAccess"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_34dcf5945f034d205da17524eeed89b3b8f363ce195238cb697ec9fff18184c6",
                              "typeString": "literal_string \"ERR-F06 InvalidAccess\""
                            }
                          ],
                          "id": 28916,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4349:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 28925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4349:61:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 28926,
                      "nodeType": "ExpressionStatement",
                      "src": "4349:61:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 28935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 28928,
                              "name": "callChainHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28911,
                              "src": "4473:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 28931,
                                  "name": "dConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28900,
                                  "src": "4524:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                    "typeString": "struct DAppConfig calldata"
                                  }
                                },
                                {
                                  "id": 28932,
                                  "name": "uCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28903,
                                  "src": "4533:5:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                    "typeString": "struct UserCall calldata"
                                  }
                                },
                                {
                                  "id": 28933,
                                  "name": "solverOps",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28907,
                                  "src": "4540:9:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct SolverOperation calldata[] calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                    "typeString": "struct DAppConfig calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                    "typeString": "struct UserCall calldata"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct SolverOperation calldata[] calldata"
                                  }
                                ],
                                "expression": {
                                  "id": 28929,
                                  "name": "CallVerification",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38907,
                                  "src": "4490:16:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_CallVerification_$38907_$",
                                    "typeString": "type(library CallVerification)"
                                  }
                                },
                                "id": 28930,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4507:16:28",
                                "memberName": "getCallChainHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 38906,
                                "src": "4490:33:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_struct$_UserCall_$41021_calldata_ptr_$_t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (struct DAppConfig calldata,struct UserCall calldata,struct SolverOperation calldata[] calldata) pure returns (bytes32)"
                                }
                              },
                              "id": 28934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4490:60:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "4473:77:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4552522d46303720496e76616c696453657175656e6365",
                            "id": 28936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4552:25:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_86cf9282cb29e1ba4cf41c4db1311e7d235b6d4ea90b8e9ce3f898bffea551c5",
                              "typeString": "literal_string \"ERR-F07 InvalidSequence\""
                            },
                            "value": "ERR-F07 InvalidSequence"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_86cf9282cb29e1ba4cf41c4db1311e7d235b6d4ea90b8e9ce3f898bffea551c5",
                              "typeString": "literal_string \"ERR-F07 InvalidSequence\""
                            }
                          ],
                          "id": 28927,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4465:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 28937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4465:113:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 28938,
                      "nodeType": "ExpressionStatement",
                      "src": "4465:113:28"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 28947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 28940,
                      "name": "accruedGasRebate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28914,
                      "src": "4625:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28942,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28900,
                          "src": "4653:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        {
                          "id": 28943,
                          "name": "uCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28903,
                          "src": "4662:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        {
                          "id": 28944,
                          "name": "solverOps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28907,
                          "src": "4669:9:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct SolverOperation calldata[] calldata"
                          }
                        },
                        {
                          "id": 28945,
                          "name": "executionEnvironment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28909,
                          "src": "4680:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          },
                          {
                            "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                            "typeString": "struct SolverOperation calldata[] calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 28941,
                        "name": "_execute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29168,
                        "src": "4644:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_struct$_UserCall_$41021_calldata_ptr_$_t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (struct DAppConfig calldata,struct UserCall calldata,struct SolverOperation calldata[] calldata,address) returns (uint256)"
                        }
                      },
                      "id": 28946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4644:57:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4625:76:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28948,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:76:28"
                }
              ]
            },
            "functionSelector": "dd8ec6f0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nameLocation": "3993:7:28",
            "parameters": {
              "id": 28912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28900,
                  "mutability": "mutable",
                  "name": "dConfig",
                  "nameLocation": "4030:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4010:27:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                    "typeString": "struct DAppConfig"
                  },
                  "typeName": {
                    "id": 28899,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28898,
                      "name": "DAppConfig",
                      "nameLocations": [
                        "4010:10:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41078,
                      "src": "4010:10:28"
                    },
                    "referencedDeclaration": 41078,
                    "src": "4010:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                      "typeString": "struct DAppConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28903,
                  "mutability": "mutable",
                  "name": "uCall",
                  "nameLocation": "4065:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4047:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                    "typeString": "struct UserCall"
                  },
                  "typeName": {
                    "id": 28902,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28901,
                      "name": "UserCall",
                      "nameLocations": [
                        "4047:8:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41021,
                      "src": "4047:8:28"
                    },
                    "referencedDeclaration": 41021,
                    "src": "4047:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserCall_$41021_storage_ptr",
                      "typeString": "struct UserCall"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28907,
                  "mutability": "mutable",
                  "name": "solverOps",
                  "nameLocation": "4107:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4080:36:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SolverOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28905,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28904,
                        "name": "SolverOperation",
                        "nameLocations": [
                          "4080:15:28"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 41033,
                        "src": "4080:15:28"
                      },
                      "referencedDeclaration": 41033,
                      "src": "4080:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SolverOperation_$41033_storage_ptr",
                        "typeString": "struct SolverOperation"
                      }
                    },
                    "id": 28906,
                    "nodeType": "ArrayTypeName",
                    "src": "4080:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_storage_$dyn_storage_ptr",
                      "typeString": "struct SolverOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28909,
                  "mutability": "mutable",
                  "name": "executionEnvironment",
                  "nameLocation": "4134:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4126:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28908,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4126:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28911,
                  "mutability": "mutable",
                  "name": "callChainHash",
                  "nameLocation": "4172:13:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4164:21:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4164:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4000:191:28"
            },
            "returnParameters": {
              "id": 28915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28914,
                  "mutability": "mutable",
                  "name": "accruedGasRebate",
                  "nameLocation": "4226:16:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 28950,
                  "src": "4218:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4218:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4217:26:28"
            },
            "scope": 29367,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29168,
            "nodeType": "FunctionDefinition",
            "src": "4714:2353:28",
            "nodes": [],
            "body": {
              "id": 29167,
              "nodeType": "Block",
              "src": "4936:2131:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    28968
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28968,
                      "mutability": "mutable",
                      "name": "userOpHash",
                      "nameLocation": "5096:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5088:18:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 28967,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5088:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28972,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28969,
                        "name": "uCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28956,
                        "src": "5109:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      "id": 28970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5115:20:28",
                      "memberName": "getUserOperationHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38786,
                      "src": "5109:26:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_UserCall_$41021_calldata_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_UserCall_$41021_calldata_ptr_$",
                        "typeString": "function (struct UserCall calldata) pure returns (bytes32)"
                      }
                    },
                    "id": 28971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:28:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5088:49:28"
                },
                {
                  "assignments": [
                    28974
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28974,
                      "mutability": "mutable",
                      "name": "callConfig",
                      "nameLocation": "5155:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5148:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 28973,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5148:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28980,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 28977,
                          "name": "uCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28956,
                          "src": "5193:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 28978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5199:7:28",
                        "memberName": "control",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41018,
                        "src": "5193:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 28975,
                        "name": "CallBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38763,
                        "src": "5168:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallBits_$38763_$",
                          "typeString": "type(library CallBits)"
                        }
                      },
                      "id": 28976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5177:15:28",
                      "memberName": "buildCallConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38179,
                      "src": "5168:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view returns (uint32)"
                      }
                    },
                    "id": 28979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5168:39:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5148:59:28"
                },
                {
                  "assignments": [
                    28983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28983,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "5267:3:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5250:20:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                        "typeString": "struct EscrowKey"
                      },
                      "typeName": {
                        "id": 28982,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 28981,
                          "name": "EscrowKey",
                          "nameLocations": [
                            "5250:9:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41272,
                          "src": "5250:9:28"
                        },
                        "referencedDeclaration": 41272,
                        "src": "5250:9:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscrowKey_$41272_storage_ptr",
                          "typeString": "struct EscrowKey"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28993,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 28985,
                        "name": "dConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28953,
                        "src": "5290:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                          "typeString": "struct DAppConfig calldata"
                        }
                      },
                      {
                        "id": 28986,
                        "name": "executionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28962,
                        "src": "5299:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 28989,
                              "name": "solverOps",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28960,
                              "src": "5327:9:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct SolverOperation calldata[] calldata"
                              }
                            },
                            "id": 28990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5337:6:28",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5327:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 28988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5321:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 28987,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5321:5:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 28991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5321:23:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                          "typeString": "struct DAppConfig calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 28984,
                      "name": "_buildEscrowLock",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33663,
                      "src": "5273:16:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_address_$_t_uint8_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                        "typeString": "function (struct DAppConfig calldata,address,uint8) view returns (struct EscrowKey memory)"
                      }
                    },
                    "id": 28992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5273:72:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                      "typeString": "struct EscrowKey memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5250:95:28"
                },
                {
                  "assignments": [
                    28995
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 28995,
                      "mutability": "mutable",
                      "name": "preOpsReturnData",
                      "nameLocation": "5369:16:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5356:29:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 28994,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5356:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 28996,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5356:29:28"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 28997,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28953,
                          "src": "5399:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        "id": 28998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5407:10:28",
                        "memberName": "callConfig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41077,
                        "src": "5399:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 28999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5418:15:28",
                      "memberName": "needsPreOpsCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38486,
                      "src": "5399:34:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                        "typeString": "function (uint32) pure returns (bool)"
                      }
                    },
                    "id": 29000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5399:36:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29020,
                  "nodeType": "IfStatement",
                  "src": "5395:195:28",
                  "trueBody": {
                    "id": 29019,
                    "nodeType": "Block",
                    "src": "5437:153:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 29007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29001,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28983,
                            "src": "5451:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 29004,
                                  "name": "dConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28953,
                                  "src": "5476:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                    "typeString": "struct DAppConfig calldata"
                                  }
                                },
                                "id": 29005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5484:2:28",
                                "memberName": "to",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41075,
                                "src": "5476:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 29002,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28983,
                                "src": "5457:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                  "typeString": "struct EscrowKey memory"
                                }
                              },
                              "id": 29003,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5461:14:28",
                              "memberName": "holdPreOpsLock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40011,
                              "src": "5457:18:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$_t_address_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                "typeString": "function (struct EscrowKey memory,address) pure returns (struct EscrowKey memory)"
                              }
                            },
                            "id": 29006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5457:30:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "src": "5451:36:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29008,
                        "nodeType": "ExpressionStatement",
                        "src": "5451:36:28"
                      },
                      {
                        "expression": {
                          "id": 29017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29009,
                            "name": "preOpsReturnData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28995,
                            "src": "5501:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 29011,
                                "name": "uCall",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28956,
                                "src": "5539:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                  "typeString": "struct UserCall calldata"
                                }
                              },
                              {
                                "id": 29012,
                                "name": "executionEnvironment",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28962,
                                "src": "5546:20:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 29013,
                                    "name": "key",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28983,
                                    "src": "5568:3:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                      "typeString": "struct EscrowKey memory"
                                    }
                                  },
                                  "id": 29014,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5572:4:28",
                                  "memberName": "pack",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 39800,
                                  "src": "5568:8:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                    "typeString": "function (struct EscrowKey memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 29015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5568:10:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                                  "typeString": "struct UserCall calldata"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 29010,
                              "name": "_executePreOpsCall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30692,
                              "src": "5520:18:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserCall_$41021_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function (struct UserCall calldata,address,bytes32) returns (bytes memory)"
                              }
                            },
                            "id": 29016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5520:59:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "5501:78:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 29018,
                        "nodeType": "ExpressionStatement",
                        "src": "5501:78:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 29027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29021,
                      "name": "key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28983,
                      "src": "5600:3:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                        "typeString": "struct EscrowKey memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 29024,
                            "name": "uCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28956,
                            "src": "5623:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                              "typeString": "struct UserCall calldata"
                            }
                          },
                          "id": 29025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5629:2:28",
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41006,
                          "src": "5623:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 29022,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28983,
                          "src": "5606:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29023,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5610:12:28",
                        "memberName": "holdUserLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39980,
                        "src": "5606:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$_t_address_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                          "typeString": "function (struct EscrowKey memory,address) pure returns (struct EscrowKey memory)"
                        }
                      },
                      "id": 29026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5606:26:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                        "typeString": "struct EscrowKey memory"
                      }
                    },
                    "src": "5600:32:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                      "typeString": "struct EscrowKey memory"
                    }
                  },
                  "id": 29028,
                  "nodeType": "ExpressionStatement",
                  "src": "5600:32:28"
                },
                {
                  "assignments": [
                    29030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29030,
                      "mutability": "mutable",
                      "name": "userReturnData",
                      "nameLocation": "5655:14:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5642:27:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 29029,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5642:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29038,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29032,
                        "name": "uCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28956,
                        "src": "5694:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      {
                        "id": 29033,
                        "name": "executionEnvironment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28962,
                        "src": "5701:20:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 29034,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28983,
                            "src": "5723:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "id": 29035,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5727:4:28",
                          "memberName": "pack",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39800,
                          "src": "5723:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                            "typeString": "function (struct EscrowKey memory) pure returns (bytes32)"
                          }
                        },
                        "id": 29036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5723:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 29031,
                      "name": "_executeUserOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30750,
                      "src": "5672:21:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UserCall_$41021_calldata_ptr_$_t_address_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (struct UserCall calldata,address,bytes32) returns (bytes memory)"
                      }
                    },
                    "id": 29037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5672:62:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5642:92:28"
                },
                {
                  "assignments": [
                    29040
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29040,
                      "mutability": "mutable",
                      "name": "returnData",
                      "nameLocation": "5758:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "5745:23:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 29039,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5745:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29041,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5745:23:28"
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 29044,
                        "name": "callConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28974,
                        "src": "5813:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 29042,
                        "name": "CallBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38763,
                        "src": "5782:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallBits_$38763_$",
                          "typeString": "type(library CallBits)"
                        }
                      },
                      "id": 29043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5791:21:28",
                      "memberName": "needsPreOpsReturnData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38509,
                      "src": "5782:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$",
                        "typeString": "function (uint32) pure returns (bool)"
                      }
                    },
                    "id": 29045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5782:42:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29051,
                  "nodeType": "IfStatement",
                  "src": "5778:102:28",
                  "trueBody": {
                    "id": 29050,
                    "nodeType": "Block",
                    "src": "5826:54:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 29048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29046,
                            "name": "returnData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29040,
                            "src": "5840:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 29047,
                            "name": "preOpsReturnData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28995,
                            "src": "5853:16:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "5840:29:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 29049,
                        "nodeType": "ExpressionStatement",
                        "src": "5840:29:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 29054,
                        "name": "callConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28974,
                        "src": "5922:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 29052,
                        "name": "CallBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38763,
                        "src": "5893:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallBits_$38763_$",
                          "typeString": "type(library CallBits)"
                        }
                      },
                      "id": 29053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5902:19:28",
                      "memberName": "needsUserReturnData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38532,
                      "src": "5893:28:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$",
                        "typeString": "function (uint32) pure returns (bool)"
                      }
                    },
                    "id": 29055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5893:40:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29066,
                  "nodeType": "IfStatement",
                  "src": "5889:124:28",
                  "trueBody": {
                    "id": 29065,
                    "nodeType": "Block",
                    "src": "5935:78:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 29063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29056,
                            "name": "returnData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29040,
                            "src": "5949:10:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 29060,
                                "name": "returnData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29040,
                                "src": "5975:10:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "id": 29061,
                                "name": "userReturnData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29030,
                                "src": "5987:14:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 29058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5962:5:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 29057,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5962:5:28",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 29059,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5968:6:28",
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "5962:12:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 29062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5962:40:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "5949:53:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 29064,
                        "nodeType": "ExpressionStatement",
                        "src": "5949:53:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    29068
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29068,
                      "mutability": "mutable",
                      "name": "auctionWon",
                      "nameLocation": "6028:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29167,
                      "src": "6023:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 29067,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6023:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29069,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6023:15:28"
                },
                {
                  "body": {
                    "id": 29115,
                    "nodeType": "Block",
                    "src": "6090:452:28",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 29089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 29078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "6175:11:28",
                            "subExpression": {
                              "id": 29077,
                              "name": "auctionWon",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29068,
                              "src": "6176:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 29088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 29079,
                              "name": "userOpHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28968,
                              "src": "6190:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 29080,
                                    "name": "solverOps",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 28960,
                                    "src": "6204:9:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct SolverOperation calldata[] calldata"
                                    }
                                  },
                                  "id": 29085,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 29084,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 29081,
                                        "name": "key",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28983,
                                        "src": "6214:3:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                          "typeString": "struct EscrowKey memory"
                                        }
                                      },
                                      "id": 29082,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "6218:9:28",
                                      "memberName": "callIndex",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 41265,
                                      "src": "6214:13:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "32",
                                      "id": 29083,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6228:1:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "src": "6214:15:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6204:26:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                                    "typeString": "struct SolverOperation calldata"
                                  }
                                },
                                "id": 29086,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6231:4:28",
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41026,
                                "src": "6204:31:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SolverCall_$41054_calldata_ptr",
                                  "typeString": "struct SolverCall calldata"
                                }
                              },
                              "id": 29087,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6236:10:28",
                              "memberName": "userOpHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41047,
                              "src": "6204:42:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "6190:56:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6175:71:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29109,
                        "nodeType": "IfStatement",
                        "src": "6171:289:28",
                        "trueBody": {
                          "id": 29108,
                          "nodeType": "Block",
                          "src": "6248:212:28",
                          "statements": [
                            {
                              "expression": {
                                "id": 29106,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 29090,
                                      "name": "auctionWon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29068,
                                      "src": "6267:10:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 29091,
                                      "name": "key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28983,
                                      "src": "6279:3:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                        "typeString": "struct EscrowKey memory"
                                      }
                                    }
                                  ],
                                  "id": 29092,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "6266:17:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                    "typeString": "tuple(bool,struct EscrowKey memory)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 29094,
                                      "name": "dConfig",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28953,
                                      "src": "6337:7:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                        "typeString": "struct DAppConfig calldata"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 29095,
                                        "name": "solverOps",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28960,
                                        "src": "6346:9:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                                          "typeString": "struct SolverOperation calldata[] calldata"
                                        }
                                      },
                                      "id": 29100,
                                      "indexExpression": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        },
                                        "id": 29099,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 29096,
                                            "name": "key",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 28983,
                                            "src": "6356:3:28",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                              "typeString": "struct EscrowKey memory"
                                            }
                                          },
                                          "id": 29097,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "6360:9:28",
                                          "memberName": "callIndex",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 41265,
                                          "src": "6356:13:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "32",
                                          "id": 29098,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "6370:1:28",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_2_by_1",
                                            "typeString": "int_const 2"
                                          },
                                          "value": "2"
                                        },
                                        "src": "6356:15:28",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6346:26:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                                        "typeString": "struct SolverOperation calldata"
                                      }
                                    },
                                    {
                                      "id": 29101,
                                      "name": "returnData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29040,
                                      "src": "6374:10:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "id": 29102,
                                      "name": "auctionWon",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29068,
                                      "src": "6386:10:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "id": 29103,
                                      "name": "executionEnvironment",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28962,
                                      "src": "6398:20:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 29104,
                                      "name": "key",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 28983,
                                      "src": "6420:3:28",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                        "typeString": "struct EscrowKey memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                        "typeString": "struct DAppConfig calldata"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                                        "typeString": "struct SolverOperation calldata"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                        "typeString": "struct EscrowKey memory"
                                      }
                                    ],
                                    "id": 29093,
                                    "name": "_solverExecutionIteration",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 29227,
                                    "src": "6286:25:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_struct$_SolverOperation_$41033_calldata_ptr_$_t_bytes_memory_ptr_$_t_bool_$_t_address_$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                      "typeString": "function (struct DAppConfig calldata,struct SolverOperation calldata,bytes memory,bool,address,struct EscrowKey memory) returns (bool,struct EscrowKey memory)"
                                    }
                                  },
                                  "id": 29105,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6286:159:28",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                    "typeString": "tuple(bool,struct EscrowKey memory)"
                                  }
                                },
                                "src": "6266:179:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 29107,
                              "nodeType": "ExpressionStatement",
                              "src": "6266:179:28"
                            }
                          ]
                        }
                      },
                      {
                        "id": 29114,
                        "nodeType": "UncheckedBlock",
                        "src": "6474:58:28",
                        "statements": [
                          {
                            "expression": {
                              "id": 29112,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "6502:15:28",
                              "subExpression": {
                                "expression": {
                                  "id": 29110,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28983,
                                  "src": "6504:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                    "typeString": "struct EscrowKey memory"
                                  }
                                },
                                "id": 29111,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberLocation": "6508:9:28",
                                "memberName": "callIndex",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 41265,
                                "src": "6504:13:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 29113,
                            "nodeType": "ExpressionStatement",
                            "src": "6502:15:28"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 29076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 29070,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28983,
                        "src": "6056:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                          "typeString": "struct EscrowKey memory"
                        }
                      },
                      "id": 29071,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6060:9:28",
                      "memberName": "callIndex",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41265,
                      "src": "6056:13:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "id": 29075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 29072,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28983,
                          "src": "6072:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29073,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6076:7:28",
                        "memberName": "callMax",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41267,
                        "src": "6072:11:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 29074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6086:1:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6072:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "6056:31:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29116,
                  "nodeType": "ForStatement",
                  "src": "6049:493:28"
                },
                {
                  "condition": {
                    "id": 29118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6625:11:28",
                    "subExpression": {
                      "id": 29117,
                      "name": "auctionWon",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29068,
                      "src": "6626:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29136,
                  "nodeType": "IfStatement",
                  "src": "6621:199:28",
                  "trueBody": {
                    "id": 29135,
                    "nodeType": "Block",
                    "src": "6638:182:28",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 29119,
                                "name": "dConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28953,
                                "src": "6656:7:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                  "typeString": "struct DAppConfig calldata"
                                }
                              },
                              "id": 29120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6664:10:28",
                              "memberName": "callConfig",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41077,
                              "src": "6656:18:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "id": 29121,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6675:19:28",
                            "memberName": "needsSolverPostCall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 38624,
                            "src": "6656:38:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                              "typeString": "function (uint32) pure returns (bool)"
                            }
                          },
                          "id": 29122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6656:40:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 29128,
                        "nodeType": "IfStatement",
                        "src": "6652:113:28",
                        "trueBody": {
                          "id": 29127,
                          "nodeType": "Block",
                          "src": "6698:67:28",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "4552522d46303820557365724e6f7446756c66696c6c6564",
                                    "id": 29124,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6723:26:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_df11b80dad30cbf09136b122fc4cd1ca6284d3cdc9c20603551f2adf26e831f5",
                                      "typeString": "literal_string \"ERR-F08 UserNotFulfilled\""
                                    },
                                    "value": "ERR-F08 UserNotFulfilled"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_df11b80dad30cbf09136b122fc4cd1ca6284d3cdc9c20603551f2adf26e831f5",
                                      "typeString": "literal_string \"ERR-F08 UserNotFulfilled\""
                                    }
                                  ],
                                  "id": 29123,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "6716:6:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 29125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6716:34:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 29126,
                              "nodeType": "ExpressionStatement",
                              "src": "6716:34:28"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 29133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29129,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28983,
                            "src": "6778:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 29130,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28983,
                                "src": "6784:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                  "typeString": "struct EscrowKey memory"
                                }
                              },
                              "id": 29131,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6788:19:28",
                              "memberName": "setAllSolversFailed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39867,
                              "src": "6784:23:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                "typeString": "function (struct EscrowKey memory) pure returns (struct EscrowKey memory)"
                              }
                            },
                            "id": 29132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6784:25:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "src": "6778:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29134,
                        "nodeType": "ExpressionStatement",
                        "src": "6778:31:28"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "expression": {
                          "id": 29137,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28953,
                          "src": "6834:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                            "typeString": "struct DAppConfig calldata"
                          }
                        },
                        "id": 29138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6842:10:28",
                        "memberName": "callConfig",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41077,
                        "src": "6834:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "id": 29139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6853:16:28",
                      "memberName": "needsPostOpsCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38647,
                      "src": "6834:35:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint32_$returns$_t_bool_$attached_to$_t_uint32_$",
                        "typeString": "function (uint32) pure returns (bool)"
                      }
                    },
                    "id": 29140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6834:37:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29160,
                  "nodeType": "IfStatement",
                  "src": "6830:192:28",
                  "trueBody": {
                    "id": 29159,
                    "nodeType": "Block",
                    "src": "6873:149:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 29149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29141,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28983,
                            "src": "6887:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 29146,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "6926:4:28",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Atlas_$29367",
                                      "typeString": "contract Atlas"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Atlas_$29367",
                                      "typeString": "contract Atlas"
                                    }
                                  ],
                                  "id": 29145,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6918:7:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 29144,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6918:7:28",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 29147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6918:13:28",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 29142,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28983,
                                "src": "6893:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                  "typeString": "struct EscrowKey memory"
                                }
                              },
                              "id": 29143,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6897:20:28",
                              "memberName": "holdVerificationLock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39831,
                              "src": "6893:24:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$_t_address_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                "typeString": "function (struct EscrowKey memory,address) pure returns (struct EscrowKey memory)"
                              }
                            },
                            "id": 29148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6893:39:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "src": "6887:45:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29150,
                        "nodeType": "ExpressionStatement",
                        "src": "6887:45:28"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29152,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29040,
                              "src": "6966:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29153,
                              "name": "executionEnvironment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28962,
                              "src": "6978:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 29154,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 28983,
                                  "src": "7000:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                    "typeString": "struct EscrowKey memory"
                                  }
                                },
                                "id": 29155,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7004:4:28",
                                "memberName": "pack",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39800,
                                "src": "7000:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                  "typeString": "function (struct EscrowKey memory) pure returns (bytes32)"
                                }
                              },
                              "id": 29156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7000:10:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 29151,
                            "name": "_executePostOpsCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31047,
                            "src": "6946:19:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes memory,address,bytes32)"
                            }
                          },
                          "id": 29157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6946:65:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29158,
                        "nodeType": "ExpressionStatement",
                        "src": "6946:65:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29163,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28983,
                          "src": "7046:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29164,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7050:9:28",
                        "memberName": "gasRefund",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41271,
                        "src": "7046:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 29162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7038:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 29161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7038:7:28",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 29165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7038:22:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 28966,
                  "id": 29166,
                  "nodeType": "Return",
                  "src": "7031:29:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_execute",
            "nameLocation": "4723:8:28",
            "parameters": {
              "id": 28963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28953,
                  "mutability": "mutable",
                  "name": "dConfig",
                  "nameLocation": "4761:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29168,
                  "src": "4741:27:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                    "typeString": "struct DAppConfig"
                  },
                  "typeName": {
                    "id": 28952,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28951,
                      "name": "DAppConfig",
                      "nameLocations": [
                        "4741:10:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41078,
                      "src": "4741:10:28"
                    },
                    "referencedDeclaration": 41078,
                    "src": "4741:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                      "typeString": "struct DAppConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28956,
                  "mutability": "mutable",
                  "name": "uCall",
                  "nameLocation": "4796:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29168,
                  "src": "4778:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                    "typeString": "struct UserCall"
                  },
                  "typeName": {
                    "id": 28955,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28954,
                      "name": "UserCall",
                      "nameLocations": [
                        "4778:8:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41021,
                      "src": "4778:8:28"
                    },
                    "referencedDeclaration": 41021,
                    "src": "4778:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserCall_$41021_storage_ptr",
                      "typeString": "struct UserCall"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28960,
                  "mutability": "mutable",
                  "name": "solverOps",
                  "nameLocation": "4838:9:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29168,
                  "src": "4811:36:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct SolverOperation[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 28958,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 28957,
                        "name": "SolverOperation",
                        "nameLocations": [
                          "4811:15:28"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 41033,
                        "src": "4811:15:28"
                      },
                      "referencedDeclaration": 41033,
                      "src": "4811:15:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SolverOperation_$41033_storage_ptr",
                        "typeString": "struct SolverOperation"
                      }
                    },
                    "id": 28959,
                    "nodeType": "ArrayTypeName",
                    "src": "4811:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SolverOperation_$41033_storage_$dyn_storage_ptr",
                      "typeString": "struct SolverOperation[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 28962,
                  "mutability": "mutable",
                  "name": "executionEnvironment",
                  "nameLocation": "4865:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29168,
                  "src": "4857:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4731:160:28"
            },
            "returnParameters": {
              "id": 28966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28965,
                  "mutability": "mutable",
                  "name": "accruedGasRebate",
                  "nameLocation": "4918:16:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29168,
                  "src": "4910:24:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4910:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4909:26:28"
            },
            "scope": 29367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29227,
            "nodeType": "FunctionDefinition",
            "src": "7073:610:28",
            "nodes": [],
            "body": {
              "id": 29226,
              "nodeType": "Block",
              "src": "7362:321:28",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 29200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 29191,
                          "name": "auctionWon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29178,
                          "src": "7373:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "id": 29192,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29183,
                          "src": "7385:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        }
                      ],
                      "id": 29193,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7372:17:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                        "typeString": "tuple(bool,struct EscrowKey memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 29195,
                          "name": "solverOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29174,
                          "src": "7416:8:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                            "typeString": "struct SolverOperation calldata"
                          }
                        },
                        {
                          "id": 29196,
                          "name": "returnData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29176,
                          "src": "7426:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "id": 29197,
                          "name": "executionEnvironment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29180,
                          "src": "7438:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29198,
                          "name": "key",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29183,
                          "src": "7460:3:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                            "typeString": "struct SolverOperation calldata"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        ],
                        "id": 29194,
                        "name": "_executeSolverOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30941,
                        "src": "7392:23:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_SolverOperation_$41033_calldata_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                          "typeString": "function (struct SolverOperation calldata,bytes memory,address,struct EscrowKey memory) returns (bool,struct EscrowKey memory)"
                        }
                      },
                      "id": 29199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7392:72:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                        "typeString": "tuple(bool,struct EscrowKey memory)"
                      }
                    },
                    "src": "7372:92:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29201,
                  "nodeType": "ExpressionStatement",
                  "src": "7372:92:28"
                },
                {
                  "condition": {
                    "id": 29202,
                    "name": "auctionWon",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29178,
                    "src": "7478:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29221,
                  "nodeType": "IfStatement",
                  "src": "7474:169:28",
                  "trueBody": {
                    "id": 29220,
                    "nodeType": "Block",
                    "src": "7490:153:28",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 29204,
                              "name": "dConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29171,
                              "src": "7519:7:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                "typeString": "struct DAppConfig calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 29205,
                                "name": "solverOp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29174,
                                "src": "7528:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                                  "typeString": "struct SolverOperation calldata"
                                }
                              },
                              "id": 29206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7537:4:28",
                              "memberName": "bids",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41032,
                              "src": "7528:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BidData_$41059_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct BidData calldata[] calldata"
                              }
                            },
                            {
                              "id": 29207,
                              "name": "returnData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29176,
                              "src": "7543:10:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 29208,
                              "name": "executionEnvironment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29180,
                              "src": "7555:20:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 29209,
                                  "name": "key",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 29183,
                                  "src": "7577:3:28",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                    "typeString": "struct EscrowKey memory"
                                  }
                                },
                                "id": 29210,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "7581:4:28",
                                "memberName": "pack",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39800,
                                "src": "7577:8:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_bytes32_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                  "typeString": "function (struct EscrowKey memory) pure returns (bytes32)"
                                }
                              },
                              "id": 29211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7577:10:28",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                                "typeString": "struct DAppConfig calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_struct$_BidData_$41059_calldata_ptr_$dyn_calldata_ptr",
                                "typeString": "struct BidData calldata[] calldata"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 29203,
                            "name": "_allocateValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31000,
                            "src": "7504:14:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_DAppConfig_$41078_calldata_ptr_$_t_array$_t_struct$_BidData_$41059_calldata_ptr_$dyn_calldata_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_bytes32_$returns$__$",
                              "typeString": "function (struct DAppConfig calldata,struct BidData calldata[] calldata,bytes memory,address,bytes32)"
                            }
                          },
                          "id": 29212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7504:84:28",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 29213,
                        "nodeType": "ExpressionStatement",
                        "src": "7504:84:28"
                      },
                      {
                        "expression": {
                          "id": 29218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 29214,
                            "name": "key",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29183,
                            "src": "7602:3:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 29215,
                                "name": "key",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 29183,
                                "src": "7608:3:28",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                                  "typeString": "struct EscrowKey memory"
                                }
                              },
                              "id": 29216,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7612:18:28",
                              "memberName": "allocationComplete",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 39891,
                              "src": "7608:22:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_EscrowKey_$41272_memory_ptr_$returns$_t_struct$_EscrowKey_$41272_memory_ptr_$attached_to$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                                "typeString": "function (struct EscrowKey memory) pure returns (struct EscrowKey memory)"
                              }
                            },
                            "id": 29217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7608:24:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                              "typeString": "struct EscrowKey memory"
                            }
                          },
                          "src": "7602:30:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                            "typeString": "struct EscrowKey memory"
                          }
                        },
                        "id": 29219,
                        "nodeType": "ExpressionStatement",
                        "src": "7602:30:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 29222,
                        "name": "auctionWon",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29178,
                        "src": "7660:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 29223,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29183,
                        "src": "7672:3:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                          "typeString": "struct EscrowKey memory"
                        }
                      }
                    ],
                    "id": 29224,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7659:17:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_struct$_EscrowKey_$41272_memory_ptr_$",
                      "typeString": "tuple(bool,struct EscrowKey memory)"
                    }
                  },
                  "functionReturnParameters": 29190,
                  "id": 29225,
                  "nodeType": "Return",
                  "src": "7652:24:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_solverExecutionIteration",
            "nameLocation": "7082:25:28",
            "parameters": {
              "id": 29184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29171,
                  "mutability": "mutable",
                  "name": "dConfig",
                  "nameLocation": "7137:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7117:27:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DAppConfig_$41078_calldata_ptr",
                    "typeString": "struct DAppConfig"
                  },
                  "typeName": {
                    "id": 29170,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29169,
                      "name": "DAppConfig",
                      "nameLocations": [
                        "7117:10:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41078,
                      "src": "7117:10:28"
                    },
                    "referencedDeclaration": 41078,
                    "src": "7117:10:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                      "typeString": "struct DAppConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29174,
                  "mutability": "mutable",
                  "name": "solverOp",
                  "nameLocation": "7179:8:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7154:33:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SolverOperation_$41033_calldata_ptr",
                    "typeString": "struct SolverOperation"
                  },
                  "typeName": {
                    "id": 29173,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29172,
                      "name": "SolverOperation",
                      "nameLocations": [
                        "7154:15:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41033,
                      "src": "7154:15:28"
                    },
                    "referencedDeclaration": 41033,
                    "src": "7154:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SolverOperation_$41033_storage_ptr",
                      "typeString": "struct SolverOperation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29176,
                  "mutability": "mutable",
                  "name": "returnData",
                  "nameLocation": "7210:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7197:23:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 29175,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7197:5:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29178,
                  "mutability": "mutable",
                  "name": "auctionWon",
                  "nameLocation": "7235:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7230:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29177,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7230:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29180,
                  "mutability": "mutable",
                  "name": "executionEnvironment",
                  "nameLocation": "7263:20:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7255:28:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7255:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29183,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "7310:3:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7293:20:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                    "typeString": "struct EscrowKey"
                  },
                  "typeName": {
                    "id": 29182,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29181,
                      "name": "EscrowKey",
                      "nameLocations": [
                        "7293:9:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41272,
                      "src": "7293:9:28"
                    },
                    "referencedDeclaration": 41272,
                    "src": "7293:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EscrowKey_$41272_storage_ptr",
                      "typeString": "struct EscrowKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7107:212:28"
            },
            "returnParameters": {
              "id": 29190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29186,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7338:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29185,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7338:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29189,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29227,
                  "src": "7344:16:28",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EscrowKey_$41272_memory_ptr",
                    "typeString": "struct EscrowKey"
                  },
                  "typeName": {
                    "id": 29188,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29187,
                      "name": "EscrowKey",
                      "nameLocations": [
                        "7344:9:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41272,
                      "src": "7344:9:28"
                    },
                    "referencedDeclaration": 41272,
                    "src": "7344:9:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EscrowKey_$41272_storage_ptr",
                      "typeString": "struct EscrowKey"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7337:24:28"
            },
            "scope": 29367,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 29254,
            "nodeType": "FunctionDefinition",
            "src": "7689:255:28",
            "nodes": [],
            "body": {
              "id": 29253,
              "nodeType": "Block",
              "src": "7770:174:28",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    29236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29236,
                      "mutability": "mutable",
                      "name": "control",
                      "nameLocation": "7788:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29253,
                      "src": "7780:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29235,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7780:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29239,
                  "initialValue": {
                    "expression": {
                      "id": 29237,
                      "name": "uCall",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29230,
                      "src": "7798:5:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                        "typeString": "struct UserCall calldata"
                      }
                    },
                    "id": 29238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "7804:7:28",
                    "memberName": "control",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41018,
                    "src": "7798:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7780:31:28"
                },
                {
                  "assignments": [
                    29241
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29241,
                      "mutability": "mutable",
                      "name": "callConfig",
                      "nameLocation": "7828:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29253,
                      "src": "7821:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 29240,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7821:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29246,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29244,
                        "name": "control",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29236,
                        "src": "7866:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29242,
                        "name": "CallBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38763,
                        "src": "7841:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallBits_$38763_$",
                          "typeString": "type(library CallBits)"
                        }
                      },
                      "id": 29243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7850:15:28",
                      "memberName": "buildCallConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38179,
                      "src": "7841:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view returns (uint32)"
                      }
                    },
                    "id": 29245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7841:33:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7821:53:28"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29248,
                        "name": "uCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29230,
                        "src": "7910:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      },
                      {
                        "id": 29249,
                        "name": "control",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29236,
                        "src": "7917:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29250,
                        "name": "callConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29241,
                        "src": "7926:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 29247,
                      "name": "_testUserOperation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29366,
                      "src": "7891:18:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UserCall_$41021_calldata_ptr_$_t_address_$_t_uint32_$returns$_t_bool_$",
                        "typeString": "function (struct UserCall calldata,address,uint32) view returns (bool)"
                      }
                    },
                    "id": 29251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7891:46:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29234,
                  "id": 29252,
                  "nodeType": "Return",
                  "src": "7884:53:28"
                }
              ]
            },
            "functionSelector": "16c2bac3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUserOperation",
            "nameLocation": "7698:17:28",
            "parameters": {
              "id": 29231,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29230,
                  "mutability": "mutable",
                  "name": "uCall",
                  "nameLocation": "7734:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29254,
                  "src": "7716:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                    "typeString": "struct UserCall"
                  },
                  "typeName": {
                    "id": 29229,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29228,
                      "name": "UserCall",
                      "nameLocations": [
                        "7716:8:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41021,
                      "src": "7716:8:28"
                    },
                    "referencedDeclaration": 41021,
                    "src": "7716:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserCall_$41021_storage_ptr",
                      "typeString": "struct UserCall"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7715:25:28"
            },
            "returnParameters": {
              "id": 29234,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29233,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29254,
                  "src": "7764:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29232,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7764:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7763:6:28"
            },
            "scope": 29367,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29309,
            "nodeType": "FunctionDefinition",
            "src": "7950:446:28",
            "nodes": [],
            "body": {
              "id": 29308,
              "nodeType": "Block",
              "src": "8037:359:28",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 29268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 29262,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29257,
                        "src": "8051:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      "id": 29263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8058:2:28",
                      "memberName": "to",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40996,
                      "src": "8051:9:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 29266,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "8072:4:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Atlas_$29367",
                            "typeString": "contract Atlas"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Atlas_$29367",
                            "typeString": "contract Atlas"
                          }
                        ],
                        "id": 29265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8064:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 29264,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8064:7:28",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 29267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8064:13:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8051:26:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29272,
                  "nodeType": "IfStatement",
                  "src": "8047:47:28",
                  "trueBody": {
                    "id": 29271,
                    "nodeType": "Block",
                    "src": "8079:15:28",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 29269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8087:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 29261,
                        "id": 29270,
                        "nodeType": "Return",
                        "src": "8080:12:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    29274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29274,
                      "mutability": "mutable",
                      "name": "control",
                      "nameLocation": "8111:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29308,
                      "src": "8103:15:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8103:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29278,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 29275,
                        "name": "userOp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29257,
                        "src": "8121:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                          "typeString": "struct UserOperation calldata"
                        }
                      },
                      "id": 29276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8128:4:28",
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40999,
                      "src": "8121:11:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                        "typeString": "struct UserCall calldata"
                      }
                    },
                    "id": 29277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8133:7:28",
                    "memberName": "control",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 41018,
                    "src": "8121:19:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8103:37:28"
                },
                {
                  "assignments": [
                    29280
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29280,
                      "mutability": "mutable",
                      "name": "callConfig",
                      "nameLocation": "8157:10:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29308,
                      "src": "8150:17:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 29279,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8150:6:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29285,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 29283,
                        "name": "control",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29274,
                        "src": "8195:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 29281,
                        "name": "CallBits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38763,
                        "src": "8170:8:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CallBits_$38763_$",
                          "typeString": "type(library CallBits)"
                        }
                      },
                      "id": 29282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8179:15:28",
                      "memberName": "buildCallConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38179,
                      "src": "8170:24:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (address) view returns (uint32)"
                      }
                    },
                    "id": 29284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8170:33:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8150:53:28"
                },
                {
                  "assignments": [
                    29288
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29288,
                      "mutability": "mutable",
                      "name": "dConfig",
                      "nameLocation": "8232:7:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29308,
                      "src": "8214:25:28",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DAppConfig_$41078_memory_ptr",
                        "typeString": "struct DAppConfig"
                      },
                      "typeName": {
                        "id": 29287,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 29286,
                          "name": "DAppConfig",
                          "nameLocations": [
                            "8214:10:28"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41078,
                          "src": "8214:10:28"
                        },
                        "referencedDeclaration": 41078,
                        "src": "8214:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DAppConfig_$41078_storage_ptr",
                          "typeString": "struct DAppConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29295,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 29290,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29257,
                            "src": "8253:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 29291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8260:4:28",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40999,
                          "src": "8253:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 29292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8265:7:28",
                        "memberName": "control",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41018,
                        "src": "8253:19:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29293,
                        "name": "callConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29280,
                        "src": "8274:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 29289,
                      "name": "DAppConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41078,
                      "src": "8242:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_DAppConfig_$41078_storage_ptr_$",
                        "typeString": "type(struct DAppConfig storage pointer)"
                      }
                    },
                    "id": 29294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8242:43:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DAppConfig_$41078_memory_ptr",
                      "typeString": "struct DAppConfig memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8214:71:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 29306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 29297,
                          "name": "dConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29288,
                          "src": "8317:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_memory_ptr",
                            "typeString": "struct DAppConfig memory"
                          }
                        },
                        {
                          "id": 29298,
                          "name": "userOp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29257,
                          "src": "8326:6:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_DAppConfig_$41078_memory_ptr",
                            "typeString": "struct DAppConfig memory"
                          },
                          {
                            "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                            "typeString": "struct UserOperation calldata"
                          }
                        ],
                        "id": 29296,
                        "name": "_validateUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30208,
                        "src": "8303:13:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_DAppConfig_$41078_memory_ptr_$_t_struct$_UserOperation_$41002_calldata_ptr_$returns$_t_bool_$",
                          "typeString": "function (struct DAppConfig memory,struct UserOperation calldata) view returns (bool)"
                        }
                      },
                      "id": 29299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8303:30:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 29301,
                            "name": "userOp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29257,
                            "src": "8356:6:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                              "typeString": "struct UserOperation calldata"
                            }
                          },
                          "id": 29302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8363:4:28",
                          "memberName": "call",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40999,
                          "src": "8356:11:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        {
                          "id": 29303,
                          "name": "control",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29274,
                          "src": "8369:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 29304,
                          "name": "callConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29280,
                          "src": "8378:10:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 29300,
                        "name": "_testUserOperation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29366,
                        "src": "8337:18:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_UserCall_$41021_calldata_ptr_$_t_address_$_t_uint32_$returns$_t_bool_$",
                          "typeString": "function (struct UserCall calldata,address,uint32) view returns (bool)"
                        }
                      },
                      "id": 29305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8337:52:28",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8303:86:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29261,
                  "id": 29307,
                  "nodeType": "Return",
                  "src": "8296:93:28"
                }
              ]
            },
            "functionSelector": "d2a8c540",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testUserOperation",
            "nameLocation": "7959:17:28",
            "parameters": {
              "id": 29258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29257,
                  "mutability": "mutable",
                  "name": "userOp",
                  "nameLocation": "8000:6:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29309,
                  "src": "7977:29:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserOperation_$41002_calldata_ptr",
                    "typeString": "struct UserOperation"
                  },
                  "typeName": {
                    "id": 29256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29255,
                      "name": "UserOperation",
                      "nameLocations": [
                        "7977:13:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41002,
                      "src": "7977:13:28"
                    },
                    "referencedDeclaration": 41002,
                    "src": "7977:13:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserOperation_$41002_storage_ptr",
                      "typeString": "struct UserOperation"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7976:31:28"
            },
            "returnParameters": {
              "id": 29261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29260,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29309,
                  "src": "8031:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8031:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8030:6:28"
            },
            "scope": 29367,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 29366,
            "nodeType": "FunctionDefinition",
            "src": "8402:548:28",
            "nodes": [],
            "body": {
              "id": 29365,
              "nodeType": "Block",
              "src": "8520:430:28",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 29323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 29321,
                      "name": "callConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29316,
                      "src": "8534:10:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 29322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8548:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8534:15:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29327,
                  "nodeType": "IfStatement",
                  "src": "8530:58:28",
                  "trueBody": {
                    "id": 29326,
                    "nodeType": "Block",
                    "src": "8551:37:28",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 29324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8572:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 29320,
                        "id": 29325,
                        "nodeType": "Return",
                        "src": "8565:12:28"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    29329
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 29329,
                      "mutability": "mutable",
                      "name": "executionEnvironment",
                      "nameLocation": "8606:20:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 29365,
                      "src": "8598:28:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 29328,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8598:7:28",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 29338,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29331,
                          "name": "uCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29312,
                          "src": "8673:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                            "typeString": "struct UserCall calldata"
                          }
                        },
                        "id": 29332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8679:4:28",
                        "memberName": "from",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 41004,
                        "src": "8673:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 29333,
                          "name": "control",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29314,
                          "src": "8685:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8693:8:28",
                        "memberName": "codehash",
                        "nodeType": "MemberAccess",
                        "src": "8685:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 29335,
                        "name": "control",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29314,
                        "src": "8703:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 29336,
                        "name": "callConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29316,
                        "src": "8712:10:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 29330,
                      "name": "_getExecutionEnvironmentCustom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33379
                      ],
                      "referencedDeclaration": 33379,
                      "src": "8629:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_address_$_t_uint32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32,address,uint32) view returns (address)"
                      }
                    },
                    "id": 29337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8629:94:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8598:125:28"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 29353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 29345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 29339,
                          "name": "executionEnvironment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29329,
                          "src": "8738:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8759:8:28",
                        "memberName": "codehash",
                        "nodeType": "MemberAccess",
                        "src": "8738:29:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29343,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8779:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8771:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 29341,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8771:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8771:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "8738:43:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 29352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 29346,
                          "name": "control",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29314,
                          "src": "8785:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 29347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8793:8:28",
                        "memberName": "codehash",
                        "nodeType": "MemberAccess",
                        "src": "8785:16:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 29350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8813:1:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 29349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8805:7:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 29348,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8805:7:28",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 29351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8805:10:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "8785:30:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "8738:77:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 29357,
                  "nodeType": "IfStatement",
                  "src": "8734:120:28",
                  "trueBody": {
                    "id": 29356,
                    "nodeType": "Block",
                    "src": "8817:37:28",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 29354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8838:5:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 29320,
                        "id": 29355,
                        "nodeType": "Return",
                        "src": "8831:12:28"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 29362,
                        "name": "uCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29312,
                        "src": "8937:5:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                          "typeString": "struct UserCall calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 29359,
                            "name": "executionEnvironment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29329,
                            "src": "8893:20:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 29358,
                          "name": "IExecutionEnvironment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38051,
                          "src": "8871:21:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IExecutionEnvironment_$38051_$",
                            "typeString": "type(contract IExecutionEnvironment)"
                          }
                        },
                        "id": 29360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8871:43:28",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IExecutionEnvironment_$38051",
                          "typeString": "contract IExecutionEnvironment"
                        }
                      },
                      "id": 29361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8915:21:28",
                      "memberName": "validateUserOperation",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38002,
                      "src": "8871:65:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_struct$_UserCall_$41021_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (struct UserCall memory) view external returns (bool)"
                      }
                    },
                    "id": 29363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8871:72:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 29320,
                  "id": 29364,
                  "nodeType": "Return",
                  "src": "8864:79:28"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_testUserOperation",
            "nameLocation": "8411:18:28",
            "parameters": {
              "id": 29317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29312,
                  "mutability": "mutable",
                  "name": "uCall",
                  "nameLocation": "8448:5:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29366,
                  "src": "8430:23:28",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_UserCall_$41021_calldata_ptr",
                    "typeString": "struct UserCall"
                  },
                  "typeName": {
                    "id": 29311,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 29310,
                      "name": "UserCall",
                      "nameLocations": [
                        "8430:8:28"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41021,
                      "src": "8430:8:28"
                    },
                    "referencedDeclaration": 41021,
                    "src": "8430:8:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserCall_$41021_storage_ptr",
                      "typeString": "struct UserCall"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29314,
                  "mutability": "mutable",
                  "name": "control",
                  "nameLocation": "8463:7:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29366,
                  "src": "8455:15:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 29313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:7:28",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29316,
                  "mutability": "mutable",
                  "name": "callConfig",
                  "nameLocation": "8479:10:28",
                  "nodeType": "VariableDeclaration",
                  "scope": 29366,
                  "src": "8472:17:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 29315,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8472:6:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8429:61:28"
            },
            "returnParameters": {
              "id": 29320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29319,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 29366,
                  "src": "8514:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 29318,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8514:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8513:6:28"
            },
            "scope": 29367,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 28611,
              "name": "Test",
              "nameLocations": [
                "515:4:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8158,
              "src": "515:4:28"
            },
            "id": 28612,
            "nodeType": "InheritanceSpecifier",
            "src": "515:4:28"
          },
          {
            "baseName": {
              "id": 28613,
              "name": "Factory",
              "nameLocations": [
                "521:7:28"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33504,
              "src": "521:7:28"
            },
            "id": 28614,
            "nodeType": "InheritanceSpecifier",
            "src": "521:7:28"
          }
        ],
        "canonicalName": "Atlas",
        "contractDependencies": [
          33187,
          33562
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          29367,
          33504,
          34496,
          31893,
          33877,
          41182,
          33683,
          8158,
          1843,
          1840,
          8116,
          5144,
          4755,
          3207,
          2671,
          1786,
          30309,
          29660,
          26838,
          25613
        ],
        "name": "Atlas",
        "nameLocation": "506:5:28",
        "scope": 29368,
        "usedErrors": [
          25726,
          25728,
          41159,
          41161,
          41163,
          41165,
          41167,
          41169,
          41171,
          41173,
          41175,
          41177,
          41179,
          41181
        ]
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 28
}